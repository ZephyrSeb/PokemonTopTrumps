package zephyrseb.pokemontoptrumps;

import android.content.Context;

import java.util.Random;

public enum CardRegistry {
    SUBSTITUTE(-1),
    BULBASAUR(0), IVYSAUR(0), VENUSAUR(0), CHARMANDER(0), CHARMELEON(0), CHARIZARD(0), SQUIRTLE(0), WARTORTLE(0), BLASTOISE(0), CATERPIE(0), METAPOD(0), BUTTERFREE(0), WEEDLE(0), KAKUNA(0), BEEDRILL(0),
    PIDGEY(0), PIDGEOTTO(0), PIDGEOT(0), RATTATA(0), ALOLAN_RATTATA(0), RATICATE(0), ALOLAN_RATICATE(0), SPEAROW(0), FEAROW(0), EKANS(0), ARBOK(0), PIKACHU(0), RAICHU(0), ALOLAN_RAICHU(0), SANDSHREW(0), ALOLAN_SANDSHREW(0),
    SANDSLASH(0), ALOLAN_SANDSLASH(0), NIDORANF(0), NIDORINA(0), NIDOQUEEN(0), NIDORANM(0), NIDORINO(0), NIDOKING(0), CLEFAIRY(0), CLEFABLE(0), VULPIX(0), ALOLAN_VULPIX(0), NINETALES(0), ALOLAN_NINETALES(0),
    JIGGLYPUFF(0), WIGGLYTUFF(0), ZUBAT(0), GOLBAT(0), ODDISH(0), GLOOM(0), VILEPLUME(0), PARAS(0), PARASECT(0), VENONAT(0), VENOMOTH(0), DIGLETT(0), ALOLAN_DIGLETT(0), DUGTRIO(0), ALOLAN_DUGTRIO(0), MEOWTH(0), ALOLAN_MEOWTH(0),
    GALARIAN_MEOWTH(0), PERSIAN(0), ALOLAN_PERSIAN(0), PSYDUCK(0), GOLDUCK(0), MANKEY(0), PRIMEAPE(0), GROWLITHE(0), HISUIAN_GROWLITHE(0), ARCANINE(0), HISUIAN_ARCANINE(0), POLIWAG(0), POLIWHIRL(0), POLIWRATH(0),
    ABRA(0), KADABRA(0), ALAKAZAM(0), MACHOP(0), MACHOKE(0), MACHAMP(0), BELLSPROUT(0), WEEPINBELL(0), VICTREEBEL(0), TENTACOOL(0), TENTACRUEL(0), GEODUDE(0), ALOLAN_GEODUDE(0), GRAVELER(0), ALOLAN_GRAVELER(0), GOLEM(0),
    ALOLAN_GOLEM(0), PONYTA(0), GALARIAN_PONYTA(0), RAPIDASH(0), GALARIAN_RAPIDASH(0), SLOWPOKE(0), GALARIAN_SLOWPOKE(0), SLOWBRO(0), MEGA_SLOWBRO(0), GALARIAN_SLOWBRO(0), MAGNEMITE(0), MAGNETON(0), FARFETCHD(0),
    GALARIAN_FARFETCHD(0), DODUO(0), DODRIO(0), SEEL(0), DEWGONG(0), GRIMER(0), ALOLAN_GRIMER(0), MUK(0), ALOLAN_MUK(0), SHELLDER(0), CLOYSTER(0), GASTLY(0), HAUNTER(0), GENGAR(0), ONIX(0), DROWZEE(0), HYPNO(0), KRABBY(0), KINGLER(0),
    VOLTORB(0), HISUIAN_VOLTORB(0), ELECTRODE(0), HISUIAN_ELECTRODE(0), EXEGGCUTE(0), EXEGGUTOR(0), ALOLAN_EXEGGUTOR(0), CUBONE(0), MAROWAK(0), ALOLAN_MAROWAK(0), HITMONLEE(0), HITMONCHAN(0), LICKITUNG(0),
    KOFFING(0), WEEZING(0), GALARIAN_WEEZING(0), RHYHORN(0), RHYDON(0), CHANSEY(0), TANGELA(0), KANGASKHAN(0), HORSEA(0), SEADRA(0), GOLDEEN(0), SEAKING(0), STARYU(0), STARMIE(0), MR_MIME(0), GALARIAN_MR_MIME(0), SCYTHER(0),
    JYNX(0), ELECTABUZZ(0), MAGMAR(0), PINSIR(0), TAUROS(0), PALDEAN_TAUROS_COMBAT(0), PALDEAN_TAUROS_BLAZE(0), PALDEAN_TAUROS_AQUA(0), MAGIKARP(0), GYARADOS(0), LAPRAS(0), DITTO(0), EEVEE(0), VAPOREON(0), JOLTEON(0), FLAREON(0), PORYGON(0), OMANYTE(0), OMASTAR(0), KABUTO(0), KABUTOPS(0),
    AERODACTYL(0), SNORLAX(0), ARTICUNO(0), GALARIAN_ARTICUNO(0), ZAPDOS(0), GALARIAN_ZAPDOS(0), MOLTRES(0), GALARIAN_MOLTRES(0), DRATINI(0), DRAGONAIR(0), DRAGONITE(0), MEWTWO(0), MEW(0),
    CHIKORITA(1), BAYLEEF(1), MEGANIUM(1), CYNDAQUIL(1), QUILAVA(1), TYPHLOSION(1), HISUIAN_TYPHLOSION(1), TOTODILE(1), CROCONAW(1), FERALIGATR(1), SENTRET(1), FURRET(1), HOOTHOOT(1), NOCTOWL(1), LEDYBA(1), LEDIAN(1),
    SPINARAK(1), ARIADOS(1), CROBAT(1), CHINCHOU(1), LANTURN(1), PICHU(1), CLEFFA(1), IGGLYBUFF(1), TOGEPI(1), TOGETIC(1), NATU(1), XATU(1), MAREEP(1), FLAAFFY(1), AMPHAROS(1), BELLOSSOM(1), MARILL(1), AZUMARILL(1), SUDOWOODO(1),
    POLITOED(1), HOPPIP(1), SKIPLOOM(1), JUMPLUFF(1), AIPOM(1), SUNKERN(1), SUNFLORA(1), YANMA(1), WOOPER(1), PALDEAN_WOOPER(1), QUAGSIRE(1), ESPEON(1), UMBREON(1), MURKROW(1), SLOWKING(1), GALARIAN_SLOWKING(1),
    MISDREAVUS(1), UNOWN(1), WOBBUFFET(1), GIRAFARIG(1), PINECO(1), FORRETRESS(1), DUNSPARCE(1), GLIGAR(1), STEELIX(1), SNUBBULL(1), GRANBULL(1), QWILFISH(1), HISUIAN_QWILFISH(1), SCIZOR(1), SHUCKLE(1), HERACROSS(1),
    SNEASEL(1), HISUIAN_SNEASEL(1), TEDDIURSA(1), URSARING(1), SLUGMA(1), MAGCARGO(1), SWINUB(1), PILOSWINE(1), CORSOLA(1), GALARIAN_CORSOLA(1), REMORAID(1), OCTILLERY(1), DELIBIRD(1), MANTINE(1), SKARMORY(1),
    HOUNDOUR(1), HOUNDOOM(1), KINGDRA(1), PHANPY(1), DONPHAN(1), PORYGON2(1), STANTLER(1), SMEARGLE(1), TYROGUE(1), HITMONTOP(1), SMOOCHUM(1), ELEKID(1), MAGBY(1), MILTANK(1), BLISSEY(1), RAIKOU(1), ENTEI(1), SUICUNE(1),
    LARVITAR(1), PUPITAR(1), TYRANITAR(1), LUGIA(1), HO_OH(1), CELEBI(1), TREECKO(2), GROVYLE(2), SCEPTILE(2), TORCHIC(2), COMBUSKEN(2), BLAZIKEN(2), MUDKIP(2), MARSHTOMP(2), SWAMPERT(2), POOCHYENA(2), MIGHTYENA(2),
    ZIGZAGOON(2), GALARIAN_ZIGZAGOON(2), LINOONE(2), GALARIAN_LINOONE(2), WURMPLE(2), SILCOON(2), BEAUTIFLY(2), CASCOON(2), DUSTOX(2), LOTAD(2), LOMBRE(2), LUDICOLO(2), SEEDOT(2), NUZLEAF(2), SHIFTRY(2), TAILLOW(2), SWELLOW(2),
    WINGULL(2), PELIPPER(2), RALTS(2), KIRLIA(2), GARDEVOIR(2), SURSKIT(2), MASQUERAIN(2), SHROOMISH(2), BRELOOM(2), SLAKOTH(2), VIGOROTH(2), SLAKING(2), NINCADA(2), NINJASK(2), SHEDINJA(2), WHISMUR(2), LOUDRED(2), EXPLOUD(2),
    MAKUHITA(2), HARIYAMA(2), AZURILL(2), NOSEPASS(2), SKITTY(2), DELCATTY(2), SABLEYE(2), MAWILE(2), ARON(2), LAIRON(2), AGGRON(2), MEDITITE(2), MEDICHAM(2), ELECTRIKE(2), MANECTRIC(2), PLUSLE(2), MINUN(2), VOLBEAT(2), ILLUMISE(2),
    ROSELIA(2), GULPIN(2), SWALOT(2), CARVANHA(2), SHARPEDO(2), WAILMER(2), WAILORD(2), NUMEL(2), CAMERUPT(2), TORKOAL(2), SPOINK(2), GRUMPIG(2), SPINDA(2), TRAPINCH(2), VIBRAVA(2), FLYGON(2), CACNEA(2), CACTURNE(2), SWABLU(2), ALTARIA(2),
    ZANGOOSE(2), SEVIPER(2), LUNATONE(2), SOLROCK(2), BARBOACH(2), WHISCASH(2), CORPHISH(2), CRAWDAUNT(2), BALTOY(2), CLAYDOL(2), LILEEP(2), CRADILY(2), ANORITH(2), ARMALDO(2), FEEBAS(2), MILOTIC(2), CASTFORM(2), KECLEON(2), SHUPPET(2),
    BANETTE(2), DUSKULL(2), DUSCLOPS(2), TROPIUS(2), CHIMECHO(2), ABSOL(2), WYNAUT(2), SNORUNT(2), GLALIE(2), SPHEAL(2), SEALEO(2), WALREIN(2), CLAMPERL(2), HUNTAIL(2), GOREBYSS(2), RELICANTH(2), LUVDISC(2), BAGON(2), SHELGON(2),
    SALAMENCE(2), BELDUM(2), METANG(2), METAGROSS(2), REGIROCK(2), REGICE(2), REGISTEEL(2), LATIAS(2), LATIOS(2), KYOGRE(2), GROUDON(2), RAYQUAZA(2), JIRACHI(2), DEOXYS(2), TURTWIG(3), GROTLE(3), TORTERRA(3), CHIMCHAR(3),
    MONFERNO(3), INFERNAPE(3), PIPLUP(3), PRINPLUP(3), EMPOLEON(3), STARLY(3), STARAVIA(3), STARAPTOR(3), BIDOOF(3), BIBAREL(3), KRICKETOT(3), KRICKETUNE(3), SHINX(3), LUXIO(3), LUXRAY(3), BUDEW(3), ROSERADE(3), CRANIDOS(3), RAMPARDOS(3),
    SHIELDON(3), BASTIODON(3), BURMY_PLANT_CLOAK(3), BURMY_SANDY_CLOAK(3), BURMY_TRASH_CLOAK(3), WORMADAM_PLANT_CLOAK(3), WORMADAM_SANDY_CLOAK(3), WORMADAM_TRASH_CLOAK(3), MOTHIM(3), COMBEE(3), VESPIQUEN(3),
    PACHIRISU(3), BUIZEL(3), FLOATZEL(3), CHERUBI(3), CHERRIM(3), SHELLOS(3), GASTRODON(3), AMBIPOM(3), DRIFLOON(3), DRIFBLIM(3), BUNEARY(3), LOPUNNY(3), MISMAGIUS(3), HONCHKROW(3), GLAMEOW(3), PURUGLY(3), CHINGLING(3),
    STUNKY(3), SKUNTANK(3), BRONZOR(3), BRONZONG(3), BONSLY(3), MIME_JR(3), HAPPINY(3), CHATOT(3), SPIRITOMB(3), GIBLE(3), GABITE(3), GARCHOMP(3), MUNCHLAX(3), RIOLU(3), LUCARIO(3), HIPPOPOTAS(3), HIPPOWDON(3), SKORUPI(3), DRAPION(3),
    CROAGUNK(3), TOXICROAK(3), CARNIVINE(3), FINNEON(3), LUMINEON(3), MANTYKE(3), SNOVER(3), ABOMASNOW(3), WEAVILE(3), MAGNEZONE(3), LICKILICKY(3), RHYPERIOR(3), TANGROWTH(3), ELECTIVIRE(3), MAGMORTAR(3), TOGEKISS(3), YANMEGA(3),
    LEAFEON(3), GLACEON(3), GLISCOR(3), MAMOSWINE(3), PORYGON_Z(3), GALLADE(3), PROBOPASS(3), DUSKNOIR(3), FROSLASS(3), ROTOM(3), HEAT_ROTOM(3), WASH_ROTOM(3), FROST_ROTOM(3), FAN_ROTOM(3), MOW_ROTOM(3), UXIE(3), MESPRIT(3), AZELF(3),
    DIALGA(3), DIALGA_ORIGIN(3), PALKIA(3), PALKIA_ORIGIN(3), HEATRAN(3), REGIGIGAS(3), GIRATINA(3), GIRATINA_ORIGIN(3), CRESSELIA(3), PHIONE(3), MANAPHY(3), DARKRAI(3), SHAYMIN_LAND_FORME(3), SHAYMIN_SKY_FORME(3), ARCEUS(3), VICTINI(4), SNIVY(4), SERVINE(4), SERPERIOR(4),
    TEPIG(4), PIGNITE(4), EMBOAR(4), OSHAWOTT(4), DEWOTT(4), SAMUROTT(4), HISUIAN_SAMUROTT(4), PATRAT(4), WATCHOG(4), LILLIPUP(4), HERDIER(4), STOUTLAND(4), PURRLOIN(4), LIEPARD(4), PANSAGE(4), SIMISAGE(4), PANSEAR(4), SIMISEAR(4),
    PANPOUR(4), SIMIPOUR(4), MUNNA(4), MUSHARNA(4), PIDOVE(4), TRANQUILL(4), UNFEZANT(4), BLITZLE(4), ZEBSTRIKA(4), ROGGENROLA(4), BOLDORE(4), GIGALITH(4), WOOBAT(4), SWOOBAT(4), DRILBUR(4), EXCADRILL(4), AUDINO(4),
    TIMBURR(4), GURDURR(4), CONKELDURR(4), TYMPOLE(4), PALPITOAD(4), SEISMITOAD(4), THROH(4), SAWK(4), SEWADDLE(4), SWADLOON(4), LEAVANNY(4), VENIPEDE(4), WHIRLIPEDE(4), SCOLIPEDE(4), COTTONEE(4), WHIMSICOTT(4),
    PETILIL(4), LILLIGANT(4), HISUIAN_LILLIGANT(4), BASCULIN_RED(4), BASCULIN_BLUE(4), BASCULIN_WHITE_STRIPED(4), SANDILE(4), KROKOROK(4), KROOKODILE(4), DARUMAKA(4), GALARIAN_DARUMAKA(4), DARMANITAN_STANDARD_MODE(4),
    DARMANITAN_ZEN_MODE(4), GALARIAN_DARMANITAN_STANDARD_MODE(4), GALARIAN_DARMANITAN_ZEN_MODE(4), MARACTUS(4), DWEBBLE(4), CRUSTLE(4), SCRAGGY(4), SCRAFTY(4), SIGILYPH(4), YAMASK(4), GALARIAN_YAMASK(4),
    COFAGRIGUS(4), TIRTOUGA(4), CARRACOSTA(4), ARCHEN(4), ARCHEOPS(4), TRUBBISH(4), GARBODOR(4), ZORUA(4), HISUIAN_ZORUA(4), ZOROARK(4), HISUIAN_ZOROARK(4), MINCCINO(4), CINCCINO(4), GOTHITA(4), GOTHORITA(4), GOTHITELLE(4),
    SOLOSIS(4), DUOSION(4), REUNICLUS(4), DUCKLETT(4), SWANNA(4), VANILLITE(4), VANILLISH(4), VANILLUXE(4), DEERLING(4), SAWSBUCK(4), EMOLGA(4), KARRABLAST(4), ESCAVALIER(4), FOONGUS(4), AMOONGUSS(4), FRILLISH(4), JELLICENT(4),
    ALOMOMOLA(4), JOLTIK(4), GALVANTULA(4), FERROSEED(4), FERROTHORN(4), KLINK(4), KLANG(4), KLINKLANG(4), TYNAMO(4), EELEKTRIK(4), EELEKTROSS(4), ELGYEM(4), BEHEEYEM(4), LITWICK(4), LAMPENT(4), CHANDELURE(4), AXEW(4), FRAXURE(4),
    HAXORUS(4), CUBCHOO(4), BEARTIC(4), CRYOGONAL(4), SHELMET(4), ACCELGOR(4), STUNFISK(4), GALARIAN_STUNFISK(4), MIENFOO(4), MIENSHAO(4), DRUDDIGON(4), GOLETT(4), GOLURK(4), PAWNIARD(4), BISHARP(4), BOUFFALANT(4), RUFFLET(4),
    BRAVIARY(4), HISUIAN_BRAVIARY(4), VULLABY(4), MANDIBUZZ(4), HEATMOR(4), DURANT(4), DEINO(4), ZWEILOUS(4), HYDREIGON(4), LARVESTA(4), VOLCARONA(4), COBALION(4), TERRAKION(4), VIRIZION(4), TORNADUS_INCARNATE_FORME(4),
    TORNADUS_THERIAN_FORME(4), THUNDURUS_INCARNATE_FORME(4), THUNDURUS_THERIAN_FORME(4), RESHIRAM(4), ZEKROM(4), LANDORUS_INCARNATE_FORME(4), LANDORUS_THERIAN_FORME(4), KYUREM(4), BLACK_KYUREM(4),
    WHITE_KYUREM(4), KELDEO(4), MELOETTA_ARIA_FORME(4), MELOETTA_PIROUETTE_FORME(4), GENESECT(4), CHESPIN(5), QUILLADIN(5), CHESNAUGHT(5), FENNEKIN(5), BRAIXEN(5), DELPHOX(5), FROAKIE(5), FROGADIER(5), GRENINJA(5), BATTLEBOND_GRENINJA(5), BUNNELBY(5), DIGGERSBY(5),
    FLETCHLING(5), FLETCHINDER(5), TALONFLAME(5), SCATTERBUG(5), SPEWPA(5), VIVILLON(5), LITLEO(5), PYROAR(5), FLABEBE(5), FLOETTE(5), FLORGES(5), SKIDDO(5), GOGOAT(5), PANCHAM(5), PANGORO(5), FURFROU(5), ESPURR(5), MEOWSTIC(5),
    HONEDGE(5), DOUBLADE(5), AEGISLASH_SHIELD_FORME(5), AEGISLASH_BLADE_FORME(5), SPRITZEE(5), AROMATISSE(5), SWIRLIX(5), SLURPUFF(5), INKAY(5), MALAMAR(5), BINACLE(5), BARBARACLE(5), SKRELP(5), DRAGALGE(5), CLAUNCHER(5), CLAWITZER(5), HELIOPTILE(5),
    HELIOLISK(5), TYRUNT(5), TYRANTRUM(5), AMAURA(5), AURORUS(5), SYLVEON(5), HAWLUCHA(5), DEDENNE(5), CARBINK(5), GOOMY(5), SLIGGOO(5), HISUIAN_SLIGGOO(5), GOODRA(5), HISUIAN_GOODRA(5), KLEFKI(5), PHANTUMP(5), TREVENANT(5),
    PUMPKABOO(5), GOURGEIST(5), BERGMITE(5), AVALUGG(5), HISUIAN_AVALUGG(5), NOIBAT(5), NOIVERN(5), XERNEAS(5), YVELTAL(5), ZYGARDE_CELL(5), ZYGARDE_CORE(5), ZYGARDE_50_FORME(5), ZYGARDE_10_FORME(5), ZYGARDE_COMPLETE_FORME(5), DIANCIE(5),
    HOOPA_CONFINED(5), HOOPA_UNBOUND(5), VOLCANION(5), ROWLET(6), DARTRIX(6), DECIDUEYE(6), HISUIAN_DECIDUEYE(6), LITTEN(6), TORRACAT(6), INCINEROAR(6), POPPLIO(6), BRIONNE(6), PRIMARINA(6), PIKIPEK(6), TRUMBEAK(6),
    TOUCANNON(6), YUNGOOS(6), GUMSHOOS(6), GRUBBIN(6), CHARJABUG(6), VIKAVOLT(6), CRABRAWLER(6), CRABOMINABLE(6), ORICORIO_BAILE_STYLE(6), ORICORIO_POM_POM_STYLE(6), ORICORIO_PAU_STYLE(6), ORICORIO_SENSU_STYLE(6),
    CUTIEFLY(6), RIBOMBEE(6), ROCKRUFF(6), LYCANROC_MIDDAY_FORM(6), LYCANROC_MIDNIGHT_FORM(6), LYCANROC_DUSK_FORM(6), WISHIWASHI(6), WISHIWASHI_SCHOOLING(6), MAREANIE(6), TOXAPEX(6), MUDBRAY(6), MUDSDALE(6),
    DEWPIDER(6), ARAQUANID(6), FOMANTIS(6), LURANTIS(6), MORELULL(6), SHIINOTIC(6), SALANDIT(6), SALAZZLE(6), STUFFUL(6), BEWEAR(6), BOUNSWEET(6), STEENEE(6), TSAREENA(6), COMFEY(6), ORANGURU(6), PASSIMIAN(6), WIMPOD(6),
    GOLISOPOD(6), SANDYGAST(6), PALOSSAND(6), PYUKUMUKU(6), TYPE_NULL(6), SILVALLY(6), MINIOR_METEOR(6), MINIOR_CORE(6), KOMALA(6), TURTONATOR(6), TOGEDEMARU(6), MIMIKYU(6), BRUXISH(6), DRAMPA(6), DHELMISE(6), JANGMO_O(6),
    HAKAMO_O(6), KOMMO_O(6), TAPU_KOKO(6), TAPU_LELE(6), TAPU_BULU(6), TAPU_FINI(6), COSMOG(6), COSMOEM(6), SOLGALEO(6), LUNALA(6), NIHILEGO(6), BUZZWOLE(6), PHEROMOSA(6), XURKITREE(6), CELESTEELA(6), KARTANA(6), GUZZLORD(6),
    NECROZMA(6), DUSK_MANE_NECROZMA(6), DAWN_WINGS_NECROZMA(6), MAGEARNA(6), MARSHADOW(6), POIPOLE(6), NAGANADEL(6), STAKATAKA(6), BLACEPHALON(6), ZERAORA(6), MELTAN(6), MELMETAL(6), GROOKEY(7), THWACKEY(7),
    RILLABOOM(7), SCORBUNNY(7), RABOOT(7), CINDERACE(7), SOBBLE(7), DRIZZILE(7), INTELEON(7), SKWOVET(7), GREEDENT(7), ROOKIDEE(7), CORVISQUIRE(7), CORVIKNIGHT(7), BLIPBUG(7), DOTTLER(7), ORBEETLE(7), NICKIT(7), THIEVUL(7),
    GOSSIFLEUR(7), ELDEGOSS(7), WOOLOO(7), DUBWOOL(7), CHEWTLE(7), DREDNAW(7), YAMPER(7), BOLTUND(7), ROLYCOLY(7), CARKOL(7), COALOSSAL(7), APPLIN(7), FLAPPLE(7), APPLETUN(7), SILICOBRA(7), SANDACONDA(7), CRAMORANT(7), ARROKUDA(7),
    BARRASKEWDA(7), TOXEL(7), TOXTRICITY(7), SIZZLIPEDE(7), CENTISKORCH(7), CLOBBOPUS(7), GRAPPLOCT(7), SINISTEA(7), POLTEAGEIST(7), HATENNA(7), HATTREM(7), HATTERENE(7), IMPIDIMP(7), MORGREM(7), GRIMMSNARL(7), OBSTAGOON(7),
    PERRSERKER(7), CURSOLA(7), SIRFETCHD(7), MR_RIME(7), RUNERIGUS(7), MILCERY(7), ALCREMIE(7), FALINKS(7), PINCURCHIN(7), SNOM(7), FROSMOTH(7), STONJOURNER(7), EISCUE(7), INDEEDEE(7), MORPEKO(7), CUFANT(7),
    COPPERAJAH(7), DRACOZOLT(7), ARCTOZOLT(7), DRACOVISH(7), ARCTOVISH(7), DURALUDON(7), DREEPY(7), DRAKLOAK(7), DRAGAPULT(7), ZACIAN(7), ZAMAZENTA(7), ETERNATUS(7), KUBFU(7), URSHIFU_SINGLE_STRIKE(7),
    URSHIFU_RAPID_STRIKE(7), ZARUDE(7), REGIELEKI(7), REGIDRAGO(7), GLASTRIER(7), SPECTRIER(7), CALYREX(7), ICE_RIDER_CALYREX(7), SHADOW_RIDER_CALYREX(7), WYRDEER(7), KLEAVOR(7), URSALUNA(7), BLOODMOON_URSALUNA(7),
    BASCULEGION(7), SNEASLER(7), OVERQWIL(7), ENAMORUS_INCARNATE_FORME(7), ENAMORUS_THERIAN_FORME(7), SPRIGATITO(8), FLORAGATO(8), MEOWSCARADA(8), FUECOCO(8), CROCALOR(8),
    SKELEDIRGE(8), QUAXLY(8), QUAXWELL(8), QUAQUAVAL(8), LECHONK(8), OINKOLOGNE(8), TAROUNTULA(8), SPIDOPS(8), NYMBLE(8), LOKIX(8), PAWMI(8), PAWMO(8), PAWMOT(8), TANDEMAUS(8), MAUSHOLD(8), FIDOUGH(8), DACHSBUN(8), SMOLIV(8),
    DOLLIV(8), ARBOLIVA(8), SQUAWKABILLY(8), NACLI(8), NACLSTACK(8), GARGANACL(8), CHARCADET(8), ARMAROUGE(8), CERULEDGE(8), TADBULB(8), BELLIBOLT(8), WATTREL(8), KILOWATTREL(8), MASCHIFF(8), MABOSSTIFF(8), SHROODLE(8),
    GRAFAIAI(8), BRAMBLIN(8), BRAMBLEGHAST(8), TOEDSCOOL(8), TOEDSCRUEL(8), KLAWF(8), CAPSAKID(8), SCOVILLAIN(8), RELLOR(8), RABSCA(8), FLITTLE(8), ESPATHRA(8), TINKATINK(8), TINKATUFF(8), TINKATON(8), WIGLETT(8), WUGTRIO(8),
    BOMBIRDIER(8), FINIZEN(8), PALAFIN_ZERO(8), PALAFIN_HERO(8), VAROOM(8), REVAVROOM(8), CYCLIZAR(8), ORTHWORM(8), GLIMMET(8), GLIMMORA(8), GREAVARD(8), HOUNDSTONE(8), FLAMIGO(8), CETODDLE(8), CETITAN(8), VELUZA(8), DONDOZO(8), TATSUGIRI_CURLY(8), TATSUGIRI_DROOPY(8), TATSUGIRI_STRETCHY(8),
    ANNIHILAPE(8), CLODSIRE(8), FARIGIRAF(8), DUDUNSPARCE(8), KINGAMBIT(8), GREAT_TUSK(8), SCREAM_TAIL(8), BRUTE_BONNET(8), FLUTTER_MANE(8), SLITHER_WING(8), SANDY_SHOCKS(8), IRON_TREADS(8), IRON_BUNDLE(8),
    IRON_HANDS(8), IRON_JUGULIS(8), IRON_MOTH(8), IRON_THORNS(8), FRIGIBAX(8), ARCTIBAX(8), BAXCALIBUR(8), GIMMIGHOUL_CHEST_FORM(8), GIMMIGHOUL_ROAMING_FORM(8), GHOLDENGO(8), WO_CHIEN(8), CHIEN_PAO(8), TING_LU(8),
    CHI_YU(8), ROARING_MOON(8), IRON_VALIANT(8), KORAIDON(8), MIRAIDON(8), WALKING_WAKE(8), IRON_LEAVES(8), DIPPLIN(8), POLTCHAGEIST(8), SINISTCHA(8), OKIDOGI(8), MUNKIDORI(8), FEZANDIPITI(8), OGERPON(8), ARCHALUDON(8),
    HYDRAPPLE(8), GOUGING_FIRE(8), RAGING_BOLT(8), IRON_BOULDER(8), IRON_CROWN(8), TERAPAGOS(8), TERAPAGOS_TERASTAL(8), PECHARUNT(8), CHERRIM_SUNNY(3), CASTFORM_SUN(2), CASTFORM_RAIN(2), CASTFORM_SNOW(2);

    private final int gen;

    CardRegistry(int g) {
        gen = g;
    }

    private int getGen() {
        return gen;
    }
    public static Card initCard(Context ctx, CardRegistry cr) {
        return switch (cr.getGen()) {
            case -1 -> initCardS(ctx, cr);
            case 0 -> initCard1(ctx, cr);
            case 1 -> initCard2(ctx, cr);
            case 2 -> initCard3(ctx, cr);
            case 3 -> initCard4(ctx, cr);
            case 4 -> initCard5(ctx, cr);
            case 5 -> initCard6(ctx, cr);
            case 6 -> initCard7(ctx, cr);
            case 7 -> initCard8(ctx, cr);
            case 8 -> initCard9(ctx, cr);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCardS(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case SUBSTITUTE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_substitute), R.drawable.pokemon_substitute, Type.NORMAL, Ability.SUBSTITUTE_DOLL, 0, 0, 0, 0, 0, 0, 0, 0, null, "").setPointValue(0);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard1(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case BULBASAUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bulbasaur), R.drawable.pokemon_bulbasaur, Type.GRASS, Ability.OVERGROW, 45, 49, 49, 65, 65, 45, 44, 46, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bulbasaur)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case IVYSAUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ivysaur), R.drawable.pokemon_ivysaur, Type.GRASS, Ability.OVERGROW, 60, 62, 63, 80, 80, 60, 62, 58, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_ivysaur)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case VENUSAUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_venusaur), R.drawable.pokemon_venusaur, Type.GRASS, Ability.OVERGROW, 80, 82, 83, 100, 100, 80, 93, 67, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_venusaur), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_venusaur), R.drawable.pokemon_mega_venusaur, Type.GRASS, Ability.MEGA_OVERGROWTH, 80, 100, 123, 122, 120, 80, 94, 66, Type.FIRE, "")).setPointValue(5);
            case CHARMANDER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_charmander), R.drawable.pokemon_charmander, Type.FIRE, Ability.BLAZE, 39, 52, 43, 60, 50, 65, 65, 65, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_charmander)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CHARMELEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_charmeleon), R.drawable.pokemon_charmeleon, Type.FIRE, Ability.BLAZE, 58, 64, 58, 80, 65, 80, 85, 75, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_charmeleon)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case CHARIZARD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_charizard), R.drawable.pokemon_charizard, Type.FIRE, Ability.BLAZE, 78, 84, 78, 109, 85, 100, 115, 85, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_charizard), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_charizard_x), R.drawable.pokemon_mega_charizard_x, Type.FIRE, Ability.MEGA_FLARE, 78, 130, 111, 130, 85, 100, 116, 84, Type.WATER, "")).setPointValue(6);
            case SQUIRTLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_squirtle), R.drawable.pokemon_squirtle, Type.WATER, Ability.TORRENT, 44, 48, 65, 50, 64, 43, 43, 43, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_squirtle)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case WARTORTLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wartortle), R.drawable.pokemon_wartortle, Type.WATER, Ability.TORRENT, 59, 63, 80, 65, 80, 58, 62, 54, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wartortle)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case BLASTOISE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_blastoise), R.drawable.pokemon_blastoise, Type.WATER, Ability.TORRENT, 79, 83, 100, 85, 105, 78, 100, 66, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_blastoise), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_blastoise), R.drawable.pokemon_mega_blastoise, Type.WATER, Ability.MEGA_GEYSER, 79, 103, 120, 135, 115, 78, 110, 66, Type.ELECTRIC, "")).setPointValue(5);
            case CATERPIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_caterpie), R.drawable.pokemon_caterpie, Type.GRASS, null, 45, 30, 35, 20, 20, 45, 30, 30, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_caterpie)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case METAPOD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_metapod), R.drawable.pokemon_metapod, Type.GRASS, Ability.HARDEN, 50, 20, 55, 25, 25, 30, 35, 35, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_metapod)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BUTTERFREE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_butterfree), R.drawable.pokemon_butterfree, Type.GRASS, null, 60, 45, 50, 90, 80, 70, 44, 63, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_butterfree), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_butterfree), R.drawable.pokemon_mega_butterfree, Type.GRASS, Ability.MEGA_OVERGROWTH, 60, 45, 50, 110, 140, 90, 64, 63, Type.FIRE, "")).setPointValue(4);
            case WEEDLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_weedle), R.drawable.pokemon_weedle, Type.GRASS, null, 40, 35, 30, 20, 20, 50, 30, 30, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_weedle)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case KAKUNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kakuna), R.drawable.pokemon_kakuna, Type.GRASS, Ability.HARDEN, 45, 25, 50, 25, 25, 35, 35, 35, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_kakuna)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BEEDRILL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_beedrill), R.drawable.pokemon_beedrill, Type.GRASS, null, 65, 90, 40, 45, 80, 75, 82, 68, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_beedrill), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_beedrill), R.drawable.pokemon_mega_beedrill, Type.GRASS, Ability.MEGA_OVERGROWTH, 65, 150, 40, 15, 80, 145, 161, 129, Type.FIRE, "")).setPointValue(4);
            case PIDGEY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pidgey), R.drawable.pokemon_pidgey, Type.NORMAL, Ability.TAILWIND, 40, 45, 40, 35, 35, 56, 44, 68, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_pidgey)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PIDGEOTTO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pidgeotto), R.drawable.pokemon_pidgeotto, Type.NORMAL, Ability.TAILWIND, 63, 60, 55, 50, 50, 71, 78, 72, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_pidgeotto)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PIDGEOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pidgeot), R.drawable.pokemon_pidgeot, Type.NORMAL, Ability.TAILWIND, 83, 80, 75, 70, 70, 101, 112, 90, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_pidgeot), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_pidgeot), R.drawable.pokemon_mega_pidgeot, Type.NORMAL, Ability.MEGA_AIRSTREAM, 83, 80, 80, 135, 80, 121, 136, 106, Type.ELECTRIC, "")).setPointValue(5);
            case RATTATA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rattata), R.drawable.pokemon_rattata, Type.NORMAL, null, 30, 56, 35, 25, 35, 72, 64, 80, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_rattata)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ALOLAN_RATTATA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_rattata), R.drawable.pokemon_alolan_rattata, Type.DARK, null, 30, 56, 35, 25, 35, 72, 65, 79, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_alolan_rattata)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case RATICATE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_raticate), R.drawable.pokemon_raticate, Type.NORMAL, null, 55, 81, 60, 50, 70, 97, 103, 91, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_raticate)).setPointValue(5);
            case ALOLAN_RATICATE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_raticate), R.drawable.pokemon_alolan_raticate, Type.DARK, null, 75, 71, 70, 40, 80, 77, 84, 70, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_alolan_raticate)).setPointValue(4);
            case SPEAROW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spearow), R.drawable.pokemon_spearow, Type.NORMAL, null, 40, 60, 30, 31, 31, 70, 56, 84, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_spearow)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case FEAROW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fearow), R.drawable.pokemon_fearow, Type.NORMAL, null, 65, 90, 65, 61, 61, 100, 111, 89, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_fearow)).setPointValue(5);
            case EKANS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ekans), R.drawable.pokemon_ekans, Type.DARK, Ability.INTIMIDATE, 35, 60, 44, 40, 54, 55, 53, 57, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_ekans)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ARBOK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arbok), R.drawable.pokemon_arbok, Type.DARK, Ability.INTIMIDATE, 60, 95, 69, 65, 79, 80, 91, 69, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_arbok)).setPointValue(4);
            case PIKACHU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pikachu), R.drawable.pokemon_pikachu, Type.ELECTRIC, null, 35, 55, 40, 50, 50, 90, 86, 94, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_pikachu)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.GULP_MISSILE_STATIC).setPointValue(4);
            case RAICHU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_raichu), R.drawable.pokemon_raichu, Type.ELECTRIC, null, 60, 90, 55, 90, 80, 110, 120, 100, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_raichu)).setPointValue(6);
            case ALOLAN_RAICHU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_raichu), R.drawable.pokemon_alolan_raichu, Type.ELECTRIC, Ability.SURGE_SURFER, 60, 85, 50, 95, 85, 110, 118, 102, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_alolan_raichu)).setPointValue(6);
            case SANDSHREW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sandshrew), R.drawable.pokemon_sandshrew, Type.GROUND, Ability.SAND_RUSH, 50, 75, 85, 20, 30, 40, 41, 39, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_sandshrew)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ALOLAN_SANDSHREW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_sandshrew), R.drawable.pokemon_alolan_sandshrew, Type.ICE, Ability.SLUSH_RUSH, 50, 75, 90, 10, 35, 40, 45, 35, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_alolan_sandshrew)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SANDSLASH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sandslash), R.drawable.pokemon_sandslash, Type.GROUND, Ability.SAND_RUSH, 75, 100, 110, 45, 55, 65, 71, 59, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_sandslash)).setPointValue(4);
            case ALOLAN_SANDSLASH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_sandslash), R.drawable.pokemon_alolan_sandslash, Type.ICE, Ability.SLUSH_RUSH, 75, 100, 120, 25, 65, 65, 73, 57, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_alolan_sandslash)).setPointValue(4);
            case NIDORANF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nidoranf), R.drawable.pokemon_nidoranf, Type.GROUND, Ability.POISON_POINT, 55, 47, 52, 40, 40, 41, 40, 42, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_nidoranf)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case NIDORINA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nidorina), R.drawable.pokemon_nidorina, Type.GROUND, Ability.POISON_POINT, 70, 62, 67, 55, 55, 56, 60, 52, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_nidorina)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case NIDOQUEEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nidoqueen), R.drawable.pokemon_nidoqueen, Type.GROUND, Ability.POISON_POINT, 90, 92, 87, 75, 85, 76, 86, 66, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_nidoqueen)).setPointValue(4);
            case NIDORANM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nidoranm), R.drawable.pokemon_nidoranm, Type.GROUND, Ability.POISON_POINT, 46, 57, 40, 40, 40, 50, 50, 50, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_nidoranm)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case NIDORINO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nidorino), R.drawable.pokemon_nidorino, Type.GROUND, Ability.POISON_POINT, 61, 72, 57, 55, 55, 65, 69, 61, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_nidorino)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case NIDOKING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nidoking), R.drawable.pokemon_nidoking, Type.GROUND, Ability.POISON_POINT, 81, 102, 77, 85, 75, 85, 97, 73, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_nidoking)).setPointValue(5);
            case CLEFAIRY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_clefairy), R.drawable.pokemon_clefairy, Type.FAIRY, Ability.FLASH, 70, 45, 48, 60, 65, 35, 34, 36, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_clefairy)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CLEFABLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_clefable), R.drawable.pokemon_clefable, Type.FAIRY, Ability.FLASH, 95, 70, 73, 95, 90, 60, 67, 53, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_clefable)).setPointValue(4);
            case VULPIX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vulpix), R.drawable.pokemon_vulpix, Type.FIRE, Ability.FLASH_FIRE, 38, 41, 40, 50, 65, 65, 66, 64, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_vulpix)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ALOLAN_VULPIX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_vulpix), R.drawable.pokemon_alolan_vulpix, Type.ICE, Ability.SNOW_WARNING, 38, 41, 40, 50, 65, 65, 66, 64, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_alolan_vulpix)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case NINETALES -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ninetales), R.drawable.pokemon_ninetails, Type.FIRE, Ability.FLASH_FIRE, 73, 76, 75, 81, 100, 100, 107, 93, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_ninetales)).setPointValue(5);
            case ALOLAN_NINETALES -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_ninetales), R.drawable.pokemon_alolan_ninetails, Type.ICE, Ability.SNOW_WARNING, 73, 67, 75, 81, 100, 109, 116, 102, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_alolan_ninetales)).setPointValue(6);
            case JIGGLYPUFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_jigglypuff), R.drawable.pokemon_jigglypuff, Type.FAIRY, Ability.HYPNOSIS, 115, 45, 20, 45, 25, 20, 19, 21, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_jigglypuff)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case WIGGLYTUFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wigglytuff), R.drawable.pokemon_wigglytuff, Type.FAIRY, Ability.HYPNOSIS, 140, 70, 45, 85, 50, 45, 46, 44, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_wigglytuff)).setPointValue(3);
            case ZUBAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zubat), R.drawable.pokemon_zubat, Type.DARK, null, 40, 45, 35, 30, 40, 55, 54, 56, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_zubat)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case GOLBAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_golbat), R.drawable.pokemon_golbat, Type.DARK, null, 75, 80, 70, 65, 75, 90, 102, 78, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_golbat)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case ODDISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oddish), R.drawable.pokemon_oddish, Type.GRASS, Ability.CHLOROPHYLL, 45, 50, 55, 75, 65, 30, 28, 32, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_oddish)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GLOOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gloom), R.drawable.pokemon_gloom, Type.GRASS, Ability.CHLOROPHYLL, 60, 65, 70, 85, 75, 40, 40, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_gloom)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case VILEPLUME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vileplume), R.drawable.pokemon_vileplume, Type.GRASS, Ability.CHLOROPHYLL, 75, 80, 85, 110, 90, 50, 53, 47, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_vileplume)).setPointValue(5);
            case PARAS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_paras), R.drawable.pokemon_paras, Type.GRASS, null, 35, 70, 55, 45, 55, 25, 24, 26, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_paras)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PARASECT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_parasect), R.drawable.pokemon_parasect, Type.GRASS, null, 60, 95, 80, 60, 80, 30, 33, 27, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_parasect)).setPointValue(4);
            case VENONAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_venonat), R.drawable.pokemon_venonat, Type.GRASS, null, 60, 55, 50, 40, 55, 45, 49, 41, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_venonat)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case VENOMOTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_venomoth), R.drawable.pokemon_venomoth, Type.GRASS, null, 70, 65, 60, 90, 75, 90, 93, 87, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_venomoth)).setPointValue(4);
            case DIGLETT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_diglett), R.drawable.pokemon_diglett, Type.GROUND, Ability.SAND_VEIL, 10, 55, 25, 35, 45, 95, 55, 30, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_diglett)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ALOLAN_DIGLETT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_diglett), R.drawable.pokemon_alolan_diglett, Type.STEEL, null, 10, 55, 30, 35, 45, 90, 55, 30, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_alolan_diglett)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DUGTRIO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dugtrio), R.drawable.pokemon_dugtrio, Type.GROUND, Ability.SAND_VEIL, 35, 100, 50, 50, 70, 120, 70, 50, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_dugtrio)).setPointValue(5);
            case ALOLAN_DUGTRIO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_dugtrio), R.drawable.pokemon_alolan_dugtrio, Type.STEEL, null, 35, 100, 60, 50, 70, 110, 70, 50, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_alolan_dugtrio)).setPointValue(5);
            case MEOWTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meowth), R.drawable.pokemon_meowth, Type.NORMAL, Ability.PAY_DAY, 40, 45, 35, 40, 40, 90, 82, 98, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_meowth)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ALOLAN_MEOWTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_meowth), R.drawable.pokemon_alolan_meowth, Type.DARK, Ability.PAY_DAY, 40, 35, 35, 50, 40, 90, 82, 98, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_alolan_meowth)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GALARIAN_MEOWTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_meowth), R.drawable.pokemon_galarian_meowth, Type.STEEL, Ability.PAY_DAY, 50, 65, 55, 40, 40, 40, 39, 41, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_galarian_meowth)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PERSIAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_persian), R.drawable.pokemon_persian, Type.NORMAL, Ability.PAY_DAY, 65, 70, 60, 65, 65, 115, 126, 104, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_persian)).setPointValue(6);
            case ALOLAN_PERSIAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_persian), R.drawable.pokemon_alolan_persian, Type.DARK, Ability.PAY_DAY, 65, 60, 60, 75, 65, 115, 127, 103, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_alolan_persian)).setPointValue(6);
            case PSYDUCK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_psyduck), R.drawable.pokemon_psyduck, Type.WATER, Ability.CLOUD_NINE, 50, 52, 48, 65, 50, 55, 59, 51, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_psyduck)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GOLDUCK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_golduck), R.drawable.pokemon_golduck, Type.WATER, Ability.CLOUD_NINE, 80, 82, 78, 95, 80, 85, 98, 72, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_golduck)).setPointValue(5);
            case MANKEY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mankey), R.drawable.pokemon_mankey, Type.FIGHTING, Ability.FLING, 40, 80, 35, 35, 45, 70, 76, 64, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_mankey)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PRIMEAPE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_primeape), R.drawable.pokemon_primeape, Type.FIGHTING, Ability.FLING, 65, 105, 60, 60, 70, 95, 104, 86, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_primeape)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case GROWLITHE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_growlithe), R.drawable.pokemon_growlithe, Type.FIRE, Ability.FLASH_FIRE, 55, 70, 45, 70, 50, 60, 64, 56, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_growlithe)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case HISUIAN_GROWLITHE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_growlithe), R.drawable.pokemon_hisuian_growlithe, Type.FIRE, Ability.FLASH_FIRE, 60, 75, 45, 65, 50, 55, 59, 51, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_growlithe)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ARCANINE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arcanine), R.drawable.pokemon_arcanine, Type.FIRE, Ability.FLASH_FIRE, 90, 110, 80, 100, 80, 95, 112, 78, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_arcanine)).setPointValue(6);
            case HISUIAN_ARCANINE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_arcanine), R.drawable.pokemon_hisuian_arcanine, Type.FIRE, Ability.FLASH_FIRE, 95, 115, 80, 95, 80, 90, 106, 74, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_arcanine)).setPointValue(6);
            case POLIWAG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_poliwag), R.drawable.pokemon_poliwag, Type.WATER, Ability.SWIFT_SWIM, 40, 50, 40, 40, 40, 90, 93, 87, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_poliwag)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case POLIWHIRL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_poliwhirl), R.drawable.pokemon_poliwhirl, Type.WATER, Ability.SWIFT_SWIM, 65, 65, 65, 50, 50, 90, 96, 84, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_poliwhirl)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case POLIWRATH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_poliwrath), R.drawable.pokemon_poliwrath, Type.WATER, Ability.SWIFT_SWIM, 90, 95, 95, 70, 90, 70, 79, 61, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_poliwrath)).setPointValue(4);
            case ABRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_abra), R.drawable.pokemon_abra, Type.PSYCHIC, Ability.TELEPORT, 25, 20, 15, 105, 55, 90, 96, 84, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_abra)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case KADABRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kadabra), R.drawable.pokemon_kadabra, Type.PSYCHIC, Ability.TELEPORT, 40, 35, 30, 120, 70, 105, 119, 91, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_kadabra)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case ALAKAZAM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alakazam), R.drawable.pokemon_alakazam, Type.PSYCHIC, Ability.TELEPORT, 55, 50, 45, 135, 95, 120, 135, 105, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_alakazam), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_alakazam), R.drawable.pokemon_mega_alakazam, Type.PSYCHIC, Ability.MEGA_MINDSTORM, 55, 50, 65, 175, 105, 150, 168, 132, Type.DARK, "")).setPointValue(7);
            case MACHOP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_machop), R.drawable.pokemon_machop, Type.FIGHTING, null, 70, 80, 50, 35, 35, 35, 37, 33, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_machop)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MACHOKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_machoke), R.drawable.pokemon_machoke, Type.FIGHTING, null, 80, 100, 70, 50, 60, 45, 51, 39, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_machoke)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case MACHAMP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_machamp), R.drawable.pokemon_machamp, Type.FIGHTING, null, 90, 130, 80, 65, 85, 55, 64, 46, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_machamp), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_machamp), R.drawable.pokemon_mega_machamp, Type.FIGHTING, Ability.MEGA_KNUCKLE, 90, 180, 110, 65, 95, 65, 104, 46, Type.PSYCHIC, "")).setPointValue(6);
            case BELLSPROUT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bellsprout), R.drawable.pokemon_bellsprout, Type.GRASS, Ability.LEAF_GUARD, 50, 75, 35, 70, 30, 40, 36, 44, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bellsprout)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case WEEPINBELL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_weepinbell), R.drawable.pokemon_weepinbell, Type.GRASS, Ability.LEAF_GUARD, 65, 90, 50, 85, 45, 55, 53, 57, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_weepinbell)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case VICTREEBEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_victreebel), R.drawable.pokemon_victreebel, Type.GRASS, Ability.LEAF_GUARD, 80, 105, 65, 100, 70, 70, 73, 67, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_victreebel)).setPointValue(5);
            case TENTACOOL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tentacool), R.drawable.pokemon_tentacool, Type.WATER, null, 40, 40, 35, 50, 100, 70, 78, 62, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_tentacool)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TENTACRUEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tentacruel), R.drawable.pokemon_tentacruel, Type.WATER, null, 80, 70, 65, 80, 120, 100, 113, 87, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_tentacruel)).setPointValue(6);
            case GEODUDE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_geodude), R.drawable.pokemon_geodude, Type.GROUND, null, 40, 80, 100, 30, 30, 20, 21, 19, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_geodude)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ALOLAN_GEODUDE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_geodude), R.drawable.pokemon_alolan_geodude, Type.ELECTRIC, Ability.CHARGE, 40, 80, 100, 30, 30, 20, 21, 19, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_alolan_geodude)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GRAVELER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_graveler), R.drawable.pokemon_graveler, Type.GROUND, null, 55, 95, 115, 45, 45, 35, 41, 29, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_graveler)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case ALOLAN_GRAVELER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_graveler), R.drawable.pokemon_alolan_graveler, Type.ELECTRIC, Ability.CHARGE, 55, 95, 115, 45, 45, 35, 41, 29, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_alolan_graveler)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GOLEM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_golem), R.drawable.pokemon_golem, Type.GROUND, null, 80, 120, 130, 55, 65, 45, 54, 36, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_golem)).setPointValue(5);
            case ALOLAN_GOLEM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_golem), R.drawable.pokemon_alolan_golem, Type.ELECTRIC, Ability.CHARGE, 80, 120, 130, 55, 65, 45, 54, 36, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_alolan_golem)).setPointValue(5);
            case PONYTA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ponyta), R.drawable.pokemon_ponyta, Type.FIRE, Ability.FLASH_FIRE, 50, 85, 55, 65, 65, 90, 99, 81, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_ponyta)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GALARIAN_PONYTA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_ponyta), R.drawable.pokemon_galarian_ponyta, Type.PSYCHIC, Ability.MISTY_SURGE, 50, 85, 55, 65, 65, 90, 97, 83, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_galarian_ponyta)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case RAPIDASH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rapidash), R.drawable.pokemon_rapidash, Type.FIRE, Ability.FLASH_FIRE, 65, 100, 70, 80, 80, 105, 122, 88, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_rapidash)).setPointValue(6);
            case GALARIAN_RAPIDASH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_rapidash), R.drawable.pokemon_galarian_rapidash, Type.PSYCHIC, Ability.MISTY_SURGE, 65, 100, 70, 80, 80, 105, 121, 89, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_galarian_rapidash)).setPointValue(6);
            case SLOWPOKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slowpoke), R.drawable.pokemon_slowpoke, Type.WATER, Ability.TRICK_ROOM, 90, 65, 65, 40, 40, 15, 17, 13, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_slowpoke)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case GALARIAN_SLOWPOKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_slowpoke), R.drawable.pokemon_galarian_slowpoke, Type.PSYCHIC, Ability.TRICK_ROOM, 90, 65, 65, 40, 40, 15, 17, 13, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_galarian_slowpoke)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SLOWBRO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slowbro), R.drawable.pokemon_slowbro, Type.WATER, Ability.TRICK_ROOM, 95, 75, 110, 100, 80, 30, 34, 26, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_slowbro), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_slowbro), R.drawable.pokemon_mega_slowbro, Type.WATER, Ability.MEGA_GEYSER, 95, 75, 180, 130, 80, 30, 35, 25, Type.ELECTRIC, "")).setPointValue(4);
            case GALARIAN_SLOWBRO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_slowbro), R.drawable.pokemon_galarian_slowbro, Type.PSYCHIC, Ability.TRICK_ROOM, 95, 100, 95, 100, 70, 30, 34, 26, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_galarian_slowbro)).setPointValue(4);
            case MAGNEMITE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magnemite), R.drawable.pokemon_magnemite, Type.STEEL, null, 25, 35, 70, 95, 55, 45, 43, 47, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_magnemite)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case MAGNETON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magneton), R.drawable.pokemon_magneton, Type.STEEL, Ability.TRI_ATTACK, 50, 60, 95, 120, 70, 70, 79, 61, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_magneton)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case FARFETCHD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_farfetchd), R.drawable.pokemon_farfetchd, Type.NORMAL, null, 52, 90, 55, 58, 62, 60, 63, 57, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_farfetchd)).setPointValue(4);
            case GALARIAN_FARFETCHD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_farfetchd), R.drawable.pokemon_galarian_farfetchd, Type.FIGHTING, null, 52, 95, 55, 58, 62, 55, 61, 49, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_galarian_farfetchd)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case DODUO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_doduo), R.drawable.pokemon_doduo, Type.NORMAL, null, 35, 85, 45, 35, 35, 75, 83, 67, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_doduo)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DODRIO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dodrio), R.drawable.pokemon_dodrio, Type.NORMAL, Ability.TRI_ATTACK, 60, 110, 70, 60, 60, 110, 127, 93, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_dodrio)).setPointValue(6);
            case SEEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_seel), R.drawable.pokemon_seel, Type.ICE, null, 65, 45, 55, 45, 70, 45, 52, 38, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_seel)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DEWGONG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dewgong), R.drawable.pokemon_dewgong, Type.ICE, null, 90, 70, 80, 70, 95, 70, 82, 58, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_dewgong)).setPointValue(4);
            case GRIMER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grimer), R.drawable.pokemon_grimer, Type.DARK, null, 80, 80, 50, 40, 50, 25, 27, 23, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_grimer)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ALOLAN_GRIMER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_grimer), R.drawable.pokemon_alolan_grimer, Type.DARK, null, 80, 80, 50, 40, 50, 25, 28, 22, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_alolan_grimer)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MUK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_muk), R.drawable.pokemon_muk, Type.DARK, null, 105, 105, 75, 65, 100, 50, 55, 45, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_muk)).setPointValue(4);
            case ALOLAN_MUK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_muk), R.drawable.pokemon_alolan_muk, Type.DARK, null, 105, 105, 75, 65, 100, 50, 56, 44, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_alolan_muk)).setPointValue(4);
            case SHELLDER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shellder), R.drawable.pokemon_shellder, Type.ICE, Ability.SKILL_LINK, 30, 65, 100, 45, 25, 40, 36, 44, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_shellder)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CLOYSTER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cloyster), R.drawable.pokemon_cloyster, Type.ICE, Ability.SKILL_LINK, 50, 95, 180, 85, 45, 70, 82, 58, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_cloyster)).setPointValue(5);
            case GASTLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gastly), R.drawable.pokemon_gastly, Type.DARK, Ability.CONFUSE_RAY, 30, 35, 30, 100, 35, 80, 70, 50, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_gastly)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case HAUNTER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_haunter), R.drawable.pokemon_haunter, Type.DARK, Ability.CONFUSE_RAY, 45, 50, 45, 115, 55, 95, 85, 65, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_haunter)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case GENGAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gengar), R.drawable.pokemon_gengar, Type.DARK, Ability.CONFUSE_RAY, 60, 65, 60, 130, 75, 110, 122, 98, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_gengar), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_gengar), R.drawable.pokemon_mega_gengar, Type.DARK, Ability.MEGA_DARKNESS, 60, 65, 80, 170, 95, 130, 145, 115, Type.DARK, "")).setPointValue(6);
            case ONIX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_onix), R.drawable.pokemon_onix, Type.GROUND, null, 35, 45, 160, 30, 45, 70, 83, 57, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_onix)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case DROWZEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drowzee), R.drawable.pokemon_drowzee, Type.PSYCHIC, Ability.HYPNOSIS, 60, 48, 45, 43, 90, 42, 46, 38, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_drowzee)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case HYPNO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hypno), R.drawable.pokemon_hypno, Type.PSYCHIC, Ability.HYPNOSIS, 85, 73, 70, 73, 115, 67, 77, 57, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_hypno)).setPointValue(4);
            case KRABBY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_krabby), R.drawable.pokemon_krabby, Type.WATER, null, 30, 105, 90, 25, 25, 50, 48, 52, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_krabby)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case KINGLER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kingler), R.drawable.pokemon_kingler, Type.WATER, null, 55, 130, 115, 50, 50, 75, 85, 65, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_kingler), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_kingler), R.drawable.pokemon_mega_kingler, Type.WATER, Ability.MEGA_GEYSER, 55, 150, 145, 50, 100, 75, 85, 65, Type.ELECTRIC, "")).setPointValue(6);
            case VOLTORB -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_voltorb), R.drawable.pokemon_voltorb, Type.ELECTRIC, Ability.ELECTROBLAST, 40, 30, 50, 55, 55, 100, 65, 50, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_voltorb)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case HISUIAN_VOLTORB -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_voltorb), R.drawable.pokemon_hisuian_voltorb, Type.ELECTRIC, Ability.CHLOROBLAST, 40, 30, 50, 55, 55, 100, 65, 50, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_voltorb)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case ELECTRODE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_electrode), R.drawable.pokemon_electrode, Type.ELECTRIC, Ability.ELECTROBLAST, 60, 50, 70, 80, 80, 150, 100, 80, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_electrode)).setPointValue(7);
            case HISUIAN_ELECTRODE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_electrode), R.drawable.pokemon_hisuian_electrode, Type.ELECTRIC, Ability.CHLOROBLAST, 60, 50, 70, 80, 80, 150, 100, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_electrode)).setPointValue(7);
            case EXEGGCUTE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_exeggcute), R.drawable.pokemon_exeggcute, Type.GRASS, Ability.HARVEST, 60, 40, 80, 60, 45, 40, 35, 45, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_exeggcute)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case EXEGGUTOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_exeggutor), R.drawable.pokemon_exeggutor, Type.GRASS, Ability.HARVEST, 95, 95, 85, 125, 75, 55, 65, 45, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_exeggutor)).setPointValue(6);
            case ALOLAN_EXEGGUTOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_exeggutor), R.drawable.pokemon_alolan_exeggutor, Type.GRASS, Ability.HARVEST, 95, 105, 85, 125, 75, 45, 55, 45, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_alolan_exeggutor)).setPointValue(5);
            case CUBONE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cubone), R.drawable.pokemon_cubone, Type.GROUND, null, 50, 50, 95, 40, 50, 35, 35, 35, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_cubone)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case MAROWAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_marowak), R.drawable.pokemon_marowak, Type.GROUND, null, 60, 80, 110, 50, 80, 45, 50, 40, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_marowak)).setPointValue(3);
            case ALOLAN_MAROWAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alolan_marowak), R.drawable.pokemon_alolan_marowak, Type.FIRE, null, 60, 80, 110, 50, 80, 45, 50, 40, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_alolan_marowak)).setPointValue(3);
            case HITMONLEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hitmonlee), R.drawable.pokemon_hitmonlee, Type.FIGHTING, null, 50, 120, 53, 35, 110, 87, 98, 76, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_hitmonlee)).setPointValue(6);
            case HITMONCHAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hitmonchan), R.drawable.pokemon_hitmonchan, Type.FIGHTING, null, 50, 105, 79, 35, 110, 76, 110, 66, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_hitmonchan)).setPointValue(5);
            case LICKITUNG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lickitung), R.drawable.pokemon_lickitung, Type.NORMAL, null, 90, 55, 75, 60, 75, 30, 34, 26, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_lickitung)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case KOFFING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_koffing), R.drawable.pokemon_koffing, Type.DARK, null, 40, 65, 95, 60, 45, 35, 23, 47, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_koffing)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case WEEZING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_weezing), R.drawable.pokemon_weezing, Type.DARK, null, 65, 90, 120, 85, 70, 60, 60, 60, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_weezing)).setPointValue(4);
            case GALARIAN_WEEZING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_weezing), R.drawable.pokemon_galarian_weezing, Type.FAIRY, Ability.MISTY_SURGE, 65, 90, 120, 85, 70, 60, 63, 57, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_galarian_weezing)).setPointValue(4);
            case RHYHORN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rhyhorn), R.drawable.pokemon_rhyhorn, Type.GROUND, null, 80, 85, 95, 30, 30, 25, 30, 20, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_rhyhorn)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case RHYDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rhydon), R.drawable.pokemon_rhydon, Type.GROUND, null, 105, 130, 120, 45, 45, 40, 45, 35, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_rhydon)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case CHANSEY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chansey), R.drawable.pokemon_chansey, Type.NORMAL, Ability.NATURAL_CURE, 250, 5, 5, 35, 105, 50, 55, 45, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_chansey)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case TANGELA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tangela), R.drawable.pokemon_tangela, Type.GRASS, null, 65, 55, 115, 100, 40, 60, 65, 55, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_tangela)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case KANGASKHAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kangaskhan), R.drawable.pokemon_kangaskhan, Type.NORMAL, null, 105, 95, 80, 40, 80, 90, 100, 75, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_kangaskhan), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_kangaskhan), R.drawable.pokemon_mega_kangaskhan, Type.NORMAL, null, 105, 125, 100, 60, 100, 100, 116, 84, Type.FIGHTING, "")).setPointValue(5);
            case HORSEA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_horsea), R.drawable.pokemon_horsea, Type.WATER, Ability.SNIPER, 30, 40, 70, 70, 25, 60, 60, 60, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_horsea)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SEADRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_seadra), R.drawable.pokemon_seadra, Type.WATER, Ability.SNIPER, 55, 65, 95, 95, 45, 85, 90, 80, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_seadra)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GOLDEEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_goldeen), R.drawable.pokemon_goldeen, Type.WATER, Ability.SWIFT_SWIM, 45, 67, 60, 35, 50, 63, 66, 60, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_goldeen)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(2);
            case SEAKING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_seaking), R.drawable.pokemon_seaking, Type.WATER, Ability.SWIFT_SWIM, 80, 92, 65, 65, 80, 68, 76, 60, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_seaking)).addTag(CardTags.FISH).setPointValue(4);
            case STARYU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_staryu), R.drawable.pokemon_staryu, Type.WATER, Ability.NATURAL_CURE, 30, 45, 55, 70, 55, 85, 94, 76, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_staryu)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case STARMIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_starmie), R.drawable.pokemon_starmie, Type.WATER, Ability.NATURAL_CURE, 60, 75, 85, 100, 85, 115, 132, 98, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_starmie)).setPointValue(7);
            case MR_MIME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mr_mime), R.drawable.pokemon_mr_mime, Type.PSYCHIC, Ability.BARRIER, 40, 45, 65, 100, 120, 90, 102, 78, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_mr_mime)).setPointValue(5);
            case GALARIAN_MR_MIME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_mr_mime), R.drawable.pokemon_galarian_mr_mime, Type.ICE, Ability.FROZEN_BODY, 50, 65, 65, 90, 90, 100, 113, 87, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_galarian_mr_mime)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case SCYTHER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scyther), R.drawable.pokemon_scyther, Type.GRASS, null, 70, 110, 80, 55, 80, 105, 119, 91, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_scyther)).addTag(CardTags.CAN_EVOLVE).setPointValue(6);
            case JYNX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_jynx), R.drawable.pokemon_jynx, Type.ICE, null, 65, 50, 35, 115, 95, 95, 106, 84, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_jynx)).setPointValue(5);
            case ELECTABUZZ -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_electabuzz), R.drawable.pokemon_electabuzz, Type.ELECTRIC, Ability.CHARGE, 65, 83, 57, 95, 85, 105, 115, 95, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_electabuzz)).addTag(CardTags.CAN_EVOLVE).setPointValue(6);
            case MAGMAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magmar), R.drawable.pokemon_magmar, Type.FIRE, Ability.FLAME_BODY, 65, 95, 57, 100, 85, 93, 104, 82, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_magmar)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case PINSIR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pinsir), R.drawable.pokemon_pinsir, Type.GRASS, Ability.MOLD_BREAKER, 65, 125, 100, 55, 70, 85, 96, 74, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_pinsir), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_pinsir), R.drawable.pokemon_mega_pinsir, Type.GRASS, Ability.MEGA_OVERGROWTH, 65, 155, 120, 65, 90, 105, 119, 91, Type.FIRE, "")).setPointValue(6);
            case TAUROS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tauros), R.drawable.pokemon_tauros, Type.NORMAL, Ability.CUD_CHEW, 75, 100, 95, 40, 70, 110, 127, 93, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_tauros)).setPointValue(6);
            case PALDEAN_TAUROS_COMBAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_paldean_tauros_combat), R.drawable.pokemon_paldean_tauros, Type.FIGHTING, Ability.CUD_CHEW, 75, 110, 105, 30, 70, 100, 117, 83, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_paldean_tauros_combat_breed)).setPointValue(6);
            case PALDEAN_TAUROS_BLAZE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_paldean_tauros_blaze), R.drawable.pokemon_paldean_tauros_blaze_breed, Type.FIGHTING, Ability.CUD_CHEW, 75, 110, 105, 30, 70, 100, 115, 85, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_paldean_tauros_blaze_breed)).setPointValue(6);
            case PALDEAN_TAUROS_AQUA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_paldean_tauros_aqua), R.drawable.pokemon_paldean_tauros_aqua_breed, Type.FIGHTING, Ability.CUD_CHEW, 75, 110, 105, 30, 70, 100, 116, 84, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_paldean_tauros_aqua_breed)).setPointValue(6);
            case MAGIKARP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magikarp), R.drawable.pokemon_magikarp, Type.WATER, null, 20, 10, 55, 15, 20, 80, 20, 20, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_magikarp)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(2);
            case GYARADOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gyarados), R.drawable.pokemon_gyarados, Type.WATER, null, 95, 125, 79, 60, 100, 81, 97, 65, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_gyarados), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_gyarados), R.drawable.pokemon_mega_gyarados, Type.WATER, Ability.MEGA_GEYSER, 95, 155, 109, 70, 130, 81, 97, 65, Type.ELECTRIC, "")).setPointValue(6);
            case LAPRAS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lapras), R.drawable.pokemon_lapras, Type.WATER, Ability.PERISH_SONG, 130, 85, 80, 85, 95, 60, 72, 48, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_lapras), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_lapras), R.drawable.pokemon_mega_lapras, Type.WATER, Ability.MEGA_HAILSTORM, 130, 105, 120, 85, 135, 60, 72, 48, Type.ELECTRIC, "")).setPointValue(4);
            case DITTO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ditto), R.drawable.pokemon_ditto, Type.NORMAL, Ability.TRANSFORM, 48, 48, 48, 48, 48, 48, 48, 48, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_ditto)).setPointValue(3);
            case EEVEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_eevee), R.drawable.pokemon_eevee, Type.NORMAL, null, 55, 55, 50, 45, 65, 55, 55, 55, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_eevee)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case VAPOREON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vaporeon), R.drawable.pokemon_vaporeon, Type.WATER, Ability.WATER_AURA, 130, 65, 60, 110, 95, 65, 70, 60, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_vaporeon)).setPointValue(5);
            case JOLTEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_jolteon), R.drawable.pokemon_jolteon, Type.ELECTRIC, Ability.ELECTRIC_AURA, 65, 65, 60, 110, 95, 130, 60, 70, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_jolteon)).setPointValue(6);
            case FLAREON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flareon), R.drawable.pokemon_flareon, Type.FIRE, Ability.FIRE_AURA, 65, 130, 60, 95, 110, 65, 70, 60, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_flareon)).setPointValue(6);
            case PORYGON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_porygon), R.drawable.pokemon_porygon, Type.NORMAL, Ability.DOWNLOAD, 65, 60, 70, 85, 75, 40, 45, 35, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_porygon)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case OMANYTE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_omanyte), R.drawable.pokemon_omanyte, Type.WATER, null, 35, 40, 100, 90, 55, 35, 34, 36, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_omanyte)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case OMASTAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_omastar), R.drawable.pokemon_omastar, Type.WATER, null, 70, 60, 125, 115, 70, 55, 61, 49, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_omastar)).setPointValue(5);
            case KABUTO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kabuto), R.drawable.pokemon_kabuto, Type.GROUND, null, 30, 80, 90, 55, 45, 55, 56, 54, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_kabuto)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case KABUTOPS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kabutops), R.drawable.pokemon_kabutops, Type.GROUND, null, 60, 115, 105, 65, 70, 80, 89, 71, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_kabutops)).setPointValue(5);
            case AERODACTYL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aerodactyl), R.drawable.pokemon_aerodactyl, Type.GROUND, null, 80, 105, 65, 60, 75, 130, 130, 95, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_aerodactyl), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_aerodactyl), R.drawable.pokemon_mega_aerodactyl, Type.GROUND, Ability.MEGA_ROCKFALL, 80, 135, 85, 70, 95, 150, 150, 110, Type.NORMAL, "")).setPointValue(6);
            case SNORLAX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_snorlax), R.drawable.pokemon_snorlax, Type.NORMAL, Ability.COMATOSE, 160, 110, 65, 65, 110, 30, 35, 25, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_snorlax), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_snorlax), R.drawable.pokemon_mega_snorlax, Type.GRASS, Ability.MEGA_OVERGROWTH, 160, 160, 70, 65, 150, 35, 45, 25, Type.FIRE, "")).setPointValue(4);
            case ARTICUNO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_articuno), R.drawable.pokemon_articuno, Type.ICE, null, 90, 85, 100, 95, 125, 85, 96, 74, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_articuno)).setPointValue(5);
            case GALARIAN_ARTICUNO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_articuno), R.drawable.pokemon_galarian_articuno, Type.PSYCHIC, null, 90, 85, 85, 125, 100, 95, 107, 83, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_galarian_articuno)).setPointValue(6);
            case ZAPDOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zapdos), R.drawable.pokemon_zapdos, Type.ELECTRIC, null, 90, 90, 85, 125, 90, 100, 113, 87, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_zapdos)).setPointValue(6);
            case GALARIAN_ZAPDOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_zapdos), R.drawable.pokemon_galarian_zapdos, Type.FIGHTING, null, 90, 125, 90, 85, 90, 100, 113, 87, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_galarian_zapdos)).setPointValue(6);
            case MOLTRES -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_moltres), R.drawable.pokemon_moltres, Type.FIRE, null, 90, 100, 90, 125, 85, 90, 102, 78, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_moltres)).setPointValue(6);
            case GALARIAN_MOLTRES -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_moltres), R.drawable.pokemon_galarian_moltres, Type.DARK, null, 90, 85, 90, 100, 125, 90, 103, 77, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_galarian_moltres)).setPointValue(5);
            case DRATINI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dratini), R.drawable.pokemon_dratini, Type.DRAGON, null, 41, 64, 45, 50, 50, 50, 44, 56, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_dratini)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DRAGONAIR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dragonair), R.drawable.pokemon_dragonair, Type.DRAGON, null, 61, 84, 65, 70, 70, 70, 74, 66, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_dragonair)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case DRAGONITE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dragonite), R.drawable.pokemon_dragonite, Type.DRAGON, Ability.STORM_WINGS, 91, 134, 95, 100, 100, 80, 95, 65, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_dragonite)).setPointValue(7);
            case MEWTWO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mewtwo), R.drawable.pokemon_mewtwo, Type.PSYCHIC, null, 106, 110, 90, 154, 90, 130, 152, 108, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_mewtwo), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_mewtwo_y), R.drawable.pokemon_mega_mewtwo_y, Type.PSYCHIC, Ability.MEGA_MINDSTORM, 106, 150, 70, 194, 120, 140, 152, 108, Type.DARK, "")).setPointValue(8);
            case MEW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mew), R.drawable.pokemon_mew, Type.PSYCHIC, null, 100, 100, 100, 100, 100, 100, 100, 100, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_mew)).setPointValue(5);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard2(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case CHIKORITA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chikorita), R.drawable.pokemon_chikorita, Type.GRASS, Ability.OVERGROW, 45, 49, 65, 49, 65, 45, 43, 47, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_chikorita)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case BAYLEEF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bayleef), R.drawable.pokemon_bayleef, Type.GRASS, Ability.OVERGROW, 60, 62, 80, 63, 80, 60, 63, 57, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bayleef)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case MEGANIUM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meganium), R.drawable.pokemon_meganium, Type.GRASS, Ability.OVERGROW, 80, 82, 100, 83, 100, 80, 93, 67, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_meganium)).setPointValue(5);
            case CYNDAQUIL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cyndaquil), R.drawable.pokemon_cyndaquil, Type.FIRE, Ability.BLAZE, 39, 52, 43, 60, 50, 65, 64, 66, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_cyndaquil)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case QUILAVA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_quilava), R.drawable.pokemon_quilava, Type.FIRE, Ability.BLAZE, 58, 64, 58, 80, 65, 80, 85, 75, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_quilava)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case TYPHLOSION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_typhlosion), R.drawable.pokemon_typhlosion, Type.FIRE, Ability.BLAZE, 78, 84, 78, 109, 85, 100, 115, 85, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_typhlosion)).setPointValue(6);
            case HISUIAN_TYPHLOSION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_typhlosion), R.drawable.pokemon_hisuian_typhlosion, Type.DARK, Ability.BLAZE, 73, 84, 78, 119, 85, 95, 109, 81, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_typhlosion)).setPointValue(6);
            case TOTODILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_totodile), R.drawable.pokemon_totodile, Type.WATER, Ability.TORRENT, 50, 65, 64, 44, 48, 43, 43, 43, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_totodile)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CROCONAW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_croconaw), R.drawable.pokemon_croconaw, Type.WATER, Ability.TORRENT, 65, 80, 80, 59, 63, 58, 63, 53, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_croconaw)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case FERALIGATR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_feraligatr), R.drawable.pokemon_feraligatr, Type.WATER, Ability.TORRENT, 85, 105, 100, 79, 83, 78, 90, 66, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_feraligatr)).setPointValue(5);
            case SENTRET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sentret), R.drawable.pokemon_sentret, Type.NORMAL, null, 35, 46, 34, 35, 45, 20, 19, 21, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_sentret)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case FURRET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_furret), R.drawable.pokemon_furret, Type.NORMAL, null, 85, 76, 64, 45, 55, 90, 99, 81, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_furret)).setPointValue(4);
            case HOOTHOOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hoothoot), R.drawable.pokemon_hoothoot, Type.NORMAL, null, 60, 30, 30, 36, 56, 50, 54, 46, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_hoothoot)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case NOCTOWL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_noctowl), R.drawable.pokemon_noctowl, Type.NORMAL, null, 100, 50, 50, 86, 96, 70, 78, 62, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_noctowl)).setPointValue(4);
            case LEDYBA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ledyba), R.drawable.pokemon_ledyba, Type.GRASS, null, 40, 20, 30, 40, 80, 55, 56, 54, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_ledyba)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LEDIAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ledian), R.drawable.pokemon_ledian, Type.GRASS, null, 55, 35, 50, 55, 110, 85, 94, 76, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_ledian)).setPointValue(4);
            case SPINARAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spinarak), R.drawable.pokemon_spinarak, Type.GRASS, null, 40, 60, 40, 40, 40, 30, 30, 30, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_spinarak)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case ARIADOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ariados), R.drawable.pokemon_ariados, Type.GRASS, null, 70, 90, 70, 60, 70, 40, 44, 36, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_ariados)).setPointValue(3);
            case CROBAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crobat), R.drawable.pokemon_crobat, Type.DARK, null, 85, 90, 80, 70, 80, 130, 90, 110, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_crobat)).setPointValue(6);
            case CHINCHOU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chinchou), R.drawable.pokemon_chinchou, Type.ELECTRIC, null, 75, 38, 38, 56, 56, 67, 69, 65, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_chinchou)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LANTURN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lanturn), R.drawable.pokemon_lanturn, Type.ELECTRIC, null, 125, 58, 58, 76, 76, 67, 72, 62, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_lanturn)).setPointValue(3);
            case PICHU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pichu), R.drawable.pokemon_pichu, Type.ELECTRIC, Ability.BEGINNERS_LUCK, 20, 40, 15, 35, 35, 60, 48, 72, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_pichu)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CLEFFA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cleffa), R.drawable.pokemon_cleffa, Type.FAIRY, Ability.BEGINNERS_LUCK, 50, 25, 28, 45, 55, 15, 13, 17, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_cleffa)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case IGGLYBUFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_igglybuff), R.drawable.pokemon_igglybuff, Type.FAIRY, Ability.BEGINNERS_LUCK, 90, 30, 15, 40, 20, 15, 10, 20, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_igglybuff)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case TOGEPI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_togepi), R.drawable.pokemon_togepi, Type.FAIRY, Ability.BEGINNERS_LUCK, 35, 20, 65, 40, 65, 20, 15, 25, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_togepi)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case TOGETIC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_togetic), R.drawable.pokemon_togetic, Type.FAIRY, null, 55, 40, 85, 80, 105, 40, 35, 45, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_togetic)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case NATU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_natu), R.drawable.pokemon_natu, Type.PSYCHIC, Ability.CALM_MIND, 40, 50, 45, 70, 45, 70, 56, 84, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_natu)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case XATU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_xatu), R.drawable.pokemon_xatu, Type.PSYCHIC, Ability.CALM_MIND, 65, 75, 70, 95, 70, 95, 99, 91, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_xatu)).setPointValue(5);
            case MAREEP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mareep), R.drawable.pokemon_mareep, Type.ELECTRIC, Ability.STATIC, 55, 40, 40, 65, 45, 35, 34, 36, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_mareep)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case FLAAFFY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flaaffy), R.drawable.pokemon_flaaffy, Type.ELECTRIC, Ability.STATIC, 70, 55, 55, 80, 60, 45, 47, 43, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_flaaffy)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case AMPHAROS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ampharos), R.drawable.pokemon_ampharos, Type.ELECTRIC, Ability.STATIC, 90, 75, 85, 115, 90, 55, 62, 48, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_ampharos), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_ampharos), R.drawable.pokemon_mega_ampharos, Type.ELECTRIC, Ability.MEGA_LIGHTNING, 90, 95, 105, 165, 110, 45, 102, 68, Type.GROUND, "")).setPointValue(5);
            case BELLOSSOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bellossom), R.drawable.pokemon_bellossom, Type.GRASS, Ability.DANCER, 75, 80, 95, 90, 100, 50, 48, 52, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bellossom)).setPointValue(4);
            case MARILL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_marill), R.drawable.pokemon_marill, Type.WATER, null, 70, 20, 50, 20, 50, 40, 40, 40, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_marill)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case AZUMARILL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_azumarill), R.drawable.pokemon_azumarill, Type.WATER, null, 100, 50, 80, 60, 80, 50, 55, 45, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_azumarill)).setPointValue(2);
            case SUDOWOODO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sudowoodo), R.drawable.pokemon_sudowoodo, Type.GROUND, null, 70, 100, 115, 30, 65, 30, 33, 27, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_sudowoodo)).setPointValue(4);
            case POLITOED -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_politoed), R.drawable.pokemon_politoed, Type.WATER, Ability.DRIZZLE, 90, 75, 75, 90, 100, 70, 77, 63, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_politoed)).setPointValue(4);
            case HOPPIP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hoppip), R.drawable.pokemon_hoppip, Type.GRASS, Ability.WIND_RIDER, 35, 35, 40, 35, 55, 50, 23, 77, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_hoppip)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SKIPLOOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skiploom), R.drawable.pokemon_skiploom, Type.GRASS, Ability.WIND_RIDER, 55, 45, 50, 45, 65, 80, 52, 108, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_skiploom)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case JUMPLUFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_jumpluff), R.drawable.pokemon_jumpluff, Type.GRASS, Ability.WIND_RIDER, 75, 55, 70, 55, 95, 110, 95, 125, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_jumpluff)).setPointValue(5);
            case AIPOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aipom), R.drawable.pokemon_aipom, Type.NORMAL, Ability.PICKUP, 55, 70, 55, 40, 55, 85, 87, 83, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_aipom)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case SUNKERN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sunkern), R.drawable.pokemon_sunkern, Type.GRASS, Ability.DROUGHT, 30, 30, 30, 30, 30, 30, 30, 30, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_sunkern)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SUNFLORA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sunflora), R.drawable.pokemon_sunflora, Type.GRASS, Ability.DROUGHT, 75, 75, 55, 105, 85, 30, 30, 30, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_sunflora)).setPointValue(4);
            case YANMA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_yanma), R.drawable.pokemon_yanma, Type.GRASS, Ability.TAILWIND, 65, 65, 45, 75, 45, 95, 105, 85, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_yanma)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case WOOPER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wooper), R.drawable.pokemon_wooper, Type.WATER, null, 55, 45, 45, 25, 25, 15, 15, 15, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_wooper)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case PALDEAN_WOOPER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_paldean_wooper), R.drawable.pokemon_paldean_wooper, Type.GROUND, Ability.POISON_POINT, 55, 45, 45, 25, 25, 15, 15, 15, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_paldean_wooper)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case QUAGSIRE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_quagsire), R.drawable.pokemon_quagsire, Type.WATER, null, 95, 85, 85, 65, 65, 35, 40, 30, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_quagsire)).setPointValue(3);
            case ESPEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_espeon), R.drawable.pokemon_espeon, Type.PSYCHIC, Ability.PSYCHIC_AURA, 65, 65, 60, 130, 95, 110, 120, 100, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_espeon)).setPointValue(7);
            case UMBREON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_umbreon), R.drawable.pokemon_umbreon, Type.DARK, Ability.DARK_AURA, 95, 65, 110, 60, 130, 65, 71, 59, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_umbreon)).setPointValue(3);
            case MURKROW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_murkrow), R.drawable.pokemon_murkrow, Type.DARK, Ability.SUPER_LUCK, 60, 85, 42, 85, 42, 91, 73, 109, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_murkrow)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case SLOWKING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slowking), R.drawable.pokemon_slowking, Type.WATER, Ability.TRICK_ROOM, 95, 75, 80, 100, 110, 30, 34, 26, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_slowking)).setPointValue(4);
            case GALARIAN_SLOWKING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_slowking), R.drawable.pokemon_galarian_slowking, Type.PSYCHIC, Ability.TRICK_ROOM, 95, 65, 80, 110, 110, 30, 34, 26, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_galarian_slowking)).setPointValue(4);
            case MISDREAVUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_misdreavus), R.drawable.pokemon_misdreavus, Type.DARK, Ability.CONFUSE_RAY, 60, 60, 60, 85, 85, 85, 55, 115, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_misdreavus)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case UNOWN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_unown), R.drawable.pokemon_unown, Type.PSYCHIC, Ability.HIDDEN_POWER, 48, 72, 48, 72, 48, 48, 45, 51, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_unown)).setPointValue(3);
            case WOBBUFFET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wobbuffet), R.drawable.pokemon_wobbuffet, Type.PSYCHIC, Ability.COUNTER, 190, 33, 58, 33, 58, 33, 36, 30, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_wobbuffet)).setPointValue(1);
            case GIRAFARIG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_girafarig), R.drawable.pokemon_girafarig, Type.PSYCHIC, Ability.POWER_SWAP, 70, 80, 65, 90, 65, 85, 95, 75, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_girafarig)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case PINECO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pineco), R.drawable.pokemon_pineco, Type.GRASS, null, 50, 65, 90, 35, 35, 15, 15, 15, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_pineco)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case FORRETRESS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_forretress), R.drawable.pokemon_forretress, Type.STEEL, null, 75, 90, 140, 60, 60, 40, 47, 33, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_forretress)).setPointValue(4);
            case DUNSPARCE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dunsparce), R.drawable.pokemon_dunsparce, Type.NORMAL, null, 100, 70, 70, 65, 65, 45, 47, 43, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_dunsparce)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GLIGAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gligar), R.drawable.pokemon_gligar, Type.GROUND, Ability.SAND_VEIL, 65, 75, 105, 35, 65, 85, 97, 73, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_gligar)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case STEELIX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_steelix), R.drawable.pokemon_steelix, Type.STEEL, null, 75, 85, 200, 55, 65, 30, 55, 85, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_steelix), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_steelix), R.drawable.pokemon_mega_steelix, Type.STEEL, Ability.MEGA_STEELSPIKE, 75, 125, 230, 55, 95, 30, 55, 85, Type.FIRE, "")).setPointValue(4);
            case SNUBBULL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_snubbull), R.drawable.pokemon_snubbull, Type.FAIRY, Ability.INTIMIDATE, 60, 80, 50, 40, 40, 30, 30, 30, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_snubbull)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GRANBULL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_granbull), R.drawable.pokemon_granbull, Type.FAIRY, Ability.INTIMIDATE, 90, 120, 75, 60, 60, 45, 51, 39, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_granbull)).setPointValue(5);
            case QWILFISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_qwilfish), R.drawable.pokemon_qwilfish, Type.WATER, Ability.POISON_POINT, 65, 95, 85, 55, 55, 85, 77, 93, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_qwilfish)).setPointValue(4);
            case HISUIAN_QWILFISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_qwilfish), R.drawable.pokemon_hisuian_qwilfish, Type.DARK, Ability.POISON_POINT, 65, 95, 85, 55, 55, 85, 77, 93, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_qwilfish)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case SCIZOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scizor), R.drawable.pokemon_scizor, Type.STEEL, null, 70, 130, 100, 55, 80, 65, 76, 54, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_scizor), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_scizor), R.drawable.pokemon_mega_scizor, Type.STEEL, Ability.MEGA_STEELSPIKE, 70, 150, 140, 65, 100, 75, 88, 62, Type.FIRE, "")).setPointValue(6);
            case SHUCKLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shuckle), R.drawable.pokemon_shuckle, Type.GROUND, Ability.GLUTTONY, 20, 10, 230, 10, 230, 5, 5, 5, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_shuckle)).setPointValue(1);
            case HERACROSS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_heracross), R.drawable.pokemon_heracross, Type.FIGHTING, null, 80, 125, 75, 40, 95, 85, 96, 74, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_heracross), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_heracross), R.drawable.pokemon_mega_heracross, Type.FIGHTING, Ability.MEGA_KNUCKLE, 80, 185, 115, 40, 105, 75, 136, 94, Type.NORMAL, "")).setPointValue(6);
            case SNEASEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sneasel), R.drawable.pokemon_sneasel, Type.DARK, Ability.NIGHT_SLASH, 55, 95, 55, 35, 75, 115, 95, 55, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_sneasel)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case HISUIAN_SNEASEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_sneasel), R.drawable.pokemon_hisuian_sneasel, Type.FIGHTING, null, 55, 95, 55, 35, 75, 115, 95, 55, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_sneasel)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case TEDDIURSA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_teddiursa), R.drawable.pokemon_teddiursa, Type.NORMAL, Ability.COMATOSE, 60, 80, 50, 50, 50, 40, 40, 40, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_teddiursa)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case URSARING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ursaring), R.drawable.pokemon_ursaring, Type.NORMAL, Ability.LUNAR_RUSH, 90, 130, 75, 75, 75, 55, 64, 46, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_ursaring)).addTag(CardTags.CAN_EVOLVE).setPointValue(6);
            case SLUGMA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slugma), R.drawable.pokemon_slugma, Type.FIRE, Ability.FLAME_BODY, 40, 40, 40, 70, 40, 20, 22, 18, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_slugma)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MAGCARGO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magcargo), R.drawable.pokemon_magcargo, Type.FIRE, Ability.FLAME_BODY, 60, 50, 120, 90, 80, 30, 34, 26, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_magcargo)).setPointValue(3);
            case SWINUB -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swinub), R.drawable.pokemon_swinub, Type.ICE, Ability.SNOW_CLOAK, 50, 50, 40, 30, 30, 50, 48, 52, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_swinub)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case PILOSWINE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_piloswine), R.drawable.pokemon_piloswine, Type.ICE, Ability.SNOW_CLOAK, 100, 100, 80, 60, 60, 50, 57, 43, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_piloswine)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case CORSOLA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_corsola), R.drawable.pokemon_corsola, Type.WATER, null, 65, 55, 95, 65, 95, 35, 33, 37, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_corsola)).setPointValue(2);
            case GALARIAN_CORSOLA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_corsola), R.drawable.pokemon_galarian_corsola, Type.DARK, Ability.PERISH_SONG, 60, 55, 100, 65, 100, 30, 14, 46, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_galarian_corsola)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case REMORAID -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_remoraid), R.drawable.pokemon_remoraid, Type.WATER, Ability.SNIPER, 35, 65, 35, 65, 35, 65, 67, 63, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_remoraid)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(2);
            case OCTILLERY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_octillery), R.drawable.pokemon_octillery, Type.WATER, Ability.SNIPER, 75, 105, 75, 105, 75, 45, 49, 41, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_octillery)).setPointValue(4);
            case DELIBIRD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_delibird), R.drawable.pokemon_delibird, Type.ICE, Ability.PRESENT, 45, 55, 45, 65, 45, 75, 79, 71, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_delibird)).setPointValue(3);
            case MANTINE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mantine), R.drawable.pokemon_mantine, Type.WATER, null, 85, 40, 70, 80, 140, 70, 83, 57, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_mantine)).setPointValue(4);
            case SKARMORY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skarmory), R.drawable.pokemon_skarmory, Type.STEEL, null, 65, 80, 140, 40, 70, 70, 79, 61, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_skarmory)).setPointValue(4);
            case HOUNDOUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_houndour), R.drawable.pokemon_houndour, Type.FIRE, Ability.FLASH_FIRE, 45, 60, 30, 80, 50, 65, 66, 64, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_houndour)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case HOUNDOOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_houndoom), R.drawable.pokemon_houndoom, Type.FIRE, Ability.FLASH_FIRE, 75, 90, 50, 110, 80, 95, 105, 85, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_houndoom), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_houndoom), R.drawable.pokemon_mega_houndoom, Type.FIRE, Ability.MEGA_FLARE, 75, 90, 90, 140, 90, 115, 129, 101, Type.WATER, "")).setPointValue(5);
            case KINGDRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kingdra), R.drawable.pokemon_kingdra, Type.WATER, Ability.SNIPER, 75, 95, 95, 95, 95, 85, 100, 70, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_kingdra)).setPointValue(5);
            case PHANPY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_phanpy), R.drawable.pokemon_phanpy, Type.GROUND, null, 90, 60, 60, 40, 40, 40, 44, 36, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_phanpy)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DONPHAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_donphan), R.drawable.pokemon_donphan, Type.GROUND, null, 90, 120, 120, 60, 60, 50, 58, 42, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_donphan)).setPointValue(5);
            case PORYGON2 -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_porygon2), R.drawable.pokemon_porygon2, Type.NORMAL, Ability.DOWNLOAD, 85, 80, 90, 105, 95, 60, 95, 55, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_porygon2)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case STANTLER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_stantler), R.drawable.pokemon_stantler, Type.NORMAL, Ability.CALM_MIND, 73, 95, 62, 85, 65, 85, 97, 73, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_stantler)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case SMEARGLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_smeargle), R.drawable.pokemon_smeargle, Type.NORMAL, Ability.MOODY, 55, 20, 35, 20, 45, 75, 85, 65, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_smeargle)).setPointValue(3);
            case TYROGUE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tyrogue), R.drawable.pokemon_tyrogue, Type.FIGHTING, Ability.BEGINNERS_LUCK, 35, 35, 35, 35, 35, 35, 35, 35, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_tyrogue)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case HITMONTOP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hitmontop), R.drawable.pokemon_hitmontop, Type.FIGHTING, null, 50, 95, 95, 35, 110, 70, 79, 61, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_hitmontop)).setPointValue(4);
            case SMOOCHUM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_smoochum), R.drawable.pokemon_smoochum, Type.ICE, Ability.BEGINNERS_LUCK, 45, 30, 15, 85, 65, 65, 62, 68, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_smoochum)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ELEKID -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_elekid), R.drawable.pokemon_elekid, Type.ELECTRIC, Ability.BEGINNERS_LUCK, 45, 63, 37, 65, 55, 95, 102, 88, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_elekid)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case MAGBY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magby), R.drawable.pokemon_magby, Type.FIRE, Ability.BEGINNERS_LUCK, 45, 75, 37, 70, 55, 83, 89, 77, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_magby)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case MILTANK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_miltank), R.drawable.pokemon_miltank, Type.NORMAL, null, 95, 80, 105, 40, 70, 100, 115, 85, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_miltank)).setPointValue(5);
            case BLISSEY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_blissey), R.drawable.pokemon_blissey, Type.NORMAL, Ability.NATURAL_CURE, 255, 10, 10, 75, 135, 55, 62, 48, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_blissey)).setPointValue(3);
            case RAIKOU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_raikou), R.drawable.pokemon_raikou, Type.ELECTRIC, null, 90, 85, 75, 115, 100, 115, 136, 94, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_raikou)).setPointValue(7);
            case ENTEI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_entei), R.drawable.pokemon_entei, Type.FIRE, null, 115, 115, 85, 90, 75, 100, 119, 81, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_entei)).setPointValue(6);
            case SUICUNE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_suicune), R.drawable.pokemon_suicune, Type.WATER, null, 100, 75, 115, 90, 115, 85, 101, 69, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_suicune)).setPointValue(5);
            case LARVITAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_larvitar), R.drawable.pokemon_larvitar, Type.GROUND, Ability.SAND_STREAM, 50, 64, 50, 45, 50, 41, 47, 35, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_larvitar)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PUPITAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pupitar), R.drawable.pokemon_pupitar, Type.GROUND, Ability.SAND_STREAM, 70, 84, 70, 65, 70, 51, 60, 42, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_pupitar)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TYRANITAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tyranitar), R.drawable.pokemon_tyranitar, Type.GROUND, Ability.SAND_STREAM, 100, 134, 110, 95, 100, 61, 73, 49, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_tyranitar), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_tyranitar), R.drawable.pokemon_mega_tyranitar, Type.GROUND, Ability.MEGA_ROCKFALL, 100, 164, 150, 95, 120, 71, 85, 57, Type.GRASS, "")).setPointValue(6);
            case LUGIA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lugia), R.drawable.pokemon_lugia, Type.PSYCHIC, null, 106, 90, 130, 90, 154, 110, 131, 89, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_lugia)).setPointValue(7);
            case HO_OH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ho_oh), R.drawable.pokemon_ho_oh, Type.FIRE, null, 106, 130, 90, 110, 154, 90, 107, 73, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_ho_oh)).setPointValue(7);
            case CELEBI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_celebi), R.drawable.pokemon_celebi, Type.GRASS, null, 100, 100, 100, 100, 100, 100, 100, 100, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_celebi)).setPointValue(5);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard3(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case TREECKO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_treecko), R.drawable.pokemon_treecko, Type.GRASS, Ability.OVERGROW, 40, 45, 35, 65, 55, 70, 75, 65, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_treecko)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GROVYLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grovyle), R.drawable.pokemon_grovyle, Type.GRASS, Ability.OVERGROW, 50, 65, 45, 85, 65, 95, 95, 85, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_grovyle)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case SCEPTILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sceptile), R.drawable.pokemon_sceptile, Type.GRASS, Ability.OVERGROW, 70, 85, 65, 105, 85, 120, 135, 95, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_sceptile), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_sceptile), R.drawable.pokemon_mega_sceptile, Type.GRASS, Ability.MEGA_OVERGROWTH, 70, 110, 75, 145, 85, 145, 164, 126, Type.FIRE, "")).setPointValue(7);
            case TORCHIC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_torchic), R.drawable.pokemon_torchic, Type.FIRE, Ability.BLAZE, 45, 60, 40, 70, 50, 45, 38, 52, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_torchic)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case COMBUSKEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_combusken), R.drawable.pokemon_combusken, Type.FIRE, Ability.BLAZE, 60, 85, 60, 85, 60, 55, 59, 51, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_combusken)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case BLAZIKEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_blaziken), R.drawable.pokemon_blaziken, Type.FIRE, Ability.BLAZE, 80, 120, 70, 110, 70, 80, 90, 70, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_blaziken), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_blaziken), R.drawable.pokemon_mega_blaziken, Type.FIRE, Ability.MEGA_FLARE, 80, 160, 80, 130, 80, 100, 113, 87, Type.WATER, "")).setPointValue(6);
            case MUDKIP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mudkip), R.drawable.pokemon_mudkip, Type.WATER, Ability.TORRENT, 50, 70, 50, 50, 50, 40, 39, 41, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_mudkip)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MARSHTOMP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_marshtomp), R.drawable.pokemon_marshtomp, Type.WATER, Ability.TORRENT, 70, 85, 70, 60, 70, 50, 55, 45, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_marshtomp)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SWAMPERT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swampert), R.drawable.pokemon_swampert, Type.WATER, Ability.TORRENT, 100, 110, 90, 85, 90, 60, 69, 51, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_swampert), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_swampert), R.drawable.pokemon_mega_swampert, Type.WATER, Ability.MEGA_GEYSER, 100, 150, 110, 95, 110, 70, 81, 59, Type.GRASS, "")).setPointValue(5);
            case POOCHYENA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_poochyena), R.drawable.pokemon_poochyena, Type.DARK, Ability.INTIMIDATE, 35, 55, 35, 30, 30, 35, 36, 34, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_poochyena)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case MIGHTYENA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mightyena), R.drawable.pokemon_mightyena, Type.DARK, Ability.INTIMIDATE, 70, 90, 70, 60, 60, 70, 78, 62, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_mightyena)).setPointValue(4);
            case ZIGZAGOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zigzagoon), R.drawable.pokemon_zigzagoon, Type.NORMAL, Ability.PICKUP, 38, 30, 41, 30, 41, 60, 63, 57, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_zigzagoon)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GALARIAN_ZIGZAGOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_zigzagoon), R.drawable.pokemon_galarian_zigzagoon, Type.DARK, null, 38, 30, 41, 30, 41, 60, 63, 57, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_galarian_zigzagoon)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LINOONE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_linoone), R.drawable.pokemon_linoone, Type.NORMAL, null, 78, 70, 61, 50, 61, 100, 110, 90, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_linoone)).setPointValue(5);
            case GALARIAN_LINOONE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_linoone), R.drawable.pokemon_galarian_linoone, Type.DARK, null, 78, 70, 61, 50, 61, 100, 110, 90, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_galarian_linoone)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case WURMPLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wurmple), R.drawable.pokemon_wurmple, Type.GRASS, null, 45, 45, 35, 20, 30, 20, 18, 22, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_wurmple)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SILCOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_silcoon), R.drawable.pokemon_silcoon, Type.GRASS, Ability.HARDEN, 50, 35, 55, 25, 25, 15, 15, 15, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_silcoon)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BEAUTIFLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_beautifly), R.drawable.pokemon_beautifly, Type.GRASS, null, 60, 70, 50, 100, 50, 65, 71, 59, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_beautifly)).setPointValue(4);
            case CASCOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cascoon), R.drawable.pokemon_cascoon, Type.GRASS, Ability.HARDEN, 50, 35, 55, 25, 25, 15, 15, 15, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cascoon)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case DUSTOX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dustox), R.drawable.pokemon_dustox, Type.GRASS, null, 60, 50, 70, 50, 90, 65, 71, 59, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_dustox)).setPointValue(3);
            case LOTAD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lotad), R.drawable.pokemon_lotad, Type.WATER, Ability.RAIN_DISH, 40, 30, 30, 40, 50, 30, 25, 35, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_lotad)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case LOMBRE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lombre), R.drawable.pokemon_lombre, Type.WATER, Ability.RAIN_DISH, 60, 50, 50, 60, 70, 50, 55, 45, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_lombre)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LUDICOLO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ludicolo), R.drawable.pokemon_ludicolo, Type.WATER, Ability.RAIN_DISH, 80, 70, 70, 90, 100, 70, 79, 61, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_ludicolo)).setPointValue(4);
            case SEEDOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_seedot), R.drawable.pokemon_seedot, Type.GRASS, null, 40, 40, 50, 30, 30, 30, 27, 33, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_seedot)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case NUZLEAF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nuzleaf), R.drawable.pokemon_nuzleaf, Type.GRASS, null, 70, 70, 40, 60, 40, 60, 65, 55, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_nuzleaf)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SHIFTRY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shiftry), R.drawable.pokemon_shiftry, Type.GRASS, null, 90, 100, 60, 90, 60, 80, 91, 69, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_shiftry)).setPointValue(5);
            case TAILLOW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_taillow), R.drawable.pokemon_taillow, Type.NORMAL, Ability.AIR_CUTTER, 40, 55, 30, 30, 30, 85, 55, 70, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_taillow)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SWELLOW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swellow), R.drawable.pokemon_swellow, Type.NORMAL, Ability.AIR_CUTTER, 60, 85, 60, 75, 50, 125, 75, 100, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_swellow)).setPointValue(6);
            case WINGULL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wingull), R.drawable.pokemon_wingull, Type.WATER, Ability.DRIZZLE, 40, 30, 30, 55, 30, 85, 85, 85, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wingull)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PELIPPER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pelipper), R.drawable.pokemon_pelipper, Type.WATER, Ability.DRIZZLE, 60, 50, 100, 95, 70, 65, 71, 59, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_pelipper)).setPointValue(4);
            case RALTS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ralts), R.drawable.pokemon_ralts, Type.PSYCHIC, Ability.TRACE, 28, 25, 25, 45, 35, 40, 39, 41, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_ralts)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case KIRLIA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kirlia), R.drawable.pokemon_kirlia, Type.PSYCHIC, Ability.TRACE, 38, 35, 35, 65, 55, 50, 53, 47, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_kirlia)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GARDEVOIR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gardevoir), R.drawable.pokemon_gardevoir, Type.FAIRY, null, 68, 65, 65, 125, 115, 80, 90, 70, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_gardevoir), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_gardevoir), R.drawable.pokemon_mega_gardevoir, Type.FAIRY, Ability.MEGA_STARFALL, 68, 85, 65, 165, 135, 100, 112, 88, Type.STEEL, "")).setPointValue(6);
            case SURSKIT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_surskit), R.drawable.pokemon_surskit, Type.WATER, Ability.SWIFT_SWIM, 40, 30, 32, 50, 52, 65, 50, 80, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_surskit)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MASQUERAIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_masquerain), R.drawable.pokemon_masquerain, Type.GRASS, Ability.INTIMIDATE, 70, 60, 62, 100, 82, 80, 71, 89, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_masquerain)).setPointValue(5);
            case SHROOMISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shroomish), R.drawable.pokemon_shroomish, Type.GRASS, null, 60, 40, 60, 40, 60, 35, 32, 38, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_shroomish)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BRELOOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_breloom), R.drawable.pokemon_breloom, Type.GRASS, null, 60, 130, 80, 60, 60, 70, 78, 62, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_breloom)).setPointValue(6);
            case SLAKOTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slakoth), R.drawable.pokemon_slakoth, Type.NORMAL, Ability.TRUANT, 60, 60, 60, 35, 35, 30, 32, 28, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_slakoth)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case VIGOROTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vigoroth), R.drawable.pokemon_vigoroth, Type.NORMAL, null, 80, 80, 80, 55, 55, 90, 101, 79, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_vigoroth)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case SLAKING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slaking), R.drawable.pokemon_slaking, Type.NORMAL, Ability.TRUANT, 150, 160, 100, 95, 65, 100, 117, 83, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_slaking)).setPointValue(8);
            case NINCADA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nincada), R.drawable.pokemon_nincada, Type.GROUND, null, 31, 45, 90, 30, 30, 40, 40, 40, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_nincada)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case NINJASK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ninjask), R.drawable.pokemon_ninjask, Type.GRASS, Ability.SPEED_BOOST, 61, 90, 45, 50, 50, 160, 45, 90, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_ninjask)).setPointValue(7);
            case SHEDINJA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shedinja), R.drawable.pokemon_shedinja, Type.DARK, Ability.WONDER_GUARD, 1, 90, 45, 30, 30, 40, 28, 52, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_shedinja)).setPointValue(3);
            case WHISMUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_whismur), R.drawable.pokemon_whismur, Type.NORMAL, Ability.SOUNDPROOF, 64, 51, 23, 51, 23, 28, 29, 27, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_whismur)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case LOUDRED -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_loudred), R.drawable.pokemon_loudred, Type.NORMAL, Ability.BOOMBURST, 84, 71, 43, 71, 43, 48, 53, 43, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_loudred)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case EXPLOUD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_exploud), R.drawable.pokemon_exploud, Type.NORMAL, Ability.BOOMBURST, 104, 91, 63, 91, 73, 68, 78, 58, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_exploud)).setPointValue(4);
            case MAKUHITA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_makuhita), R.drawable.pokemon_makuhita, Type.FIGHTING, Ability.THICK_FAT, 72, 60, 30, 20, 30, 25, 29, 21, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_makuhita)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case HARIYAMA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hariyama), R.drawable.pokemon_hariyama, Type.FIGHTING, Ability.THICK_FAT, 144, 120, 60, 40, 60, 50, 60, 40, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_hariyama)).setPointValue(5);
            case AZURILL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_azurill), R.drawable.pokemon_azurill, Type.FAIRY, Ability.BEGINNERS_LUCK, 50, 20, 40, 20, 40, 20, 16, 24, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_azurill)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case NOSEPASS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nosepass), R.drawable.pokemon_nosepass, Type.GROUND, null, 30, 45, 135, 45, 90, 30, 35, 25, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_nosepass)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SKITTY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skitty), R.drawable.pokemon_skitty, Type.NORMAL, null, 50, 45, 45, 35, 35, 50, 51, 49, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_skitty)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case DELCATTY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_delcatty), R.drawable.pokemon_delcatty, Type.NORMAL, null, 70, 65, 65, 55, 55, 90, 99, 81, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_delcatty)).setPointValue(4);
            case SABLEYE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sableye), R.drawable.pokemon_sableye, Type.DARK, Ability.SPECTRAL_THIEF, 50, 75, 75, 65, 65, 50, 51, 49, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_sableye), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_sableye), R.drawable.pokemon_mega_sableye, Type.DARK, Ability.MEGA_DARKNESS, 50, 85, 125, 85, 115, 20, 24, 16, Type.FAIRY, "")).setPointValue(3);
            case MAWILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mawile), R.drawable.pokemon_mawile, Type.STEEL, null, 50, 85, 85, 55, 55, 50, 51, 49, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_mawile), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_mawile), R.drawable.pokemon_mega_mawile, Type.STEEL, Ability.MEGA_STEELSPIKE, 50, 105, 125, 55, 95, 50, 54, 46, Type.FIRE, "")).setPointValue(3);
            case ARON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aron), R.drawable.pokemon_aron, Type.STEEL, Ability.STEEL_ROLLER, 50, 70, 100, 40, 40, 30, 34, 26, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_aron)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LAIRON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lairon), R.drawable.pokemon_lairon, Type.STEEL, Ability.STEEL_ROLLER, 60, 90, 140, 50, 50, 40, 47, 33, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_lairon)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case AGGRON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aggron), R.drawable.pokemon_aggron, Type.STEEL, Ability.STEEL_ROLLER, 70, 110, 180, 60, 60, 50, 60, 40, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_aggron), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_aggron), R.drawable.pokemon_mega_aggron, Type.STEEL, Ability.MEGA_STEELSPIKE, 70, 140, 230, 60, 80, 50, 61, 39, Type.FIGHTING, "")).setPointValue(5);
            case MEDITITE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meditite), R.drawable.pokemon_meditite, Type.FIGHTING, null, 30, 40, 55, 40, 55, 60, 61, 59, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_meditite)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MEDICHAM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_medicham), R.drawable.pokemon_medicham, Type.FIGHTING, null, 60, 60, 75, 60, 75, 80, 88, 72, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_medicham), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_medicham), R.drawable.pokemon_mega_medicham, Type.FIGHTING, Ability.MEGA_KNUCKLE, 60, 100, 85, 80, 85, 100, 110, 90, Type.FAIRY, "")).setPointValue(4);
            case ELECTRIKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_electrike), R.drawable.pokemon_electrike, Type.ELECTRIC, Ability.STATIC, 40, 45, 40, 65, 40, 65, 68, 62, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_electrike)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MANECTRIC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_manectric), R.drawable.pokemon_manectric, Type.ELECTRIC, Ability.STATIC, 70, 75, 60, 105, 60, 105, 117, 93, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_manectric), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_manectric), R.drawable.pokemon_mega_manectric, Type.ELECTRIC, Ability.MEGA_LIGHTNING, 70, 75, 80, 135, 80, 135, 151, 119, Type.GROUND, "")).setPointValue(6);
            case PLUSLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_plusle), R.drawable.pokemon_plusle, Type.ELECTRIC, null, 60, 50, 40, 85, 75, 95, 87, 103, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_plusle)).setPointValue(4);
            case MINUN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_minun), R.drawable.pokemon_minun, Type.ELECTRIC, null, 60, 40, 50, 75, 85, 95, 87, 103, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_minun)).setPointValue(4);
            case VOLBEAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_volbeat), R.drawable.pokemon_volbeat, Type.GRASS, null, 65, 73, 75, 47, 85, 85, 90, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_volbeat)).setPointValue(4);
            case ILLUMISE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_illumise), R.drawable.pokemon_illumise, Type.GRASS, null, 65, 47, 75, 73, 85, 85, 90, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_illumise)).setPointValue(4);
            case ROSELIA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_roselia), R.drawable.pokemon_roselia, Type.GRASS, Ability.NATURAL_CURE, 50, 60, 45, 100, 80, 65, 52, 78, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_roselia)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GULPIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gulpin), R.drawable.pokemon_gulpin, Type.DARK, Ability.GLUTTONY, 70, 43, 53, 43, 53, 40, 41, 39, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_gulpin)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SWALOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swalot), R.drawable.pokemon_swalot, Type.DARK, Ability.GLUTTONY, 100, 73, 83, 73, 83, 55, 63, 47, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_swalot)).setPointValue(3);
            case CARVANHA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_carvanha), R.drawable.pokemon_carvanha, Type.WATER, null, 45, 90, 20, 65, 20, 65, 70, 60, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_carvanha)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(3);
            case SHARPEDO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sharpedo), R.drawable.pokemon_sharpedo, Type.WATER, null, 70, 120, 40, 95, 40, 95, 110, 80, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_sharpedo), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_sharpedo), R.drawable.pokemon_mega_sharpedo, Type.WATER, Ability.MEGA_GEYSER, 70, 140, 70, 110, 65, 105, 123, 87, Type.ELECTRIC, "")).setPointValue(6);
            case WAILMER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wailmer), R.drawable.pokemon_wailmer, Type.WATER, null, 130, 70, 35, 70, 35, 60, 70, 50, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wailmer)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case WAILORD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wailord), R.drawable.pokemon_wailord, Type.WATER, null, 170, 90, 45, 90, 45, 60, 73, 47, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wailord)).setPointValue(4);
            case NUMEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_numel), R.drawable.pokemon_numel, Type.FIRE, Ability.DROUGHT, 60, 60, 40, 65, 45, 35, 38, 32, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_numel)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CAMERUPT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_camerupt), R.drawable.pokemon_camerupt, Type.FIRE, Ability.DROUGHT, 70, 100, 70, 105, 75, 40, 48, 32, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_camerupt), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_camerupt), R.drawable.pokemon_mega_camerupt, Type.FIRE, Ability.MEGA_FLARE, 70, 120, 100, 145, 105, 20, 68, 32, Type.WATER, "")).setPointValue(4);
            case TORKOAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_torkoal), R.drawable.pokemon_torkoal, Type.FIRE, Ability.DROUGHT, 70, 85, 140, 85, 70, 20, 45, 20, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_torkoal)).setPointValue(4);
            case SPOINK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spoink), R.drawable.pokemon_spoink, Type.PSYCHIC, null, 60, 25, 35, 70, 80, 60, 66, 54, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_spoink)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GRUMPIG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grumpig), R.drawable.pokemon_grumpig, Type.PSYCHIC, null, 80, 45, 65, 90, 110, 80, 91, 69, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_grumpig)).setPointValue(4);
            case SPINDA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spinda), R.drawable.pokemon_spinda, Type.NORMAL, null, 60, 60, 60, 60, 60, 60, 60, 60, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_spinda)).setPointValue(2);
            case TRAPINCH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_trapinch), R.drawable.pokemon_trapinch, Type.GROUND, null, 45, 100, 45, 45, 45, 10, 10, 10, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_trapinch)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case VIBRAVA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vibrava), R.drawable.pokemon_vibrava, Type.GROUND, null, 50, 70, 50, 50, 50, 70, 73, 67, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_vibrava)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case FLYGON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flygon), R.drawable.pokemon_flygon, Type.DRAGON, Ability.LEVITATE, 80, 100, 80, 80, 80, 100, 115, 85, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_flygon)).setPointValue(6);
            case CACNEA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cacnea), R.drawable.pokemon_cacnea, Type.GRASS, Ability.SAND_VEIL, 50, 85, 40, 85, 40, 35, 39, 31, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cacnea)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case CACTURNE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cacturne), R.drawable.pokemon_cacturne, Type.GRASS, Ability.SAND_VEIL, 70, 115, 60, 115, 60, 55, 63, 47, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cacturne)).setPointValue(5);
            case SWABLU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swablu), R.drawable.pokemon_swablu, Type.NORMAL, null, 45, 40, 60, 40, 75, 50, 35, 65, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_swablu)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ALTARIA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_altaria), R.drawable.pokemon_altaria, Type.DRAGON, Ability.CLOUD_NINE, 75, 70, 90, 70, 105, 80, 86, 74, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_altaria), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_altaria), R.drawable.pokemon_mega_altaria, Type.FAIRY, Ability.MEGA_AIRSTREAM, 75, 110, 110, 110, 105, 80, 86, 74, Type.STEEL, "")).setPointValue(4);
            case ZANGOOSE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zangoose), R.drawable.pokemon_zangoose, Type.NORMAL, Ability.TOXIC_BOOST, 73, 115, 60, 60, 60, 90, 100, 80, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_zangoose)).setPointValue(5);
            case SEVIPER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_seviper), R.drawable.pokemon_seviper, Type.DARK, Ability.VENOSHOCK, 73, 100, 60, 100, 60, 65, 73, 57, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_seviper)).setPointValue(4);
            case LUNATONE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lunatone), R.drawable.pokemon_lunatone, Type.PSYCHIC, null, 90, 55, 65, 95, 85, 70, 83, 57, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_lunatone)).setPointValue(4);
            case SOLROCK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_solrock), R.drawable.pokemon_solrock, Type.PSYCHIC, null, 90, 95, 85, 55, 65, 70, 82, 58, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_solrock)).setPointValue(4);
            case BARBOACH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_barboach), R.drawable.pokemon_barboach, Type.WATER, null, 50, 48, 43, 46, 41, 60, 47, 73, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_barboach)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(2);
            case WHISCASH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_whiscash), R.drawable.pokemon_whiscash, Type.WATER, null, 110, 78, 73, 76, 71, 60, 65, 55, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_whiscash)).setPointValue(3);
            case CORPHISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_corphish), R.drawable.pokemon_corphish, Type.WATER, null, 43, 80, 65, 50, 35, 35, 36, 34, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_corphish)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case CRAWDAUNT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crawdaunt), R.drawable.pokemon_crawdaunt, Type.WATER, null, 63, 120, 85, 90, 55, 55, 61, 49, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_crawdaunt)).setPointValue(5);
            case BALTOY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_baltoy), R.drawable.pokemon_baltoy, Type.GROUND, null, 40, 40, 55, 40, 70, 55, 59, 51, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_baltoy)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CLAYDOL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_claydol), R.drawable.pokemon_claydol, Type.GROUND, null, 60, 70, 105, 70, 120, 75, 87, 63, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_claydol)).setPointValue(4);
            case LILEEP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lileep), R.drawable.pokemon_lileep, Type.GRASS, null, 66, 41, 77, 61, 87, 23, 25, 21, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_lileep)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CRADILY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cradily), R.drawable.pokemon_cradily, Type.GRASS, null, 86, 81, 97, 81, 107, 43, 49, 37, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_cradily)).setPointValue(4);
            case ANORITH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_anorith), R.drawable.pokemon_anorith, Type.GROUND, Ability.SWIFT_SWIM, 45, 95, 50, 40, 50, 75, 77, 73, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_anorith)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case ARMALDO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_armaldo), R.drawable.pokemon_armaldo, Type.GROUND, Ability.SWIFT_SWIM, 75, 125, 100, 70, 80, 45, 51, 39, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_armaldo)).setPointValue(5);
            case FEEBAS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_feebas), R.drawable.pokemon_feebas, Type.WATER, null, 20, 15, 20, 10, 55, 80, 78, 82, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_feebas)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(3);
            case MILOTIC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_milotic), R.drawable.pokemon_milotic, Type.WATER, null, 95, 60, 79, 100, 125, 81, 96, 66, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_milotic)).setPointValue(5);
            case CASTFORM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_castform), R.drawable.pokemon_castform, Type.NORMAL, Ability.FORECAST, 70, 70, 70, 70, 70, 70, 70, 70, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_castform)).setPointValue(3);
            case CASTFORM_SUN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_castform), R.drawable.pokemon_castform_sun, Type.FIRE, Ability.FORECAST, 70, 70, 140, 70, 70, 105, 70, 70, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_castform)).setPointValue(5);
            case CASTFORM_RAIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_castform), R.drawable.pokemon_castform_rain, Type.WATER, Ability.FORECAST, 70, 70, 70, 70, 140, 105, 70, 70, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_castform)).setPointValue(5);
            case CASTFORM_SNOW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_castform), R.drawable.pokemon_castform_snow, Type.ICE, Ability.FORECAST, 70, 70, 70, 70, 70, 105, 70, 140, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_castform)).setPointValue(5);
            case KECLEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kecleon), R.drawable.pokemon_kecleon, Type.NORMAL, Ability.CAMOUFLAGE, 60, 90, 70, 60, 120, 40, 43, 37, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_kecleon)).setPointValue(4);
            case SHUPPET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shuppet), R.drawable.pokemon_shuppet, Type.DARK, Ability.HEX, 44, 75, 35, 63, 33, 45, 37, 53, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_shuppet)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case BANETTE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_banette), R.drawable.pokemon_banette, Type.DARK, Ability.HEX, 64, 115, 65, 83, 63, 65, 67, 63, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_banette), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_banette), R.drawable.pokemon_mega_banette, Type.DARK, Ability.MEGA_DARKNESS, 64, 165, 75, 93, 83, 75, 78, 72, Type.DARK, "")).setPointValue(5);
            case DUSKULL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_duskull), R.drawable.pokemon_duskull, Type.DARK, Ability.CONFUSE_RAY, 20, 40, 90, 30, 90, 25, 26, 24, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_duskull)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case DUSCLOPS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dusclops), R.drawable.pokemon_dusclops, Type.DARK, Ability.CONFUSE_RAY, 40, 70, 130, 60, 130, 25, 27, 23, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_dusclops)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TROPIUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tropius), R.drawable.pokemon_tropius, Type.GRASS, Ability.HARVEST, 99, 68, 83, 72, 87, 51, 59, 43, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_tropius)).setPointValue(3);
            case CHIMECHO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chimecho), R.drawable.pokemon_chimecho, Type.PSYCHIC, null, 75, 50, 80, 95, 90, 65, 42, 88, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_chimecho)).setPointValue(4);
            case ABSOL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_absol), R.drawable.pokemon_absol, Type.DARK, null, 65, 130, 60, 75, 60, 75, 84, 66, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_absol), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_absol), R.drawable.pokemon_mega_absol, Type.DARK, Ability.MEGA_DARKNESS, 65, 150, 60, 115, 60, 115, 129, 101, Type.GRASS, "")).setPointValue(6);
            case WYNAUT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wynaut), R.drawable.pokemon_wynaut, Type.PSYCHIC, Ability.BEGINNERS_LUCK, 95, 23, 48, 23, 48, 23, 24, 22, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_wynaut)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SNORUNT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_snorunt), R.drawable.pokemon_snorunt, Type.ICE, Ability.ICE_BODY, 50, 50, 50, 50, 50, 50, 50, 50, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_snorunt)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case GLALIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_glalie), R.drawable.pokemon_glalie, Type.ICE, Ability.ICE_BODY, 80, 80, 80, 80, 80, 80, 80, 80, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_glalie), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_glalie), R.drawable.pokemon_mega_glalie, Type.STEEL, Ability.MEGA_HAILSTORM, 80, 120, 80, 120, 80, 100, 121, 79, Type.FIRE, "")).setPointValue(4);
            case SPHEAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spheal), R.drawable.pokemon_spheal, Type.ICE, Ability.ICE_BALL, 70, 40, 50, 55, 50, 25, 28, 22, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_spheal)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SEALEO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sealeo), R.drawable.pokemon_sealeo, Type.ICE, Ability.ICE_BALL, 90, 60, 70, 75, 70, 45, 52, 38, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_sealeo)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case WALREIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_walrein), R.drawable.pokemon_walrein, Type.ICE, Ability.ICE_BALL, 110, 80, 90, 95, 90, 65, 77, 53, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_walrein)).setPointValue(4);
            case CLAMPERL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_clamperl), R.drawable.pokemon_clamperl, Type.WATER, null, 35, 64, 85, 74, 55, 32, 36, 28, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_clamperl)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case HUNTAIL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_huntail), R.drawable.pokemon_huntail, Type.WATER, Ability.SWIFT_SWIM, 55, 104, 105, 94, 75, 52, 57, 47, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_huntail)).setPointValue(5);
            case GOREBYSS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gorebyss), R.drawable.pokemon_gorebyss, Type.WATER, Ability.SWIFT_SWIM, 55, 84, 105, 114, 75, 52, 56, 48, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_gorebyss)).setPointValue(5);
            case RELICANTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_relicanth), R.drawable.pokemon_relicanth, Type.WATER, null, 100, 90, 130, 45, 65, 55, 59, 51, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_relicanth)).addTag(CardTags.FISH).setPointValue(4);
            case LUVDISC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_luvdisc), R.drawable.pokemon_luvdisc, Type.WATER, Ability.SWIFT_SWIM, 43, 30, 55, 40, 65, 97, 97, 97, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_luvdisc)).setPointValue(4);
            case BAGON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bagon), R.drawable.pokemon_bagon, Type.DRAGON, null, 45, 75, 60, 40, 30, 50, 56, 44, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_bagon)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SHELGON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shelgon), R.drawable.pokemon_shelgon, Type.DRAGON, null, 65, 95, 100, 60, 50, 50, 58, 42, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_shelgon)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case SALAMENCE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_salamence), R.drawable.pokemon_salamence, Type.DRAGON, Ability.STORM_WINGS, 95, 135, 80, 110, 80, 100, 116, 84, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_salamence), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_salamence), R.drawable.pokemon_mega_salamence, Type.DRAGON, Ability.MEGA_AIRSTREAM, 95, 145, 130, 120, 90, 120, 140, 100, Type.ICE, "")).setPointValue(7);
            case BELDUM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_beldum), R.drawable.pokemon_beldum, Type.STEEL, null, 40, 55, 80, 35, 60, 30, 35, 25, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_beldum)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case METANG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_metang), R.drawable.pokemon_metang, Type.STEEL, null, 60, 75, 100, 55, 80, 50, 59, 41, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_metang)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case METAGROSS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_metagross), R.drawable.pokemon_metagross, Type.STEEL, null, 80, 135, 130, 95, 90, 70, 86, 54, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_metagross), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_metagross), R.drawable.pokemon_mega_metagross, Type.STEEL, Ability.MEGA_STEELSPIKE, 80, 145, 150, 105, 110, 110, 136, 84, Type.FIRE, "")).setPointValue(7);
            case REGIROCK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_regirock), R.drawable.pokemon_regirock, Type.GROUND, Ability.SLOW_START, 80, 100, 200, 50, 100, 50, 60, 40, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_regirock)).setPointValue(5);
            case REGICE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_regice), R.drawable.pokemon_regice, Type.ICE, Ability.SLOW_START, 80, 50, 100, 100, 200, 50, 59, 41, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_regice)).setPointValue(5);
            case REGISTEEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_registeel), R.drawable.pokemon_registeel, Type.STEEL, Ability.SLOW_START, 80, 75, 150, 75, 150, 50, 59, 41, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_registeel)).setPointValue(4);
            case LATIAS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_latias), R.drawable.pokemon_latias, Type.DRAGON, null, 80, 80, 90, 110, 130, 110, 120, 100, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_latias), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_latias), R.drawable.pokemon_mega_latias, Type.DRAGON, Ability.MIST_BALL, 80, 100, 120, 140, 150, 110, 130, 120, Type.DARK, "")).setPointValue(6);
            case LATIOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_latios), R.drawable.pokemon_latios, Type.DRAGON, null, 80, 90, 80, 130, 110, 110, 125, 95, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_latios), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_latios), R.drawable.pokemon_mega_latios, Type.DRAGON, Ability.LUSTER_PURGE, 80, 130, 100, 160, 120, 110, 150, 100, Type.DARK, "")).setPointValue(7);
            case KYOGRE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kyogre), R.drawable.pokemon_kyogre, Type.WATER, Ability.DRIZZLE, 100, 100, 90, 150, 140, 90, 110, 70, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_kyogre), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_primal_kyogre), R.drawable.pokemon_primal_kyogre, Type.WATER, Ability.MEGA_GEYSER, 100, 150, 90, 180, 160, 90, 110, 100, Type.ELECTRIC, "")).setPointValue(8);
            case GROUDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_groudon), R.drawable.pokemon_groudon, Type.GROUND, Ability.DROUGHT, 100, 150, 140, 100, 90, 90, 110, 70, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_groudon), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_primal_groudon), R.drawable.pokemon_primal_groudon, Type.FIRE, Ability.MEGA_FLARE, 100, 180, 160, 150, 90, 90, 140, 70, Type.WATER, "")).setPointValue(8);
            case RAYQUAZA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rayquaza), R.drawable.pokemon_rayquaza, Type.NORMAL, Ability.TAILWIND, 105, 150, 90, 150, 90, 95, 115, 75, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_rayquaza), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_rayquaza), R.drawable.pokemon_mega_rayquaza, Type.NORMAL, Ability.MEGA_AIRSTREAM, 105, 180, 100, 180, 100, 115, 140, 90, Type.ICE, "")).setPointValue(8);
            case JIRACHI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_jirachi), R.drawable.pokemon_jirachi, Type.STEEL, null, 100, 100, 100, 100, 100, 100, 100, 100, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_jirachi)).setPointValue(5);
            //case DEOXYS_NORMAL_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_deoxys_normal_forme), R.drawable.pokemon_deoxys_normal_forme, Type.PSYCHIC, Ability.ALIEN_DNA, 50, 150, 50, 150, 50, 150, 150, 130, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_deoxys_normal_forme)).setPointValue(8);
            //case DEOXYS_ATTACK_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_deoxys_attack_forme), R.drawable.pokemon_deoxys_attack_forme, Type.PSYCHIC, Ability.ALIEN_DNA, 50, 180, 20, 180, 20, 150, 170, 100, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_deoxys_attack_forme)).setPointValue(9);
            //case DEOXYS_DEFENSE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_deoxys_defense_forme), R.drawable.pokemon_deoxys_defense_forme, Type.PSYCHIC, Ability.ALIEN_DNA, 50, 70, 160, 70, 160, 90, 100, 80, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_deoxys_defense_forme)).setPointValue(6);
            //case DEOXYS_SPEED_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_deoxys_speed_forme), R.drawable.pokemon_deoxys_speed_forme, Type.PSYCHIC, Ability.ALIEN_DNA, 50, 95, 90, 95, 90, 180, 160, 160, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_deoxys_speed_forme)).setPointValue(10);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard4(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case TURTWIG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_turtwig), R.drawable.pokemon_turtwig, Type.GRASS, Ability.OVERGROW, 55, 68, 64, 45, 55, 31, 31, 31, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_turtwig)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GROTLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grotle), R.drawable.pokemon_grotle, Type.GRASS, Ability.OVERGROW, 75, 89, 85, 55, 65, 36, 42, 35, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_grotle)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TORTERRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_torterra), R.drawable.pokemon_torterra, Type.GRASS, Ability.OVERGROW, 95, 109, 105, 75, 85, 56, 67, 45, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_torterra)).setPointValue(5);
            case CHIMCHAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chimchar), R.drawable.pokemon_chimchar, Type.FIRE, Ability.BLAZE, 44, 58, 44, 58, 44, 61, 59, 63, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_chimchar)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MONFERNO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_monferno), R.drawable.pokemon_monferno, Type.FIRE, Ability.BLAZE, 64, 78, 52, 78, 52, 81, 87, 75, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_monferno)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case INFERNAPE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_infernape), R.drawable.pokemon_infernape, Type.FIRE, Ability.BLAZE, 76, 104, 71, 104, 71, 108, 122, 94, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_infernape)).setPointValue(6);
            case PIPLUP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_piplup), R.drawable.pokemon_piplup, Type.WATER, Ability.TORRENT, 53, 51, 53, 61, 56, 40, 38, 42, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_piplup)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PRINPLUP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_prinplup), R.drawable.pokemon_prinplup, Type.WATER, Ability.TORRENT, 64, 66, 68, 81, 76, 50, 54, 46, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_prinplup)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case EMPOLEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_empoleon), R.drawable.pokemon_empoleon, Type.WATER, Ability.TORRENT, 84, 86, 88, 111, 101, 60, 69, 51, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_empoleon)).setPointValue(5);
            case STARLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_starly), R.drawable.pokemon_starly, Type.NORMAL, Ability.AIR_CUTTER, 40, 55, 30, 30, 30, 60, 48, 72, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_starly)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case STARAVIA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_staravia), R.drawable.pokemon_staravia, Type.NORMAL, Ability.AIR_CUTTER, 55, 75, 50, 40, 40, 80, 84, 76, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_staravia)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case STARAPTOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_staraptor), R.drawable.pokemon_staraptor, Type.NORMAL, Ability.AIR_CUTTER, 85, 120, 70, 50, 60, 100, 108, 92, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_staraptor)).setPointValue(6);
            case BIDOOF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bidoof), R.drawable.pokemon_bidoof, Type.NORMAL, Ability.SIMPLE, 59, 45, 40, 35, 40, 31, 33, 29, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_bidoof)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BIBAREL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bibarel), R.drawable.pokemon_bibarel, Type.NORMAL, Ability.SIMPLE, 79, 85, 60, 55, 60, 71, 78, 64, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_bibarel)).setPointValue(4);
            case KRICKETOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kricketot), R.drawable.pokemon_kricketot, Type.GRASS, null, 37, 25, 41, 25, 41, 25, 20, 30, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_kricketot)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case KRICKETUNE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kricketune), R.drawable.pokemon_kricketune, Type.GRASS, null, 77, 85, 51, 55, 51, 65, 70, 60, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_kricketune)).setPointValue(3);
            case SHINX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shinx), R.drawable.pokemon_shinx, Type.ELECTRIC, Ability.DISCHARGE, 45, 65, 34, 40, 34, 45, 45, 45, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_shinx)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LUXIO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_luxio), R.drawable.pokemon_luxio, Type.ELECTRIC, Ability.DISCHARGE, 60, 85, 49, 60, 49, 60, 66, 54, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_luxio)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case LUXRAY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_luxray), R.drawable.pokemon_luxray, Type.ELECTRIC, Ability.DISCHARGE, 80, 120, 79, 95, 79, 70, 78, 62, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_luxray)).setPointValue(6);
            case BUDEW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_budew), R.drawable.pokemon_budew, Type.GRASS, Ability.NATURAL_CURE, 40, 30, 35, 50, 70, 55, 38, 72, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_budew)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ROSERADE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_roserade), R.drawable.pokemon_roserade, Type.GRASS, Ability.NATURAL_CURE, 60, 70, 65, 125, 105, 90, 94, 86, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_roserade)).setPointValue(6);
            case CRANIDOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cranidos), R.drawable.pokemon_cranidos, Type.GROUND, Ability.MOLD_BREAKER, 67, 125, 40, 30, 30, 58, 64, 52, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_cranidos)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case RAMPARDOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rampardos), R.drawable.pokemon_rampardos, Type.GROUND, Ability.MOLD_BREAKER, 97, 165, 60, 65, 50, 58, 67, 49, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_rampardos)).setPointValue(7);
            case SHIELDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shieldon), R.drawable.pokemon_shieldon, Type.STEEL, null, 30, 42, 118, 42, 88, 30, 34, 26, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_shieldon)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BASTIODON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bastiodon), R.drawable.pokemon_bastiodon, Type.STEEL, null, 60, 52, 168, 47, 138, 30, 35, 25, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_bastiodon)).setPointValue(2);
            case BURMY_PLANT_CLOAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_burmy_plant_cloak), R.drawable.pokemon_burmy_plant_cloak, Type.GRASS, Ability.ADAPT_CLOAK, 40, 29, 45, 29, 45, 36, 32, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_burmy)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BURMY_SANDY_CLOAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_burmy_sandy_cloak), R.drawable.pokemon_burmy_sandy_cloak, Type.GROUND, Ability.ADAPT_CLOAK, 40, 29, 45, 29, 45, 36, 32, 40, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_burmy)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BURMY_TRASH_CLOAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_burmy_trash_cloak), R.drawable.pokemon_burmy_trash_cloak, Type.STEEL, Ability.ADAPT_CLOAK, 40, 29, 45, 29, 45, 36, 32, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_burmy)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case WORMADAM_PLANT_CLOAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wormadam_plant_cloak), R.drawable.pokemon_wormadam_plant_cloak, Type.GRASS, Ability.ADAPT_CLOAK, 60, 59, 85, 79, 105, 36, 35, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_wormadam)).setPointValue(3);
            case WORMADAM_SANDY_CLOAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wormadam_sandy_cloak), R.drawable.pokemon_wormadam_sandy_cloak, Type.GROUND, Ability.ADAPT_CLOAK, 60, 79, 105, 59, 85, 36, 35, 40, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_wormadam)).setPointValue(3);
            case WORMADAM_TRASH_CLOAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wormadam_trash_cloak), R.drawable.pokemon_wormadam_trash_cloak, Type.STEEL, Ability.ADAPT_CLOAK, 60, 69, 95, 69, 95, 36, 35, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_wormadam)).setPointValue(3);
            case MOTHIM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mothim), R.drawable.pokemon_mothim, Type.GRASS, null, 70, 94, 50, 94, 50, 66, 71, 61, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_mothim)).setPointValue(4);
            case COMBEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_combee), R.drawable.pokemon_combee, Type.GRASS, Ability.HONEY_GATHER, 30, 30, 42, 30, 42, 70, 66, 74, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_combee)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case VESPIQUEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vespiquen), R.drawable.pokemon_vespiquen, Type.GRASS, Ability.UNNERVE, 70, 80, 102, 80, 102, 40, 44, 36, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_vespiquen)).setPointValue(3);
            case PACHIRISU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pachirisu), R.drawable.pokemon_pachirisu, Type.ELECTRIC, Ability.PICKUP, 60, 45, 70, 45, 90, 95, 86, 104, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_pachirisu)).setPointValue(4);
            case BUIZEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_buizel), R.drawable.pokemon_buizel, Type.WATER, Ability.SWIFT_SWIM, 55, 65, 35, 60, 30, 85, 93, 77, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_buizel)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case FLOATZEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_floatzel), R.drawable.pokemon_floatzel, Type.WATER, Ability.SWIFT_SWIM, 85, 105, 55, 85, 50, 115, 127, 103, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_floatzel)).setPointValue(6);
            case CHERUBI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cherubi), R.drawable.pokemon_cherubi, Type.GRASS, Ability.HARVEST, 45, 35, 45, 62, 53, 35, 31, 39, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cherubi)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CHERRIM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cherrim), R.drawable.pokemon_cherrim_overcast, Type.GRASS, Ability.FLOWER_GIFT, 70, 60, 70, 87, 78, 85, 85, 85, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cherrim)).setPointValue(4);
            case CHERRIM_SUNNY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cherrim), R.drawable.pokemon_cherrim_sunshine, Type.GRASS, Ability.FLOWER_GIFT, 70, 60, 70, 107, 78, 105, 95, 85, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cherrim)).setPointValue(5);
            case SHELLOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shellos), R.drawable.pokemon_shellos, Type.WATER, null, 76, 48, 48, 57, 62, 34, 33, 35, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_shellos)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GASTRODON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gastrodon), R.drawable.pokemon_gastrodon, Type.WATER, null, 111, 83, 68, 92, 82, 39, 43, 35, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_gastrodon)).setPointValue(4);
            case AMBIPOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ambipom), R.drawable.pokemon_ambipom, Type.NORMAL, Ability.FLING, 75, 100, 66, 60, 66, 115, 123, 107, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_ambipom)).setPointValue(6);
            case DRIFLOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drifloon), R.drawable.pokemon_drifloon, Type.DARK, Ability.WIND_RIDER, 90, 50, 34, 60, 44, 70, 48, 92, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_drifloon)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DRIFBLIM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drifblim), R.drawable.pokemon_drifblim, Type.DARK, Ability.WIND_RIDER, 150, 80, 44, 90, 54, 80, 84, 76, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_drifblim)).setPointValue(4);
            case BUNEARY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_buneary), R.drawable.pokemon_buneary, Type.NORMAL, null, 55, 66, 44, 44, 56, 85, 80, 90, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_buneary)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case LOPUNNY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lopunny), R.drawable.pokemon_lopunny, Type.NORMAL, null, 65, 76, 84, 54, 96, 105, 116, 94, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_lopunny), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_lopunny), R.drawable.pokemon_mega_lopunny, Type.NORMAL, Ability.MEGA_KNUCKLE, 65, 136, 94, 54, 96, 135, 147, 123, Type.FIGHTING, "")).setPointValue(6);
            case MISMAGIUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mismagius), R.drawable.pokemon_mismagius, Type.DARK, Ability.CONFUSE_RAY, 60, 60, 60, 105, 105, 105, 96, 114, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_mismagius)).setPointValue(5);
            case HONCHKROW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_honchkrow), R.drawable.pokemon_honchkrow, Type.DARK, null, 100, 125, 52, 105, 52, 71, 77, 65, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_honchkrow)).setPointValue(6);
            case GLAMEOW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_glameow), R.drawable.pokemon_glameow, Type.NORMAL, null, 49, 55, 42, 42, 37, 85, 77, 93, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_glameow)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PURUGLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_purugly), R.drawable.pokemon_purugly, Type.NORMAL, Ability.THICK_FAT, 71, 82, 64, 64, 59, 112, 125, 99, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_purugly)).setPointValue(6);
            case CHINGLING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chingling), R.drawable.pokemon_chingling, Type.PSYCHIC, Ability.BEGINNERS_LUCK, 45, 30, 50, 65, 50, 45, 23, 67, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_chingling)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case STUNKY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_stunky), R.drawable.pokemon_stunky, Type.DARK, Ability.VENOSHOCK, 63, 63, 47, 41, 41, 74, 79, 69, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_stunky)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SKUNTANK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skuntank), R.drawable.pokemon_skuntank, Type.DARK, Ability.VENOSHOCK, 103, 93, 67, 71, 61, 84, 93, 75, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_skuntank)).setPointValue(4);
            case BRONZOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bronzor), R.drawable.pokemon_bronzor, Type.STEEL, Ability.HEATPROOF, 57, 24, 86, 24, 86, 23, 26, 20, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bronzor)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BRONZONG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bronzong), R.drawable.pokemon_bronzong, Type.STEEL, Ability.HEATPROOF, 67, 89, 116, 79, 116, 33, 39, 27, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bronzong)).setPointValue(4);
            case BONSLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bonsly), R.drawable.pokemon_bonsly, Type.GROUND, Ability.BEGINNERS_LUCK, 50, 80, 95, 10, 45, 10, 10, 10, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_bonsly)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MIME_JR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mime_jr), R.drawable.pokemon_mime_jr, Type.PSYCHIC, Ability.BEGINNERS_LUCK, 20, 25, 45, 70, 90, 60, 62, 58, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_mime_jr)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case HAPPINY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_happiny), R.drawable.pokemon_happiny, Type.NORMAL, Ability.BEGINNERS_LUCK, 100, 5, 5, 15, 65, 30, 32, 28, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_happiny)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case CHATOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chatot), R.drawable.pokemon_chatot, Type.NORMAL, Ability.CHATTER, 76, 65, 45, 92, 42, 91, 72, 110, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_chatot)).setPointValue(4);
            case SPIRITOMB -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spiritomb), R.drawable.pokemon_spiritomb, Type.DARK, Ability.HEX, 50, 92, 108, 92, 108, 35, 41, 29, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_spiritomb)).setPointValue(4);
            case GIBLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gible), R.drawable.pokemon_gible, Type.GROUND, Ability.SAND_VEIL, 58, 70, 45, 40, 45, 42, 45, 39, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_gible)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GABITE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gabite), R.drawable.pokemon_gabite, Type.GROUND, Ability.SAND_VEIL, 68, 90, 65, 50, 55, 82, 93, 71, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_gabite)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GARCHOMP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_garchomp), R.drawable.pokemon_garchomp, Type.GROUND, Ability.SAND_VEIL, 108, 130, 95, 80, 85, 102, 118, 86, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_garchomp), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_garchomp), R.drawable.pokemon_mega_garchomp, Type.GROUND, Ability.SAND_FORCE, 108, 170, 115, 120, 95, 92, 140, 86, Type.WATER, "")).setPointValue(7);
            case MUNCHLAX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_munchlax), R.drawable.pokemon_munchlax, Type.NORMAL, Ability.GLUTTONY, 135, 85, 40, 40, 85, 5, 30, 10, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_munchlax)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case RIOLU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_riolu), R.drawable.pokemon_riolu, Type.FIGHTING, Ability.BEGINNERS_LUCK, 40, 70, 40, 35, 40, 60, 64, 56, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_riolu)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LUCARIO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lucario), R.drawable.pokemon_lucario, Type.FIGHTING, Ability.FIGHTING_AURA, 70, 110, 70, 115, 70, 90, 102, 78, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_lucario), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_lucario), R.drawable.pokemon_mega_lucario, Type.FIGHTING, Ability.MEGA_KNUCKLE, 70, 145, 88, 140, 70, 112, 127, 97, Type.FIRE, "")).setPointValue(6);
            case HIPPOPOTAS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hippopotas), R.drawable.pokemon_hippopotas, Type.GROUND, Ability.SAND_STREAM, 68, 72, 78, 38, 42, 32, 36, 28, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_hippopotas)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case HIPPOWDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hippowdon), R.drawable.pokemon_hippowdon, Type.GROUND, Ability.SAND_STREAM, 108, 112, 118, 68, 72, 47, 57, 37, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_hippowdon)).setPointValue(5);
            case SKORUPI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skorupi), R.drawable.pokemon_skorupi, Type.DARK, Ability.SNIPER, 40, 50, 90, 30, 55, 65, 67, 63, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_skorupi)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DRAPION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drapion), R.drawable.pokemon_drapion, Type.DARK, Ability.SNIPER, 70, 90, 110, 60, 75, 95, 108, 82, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_drapion)).setPointValue(5);
            case CROAGUNK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_croagunk), R.drawable.pokemon_croagunk, Type.FIGHTING, Ability.DRY_SKIN, 48, 61, 40, 61, 40, 50, 54, 46, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_croagunk)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case TOXICROAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_toxicroak), R.drawable.pokemon_toxicroak, Type.FIGHTING, Ability.DRY_SKIN, 83, 106, 65, 86, 65, 85, 95, 75, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_toxicroak)).setPointValue(5);
            case CARNIVINE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_carnivine), R.drawable.pokemon_carnivine, Type.GRASS, null, 74, 100, 72, 90, 72, 46, 50, 42, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_carnivine)).setPointValue(4);
            case FINNEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_finneon), R.drawable.pokemon_finneon, Type.WATER, Ability.SWIFT_SWIM, 49, 49, 56, 49, 61, 66, 64, 68, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_finneon)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(2);
            case LUMINEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lumineon), R.drawable.pokemon_lumineon, Type.WATER, Ability.SWIFT_SWIM, 69, 69, 76, 69, 86, 91, 98, 84, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_lumineon)).addTag(CardTags.FISH).setPointValue(5);
            case MANTYKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mantyke), R.drawable.pokemon_mantyke, Type.WATER, Ability.BEGINNERS_LUCK, 45, 20, 50, 60, 120, 50, 57, 43, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_mantyke)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SNOVER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_snover), R.drawable.pokemon_snover, Type.ICE, Ability.SNOW_WARNING, 60, 62, 50, 62, 60, 40, 45, 35, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_snover)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ABOMASNOW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_abomasnow), R.drawable.pokemon_abomasnow, Type.ICE, Ability.SNOW_WARNING, 90, 92, 75, 92, 85, 60, 70, 50, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_abomasnow), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_abomasnow), R.drawable.pokemon_mega_abomasnow, Type.ICE, Ability.MEGA_HAILSTORM, 90, 132, 105, 132, 105, 30, 90, 100, Type.FIRE, "")).setPointValue(4);
            case WEAVILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_weavile), R.drawable.pokemon_weavile, Type.DARK, Ability.NIGHT_SLASH, 70, 120, 65, 45, 85, 125, 120, 85, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_weavile)).setPointValue(6);
            case MAGNEZONE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magnezone), R.drawable.pokemon_magnezone, Type.STEEL, Ability.TRI_ATTACK, 70, 70, 115, 130, 90, 60, 71, 49, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_magnezone)).setPointValue(6);
            case LICKILICKY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lickilicky), R.drawable.pokemon_lickilicky, Type.NORMAL, null, 110, 85, 95, 80, 95, 50, 59, 41, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_lickilicky)).setPointValue(4);
            case RHYPERIOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rhyperior), R.drawable.pokemon_rhyperior, Type.GROUND, null, 115, 140, 130, 55, 55, 40, 48, 32, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_rhyperior)).setPointValue(6);
            case TANGROWTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tangrowth), R.drawable.pokemon_tangrowth, Type.GRASS, null, 100, 100, 125, 110, 50, 50, 59, 41, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_tangrowth)).setPointValue(5);
            case ELECTIVIRE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_electivire), R.drawable.pokemon_electivire, Type.ELECTRIC, Ability.MOTOR_DRIVE, 75, 123, 67, 95, 85, 95, 111, 79, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_electivire)).setPointValue(6);
            case MAGMORTAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magmortar), R.drawable.pokemon_magmortar, Type.FIRE, Ability.FLAME_BODY, 75, 95, 67, 125, 95, 83, 95, 71, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_magmortar)).setPointValue(6);
            case TOGEKISS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_togekiss), R.drawable.pokemon_togekiss, Type.FAIRY, null, 85, 50, 95, 120, 115, 80, 89, 71, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_togekiss)).setPointValue(6);
            case YANMEGA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_yanmega), R.drawable.pokemon_yanmega, Type.GRASS, Ability.TAILWIND, 86, 76, 86, 116, 56, 95, 107, 83, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_yanmega)).setPointValue(6);
            case LEAFEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_leafeon), R.drawable.pokemon_leafeon, Type.GRASS, Ability.GRASS_AURA, 65, 110, 130, 60, 65, 95, 103, 87, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_leafeon)).setPointValue(6);
            case GLACEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_glaceon), R.drawable.pokemon_glaceon, Type.ICE, Ability.ICE_AURA, 65, 60, 110, 130, 95, 65, 71, 59, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_glaceon)).setPointValue(6);
            case GLISCOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gliscor), R.drawable.pokemon_gliscor, Type.GROUND, Ability.SAND_VEIL, 75, 95, 125, 45, 75, 95, 106, 84, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_gliscor)).setPointValue(5);
            case MAMOSWINE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mamoswine), R.drawable.pokemon_mamoswine, Type.ICE, Ability.SNOW_CLOAK, 110, 130, 80, 70, 60, 80, 96, 64, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_mamoswine)).setPointValue(6);
            case PORYGON_Z -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_porygon_z), R.drawable.pokemon_porygon_z, Type.NORMAL, Ability.DOWNLOAD, 85, 80, 70, 135, 75, 90, 80, 80, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_porygon_z)).setPointValue(6);
            case GALLADE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gallade), R.drawable.pokemon_gallade, Type.FIGHTING, null, 68, 125, 65, 65, 115, 80, 90, 70, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_gallade), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_gallade), R.drawable.pokemon_mega_gallade, Type.FIGHTING, Ability.MEGA_KNUCKLE, 68, 165, 95, 65, 115, 110, 124, 96, Type.DARK, "")).setPointValue(6);
            case PROBOPASS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_probopass), R.drawable.pokemon_probopass, Type.STEEL, null, 60, 55, 145, 75, 150, 40, 48, 32, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_probopass)).setPointValue(4);
            case DUSKNOIR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dusknoir), R.drawable.pokemon_dusknoir, Type.DARK, Ability.CONFUSE_RAY, 45, 100, 135, 65, 135, 45, 52, 38, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_dusknoir)).setPointValue(5);
            case FROSLASS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_froslass), R.drawable.pokemon_froslass, Type.ICE, Ability.AURORA_VEIL, 70, 80, 70, 80, 70, 110, 120, 100, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_froslass)).setPointValue(6);
            case ROTOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rotom), R.drawable.pokemon_rotom, Type.ELECTRIC, Ability.LEVITATE, 50, 50, 77, 95, 77, 91, 45, 95, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_rotom)).setPointValue(4);
            case HEAT_ROTOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_heat_rotom), R.drawable.pokemon_heat_rotom, Type.FIRE, Ability.LEVITATE, 50, 65, 107, 105, 107, 86, 45, 105, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_heat_rotom)).setPointValue(5);
            case WASH_ROTOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wash_rotom), R.drawable.pokemon_wash_rotom, Type.WATER, Ability.LEVITATE, 50, 65, 107, 105, 107, 86, 45, 105, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_wash_rotom)).setPointValue(5);
            case FROST_ROTOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_frost_rotom), R.drawable.pokemon_frost_rotom, Type.ICE, Ability.LEVITATE, 50, 65, 107, 105, 107, 86, 45, 105, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_frost_rotom)).setPointValue(5);
            case FAN_ROTOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fan_rotom), R.drawable.pokemon_fan_rotom, Type.NORMAL, Ability.LEVITATE, 50, 65, 107, 105, 107, 86, 45, 105, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_fan_rotom)).setPointValue(5);
            case MOW_ROTOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mow_rotom), R.drawable.pokemon_mow_rotom, Type.GRASS, Ability.LEVITATE, 50, 65, 107, 105, 107, 86, 45, 105, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_mow_rotom)).setPointValue(5);
            case UXIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_uxie), R.drawable.pokemon_uxie, Type.PSYCHIC, Ability.LEVITATE, 75, 75, 130, 75, 130, 95, 75, 130, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_uxie)).setPointValue(5);
            case MESPRIT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mesprit), R.drawable.pokemon_mesprit, Type.PSYCHIC, Ability.LEVITATE, 80, 105, 105, 105, 105, 80, 75, 130, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_mesprit)).setPointValue(6);
            case AZELF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_azelf), R.drawable.pokemon_azelf, Type.PSYCHIC, Ability.LEVITATE, 75, 125, 70, 125, 70, 115, 75, 130, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_azelf)).setPointValue(6);
            case DIALGA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dialga), R.drawable.pokemon_dialga, Type.STEEL, null, 100, 120, 120, 150, 100, 90, 120, 70, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_dialga)).setPointValue(8);
            case DIALGA_ORIGIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dialga_origin_forme), R.drawable.pokemon_dialga_origin, Type.STEEL, null, 100, 100, 120, 150, 120, 90, 120, 70, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_dialga_origin_forme)).setPointValue(8);
            case PALKIA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_palkia), R.drawable.pokemon_palkia, Type.WATER, null, 90, 120, 100, 150, 120, 100, 110, 80, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_palkia)).setPointValue(8);
            case PALKIA_ORIGIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_palkia_origin_forme), R.drawable.pokemon_palkia_origin, Type.WATER, null, 90, 100, 100, 150, 120, 120, 110, 80, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_palkia_origin_forme)).setPointValue(8);
            case HEATRAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_heatran), R.drawable.pokemon_heatran, Type.FIRE, null, 91, 90, 106, 130, 106, 77, 94, 60, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_heatran)).setPointValue(6);
            case REGIGIGAS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_regigigas), R.drawable.pokemon_regigigas, Type.NORMAL, Ability.SLOW_START, 110, 160, 110, 80, 110, 100, 121, 79, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_regigigas)).setPointValue(8);
            case GIRATINA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_giratina_altered_forme), R.drawable.pokemon_giratina_altered, Type.DARK, Ability.DISTORTION_FORCE, 150, 100, 120, 100, 120, 90, 115, 75, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_giratina_altered_forme)).setPointValue(6);
            case GIRATINA_ORIGIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_giratina_origin_forme), R.drawable.pokemon_giratina_origin, Type.DARK, Ability.DISTORTION_FORCE, 150, 120, 100, 120, 100, 90, 75, 115, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_giratina_origin_forme)).setPointValue(6);
            case CRESSELIA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cresselia), R.drawable.pokemon_cresselia, Type.PSYCHIC, Ability.LUNAR_BLESSING, 120, 70, 110, 75, 120, 85, 95, 75, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_cresselia)).setPointValue(5);
            case PHIONE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_phione), R.drawable.pokemon_phione, Type.WATER, null, 80, 80, 80, 80, 80, 80, 80, 80, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_phione)).setPointValue(4);
            case MANAPHY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_manaphy), R.drawable.pokemon_manaphy, Type.WATER, Ability.HEART_SWAP, 100, 100, 100, 100, 100, 100, 100, 100, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_manaphy)).setPointValue(5);
            case DARKRAI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_darkrai), R.drawable.pokemon_darkrai, Type.DARK, Ability.NIGHTMARE, 70, 90, 90, 135, 90, 125, 140, 110, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_darkrai)).setPointValue(7);
            case SHAYMIN_LAND_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shaymin_land_forme), R.drawable.pokemon_shaymin, Type.GRASS, null, 100, 100, 100, 100, 100, 100, 100, 100, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_shaymin_land_forme)).setPointValue(5);
            case SHAYMIN_SKY_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shaymin_sky_forme), R.drawable.pokemon_shaymin_sky_forme, Type.GRASS, null, 100, 103, 75, 120, 75, 127, 120, 135, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_shaymin_sky_forme)).setPointValue(7);
            case ARCEUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arceus), R.drawable.pokemon_arceus, Type.STELLAR, null, 120, 120, 120, 120, 120, 120, 120, 120, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_arceus)).setPointValue(7);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard5(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case VICTINI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_victini), R.drawable.pokemon_victini, Type.FIRE, Ability.VICTORY_STAR, 100, 100, 100, 100, 100, 100, 100, 100, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_victini)).setPointValue(5);
            case SNIVY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_snivy), R.drawable.pokemon_snivy, Type.GRASS, Ability.OVERGROW, 45, 45, 55, 45, 55, 63, 62, 64, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_snivy)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SERVINE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_servine), R.drawable.pokemon_servine, Type.GRASS, Ability.OVERGROW, 60, 60, 75, 60, 75, 83, 87, 79, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_servine)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case SERPERIOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_serperior), R.drawable.pokemon_serperior, Type.GRASS, Ability.OVERGROW, 75, 75, 95, 75, 95, 113, 129, 97, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_serperior)).setPointValue(6);
            case TEPIG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tepig), R.drawable.pokemon_tepig, Type.FIRE, Ability.BLAZE, 65, 63, 45, 45, 45, 45, 45, 45, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_tepig)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PIGNITE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pignite), R.drawable.pokemon_pignite, Type.FIRE, Ability.BLAZE, 90, 93, 55, 70, 55, 55, 62, 48, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_pignite)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case EMBOAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_emboar), R.drawable.pokemon_emboar, Type.FIRE, Ability.BLAZE, 110, 123, 65, 100, 65, 65, 77, 53, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_emboar)).setPointValue(5);
            case OSHAWOTT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oshawott), R.drawable.pokemon_oshawott, Type.WATER, Ability.TORRENT, 55, 55, 45, 63, 45, 45, 43, 47, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_oshawott)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DEWOTT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dewott), R.drawable.pokemon_dewott, Type.WATER, Ability.TORRENT, 75, 75, 60, 83, 60, 60, 65, 55, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_dewott)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SAMUROTT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_samurott), R.drawable.pokemon_samurott, Type.WATER, Ability.TORRENT, 95, 100, 85, 108, 70, 70, 81, 59, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_samurott)).setPointValue(5);
            case HISUIAN_SAMUROTT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_samurott), R.drawable.pokemon_hisuian_samurott, Type.DARK, null, 90, 108, 80, 100, 65, 85, 96, 74, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_samurott)).setPointValue(5);
            case PATRAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_patrat), R.drawable.pokemon_patrat, Type.NORMAL, null, 45, 55, 39, 35, 39, 42, 43, 41, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_patrat)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case WATCHOG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_watchog), R.drawable.pokemon_watchog, Type.NORMAL, null, 60, 85, 69, 60, 69, 77, 84, 70, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_watchog)).setPointValue(4);
            case LILLIPUP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lillipup), R.drawable.pokemon_lillipup, Type.NORMAL, Ability.PICKUP, 45, 60, 45, 25, 45, 55, 50, 60, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_lillipup)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case HERDIER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_herdier), R.drawable.pokemon_herdier, Type.NORMAL, null, 65, 80, 65, 35, 65, 60, 63, 57, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_herdier)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case STOUTLAND -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_stoutland), R.drawable.pokemon_stoutland, Type.NORMAL, null, 85, 110, 90, 45, 90, 80, 91, 69, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_stoutland)).setPointValue(5);
            case PURRLOIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_purrloin), R.drawable.pokemon_purrloin, Type.DARK, null, 41, 50, 37, 50, 37, 66, 67, 65, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_purrloin)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LIEPARD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_liepard), R.drawable.pokemon_liepard, Type.DARK, null, 64, 88, 50, 88, 50, 106, 118, 94, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_liepard)).setPointValue(6);
            case PANSAGE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pansage), R.drawable.pokemon_pansage, Type.GRASS, Ability.GLUTTONY, 50, 53, 48, 53, 48, 64, 65, 63, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_pansage)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SIMISAGE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_simisage), R.drawable.pokemon_simisage, Type.GRASS, Ability.GLUTTONY, 75, 98, 63, 98, 63, 101, 111, 91, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_simisage)).setPointValue(5);
            case PANSEAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pansear), R.drawable.pokemon_pansear, Type.FIRE, Ability.GLUTTONY, 50, 53, 48, 53, 48, 64, 65, 63, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_pansear)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SIMISEAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_simisear), R.drawable.pokemon_simisear, Type.FIRE, Ability.GLUTTONY, 75, 98, 63, 98, 63, 101, 110, 92, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_simisear)).setPointValue(5);
            case PANPOUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_panpour), R.drawable.pokemon_panpour, Type.WATER, Ability.GLUTTONY, 50, 53, 48, 53, 48, 64, 66, 62, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_panpour)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SIMIPOUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_simipour), R.drawable.pokemon_simipour, Type.WATER, Ability.GLUTTONY, 75, 98, 63, 98, 63, 101, 110, 92, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_simipour)).setPointValue(5);
            case MUNNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_munna), R.drawable.pokemon_munna, Type.PSYCHIC, Ability.PSYCHIC_SURGE, 76, 25, 45, 67, 55, 24, 26, 22, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_munna)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MUSHARNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_musharna), R.drawable.pokemon_musharna, Type.PSYCHIC, Ability.PSYCHIC_SURGE, 116, 55, 85, 107, 95, 29, 33, 25, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_musharna)).setPointValue(4);
            case PIDOVE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pidove), R.drawable.pokemon_pidove, Type.NORMAL, null, 50, 55, 50, 36, 30, 43, 35, 51, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_pidove)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case TRANQUILL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tranquill), R.drawable.pokemon_tranquill, Type.NORMAL, null, 62, 77, 62, 50, 42, 65, 68, 62, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_tranquill)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case UNFEZANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_unfezant), R.drawable.pokemon_unfezant, Type.NORMAL, null, 80, 115, 80, 65, 55, 93, 102, 84, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_unfezant)).setPointValue(5);
            case BLITZLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_blitzle), R.drawable.pokemon_blitzle, Type.ELECTRIC, Ability.DISCHARGE, 45, 60, 32, 50, 32, 76, 83, 69, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_blitzle)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ZEBSTRIKA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zebstrika), R.drawable.pokemon_zebstrika, Type.ELECTRIC, Ability.DISCHARGE, 75, 100, 63, 80, 63, 116, 133, 99, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_zebstrika)).setPointValue(6);
            case ROGGENROLA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_roggenrola), R.drawable.pokemon_roggenrola, Type.GROUND, null, 55, 75, 85, 25, 25, 15, 16, 14, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_roggenrola)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case BOLDORE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_boldore), R.drawable.pokemon_boldore, Type.GROUND, null, 70, 105, 105, 50, 40, 20, 23, 17, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_boldore)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GIGALITH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gigalith), R.drawable.pokemon_gigalith, Type.GROUND, null, 85, 135, 130, 60, 80, 25, 30, 20, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_gigalith)).setPointValue(6);
            case WOOBAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_woobat), R.drawable.pokemon_woobat, Type.PSYCHIC, Ability.KLUTZ, 65, 45, 43, 55, 43, 72, 58, 86, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_woobat)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SWOOBAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swoobat), R.drawable.pokemon_swoobat, Type.PSYCHIC, Ability.KLUTZ, 67, 57, 55, 77, 55, 114, 116, 112, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_swoobat)).setPointValue(5);
            case DRILBUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drilbur), R.drawable.pokemon_drilbur, Type.GROUND, Ability.SAND_RUSH, 60, 85, 40, 30, 45, 68, 68, 68, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_drilbur)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case EXCADRILL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_excadrill), R.drawable.pokemon_excadrill, Type.GROUND, Ability.SAND_RUSH, 110, 135, 60, 50, 65, 88, 98, 78, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_excadrill)).setPointValue(6);
            case AUDINO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_audino), R.drawable.pokemon_audino, Type.NORMAL, Ability.REGENERATOR, 103, 60, 86, 60, 86, 50, 55, 45, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_audino), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_audino), R.drawable.pokemon_mega_audino, Type.FAIRY, Ability.MEGA_STARFALL, 103, 60, 126, 80, 126, 50, 85, 45, Type.STEEL, "")).setPointValue(2);
            case TIMBURR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_timburr), R.drawable.pokemon_timburr, Type.FIGHTING, null, 75, 80, 55, 25, 35, 35, 36, 34, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_timburr)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GURDURR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gurdurr), R.drawable.pokemon_gurdurr, Type.FIGHTING, null, 85, 105, 85, 40, 50, 40, 45, 35, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_gurdurr)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case CONKELDURR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_conkeldurr), R.drawable.pokemon_conkeldurr, Type.FIGHTING, null, 105, 140, 95, 55, 65, 45, 52, 38, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_conkeldurr)).setPointValue(6);
            case TYMPOLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tympole), R.drawable.pokemon_tympole, Type.WATER, Ability.SWIFT_SWIM, 50, 50, 40, 50, 40, 64, 59, 69, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_tympole)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PALPITOAD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_palpitoad), R.drawable.pokemon_palpitoad, Type.WATER, Ability.SWIFT_SWIM, 75, 65, 55, 65, 55, 69, 73, 65, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_palpitoad)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SEISMITOAD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_seismitoad), R.drawable.pokemon_seismitoad, Type.WATER, Ability.SWIFT_SWIM, 105, 95, 75, 85, 75, 74, 84, 64, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_seismitoad)).setPointValue(4);
            case THROH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_throh), R.drawable.pokemon_throh, Type.FIGHTING, null, 120, 100, 85, 30, 85, 45, 51, 39, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_throh)).setPointValue(4);
            case SAWK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sawk), R.drawable.pokemon_sawk, Type.FIGHTING, null, 75, 125, 75, 30, 75, 85, 96, 74, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_sawk)).setPointValue(6);
            case SEWADDLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sewaddle), R.drawable.pokemon_sewaddle, Type.GRASS, Ability.CHLOROPHYLL, 45, 53, 70, 40, 60, 42, 35, 49, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_sewaddle)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SWADLOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swadloon), R.drawable.pokemon_swadloon, Type.GRASS, Ability.CHLOROPHYLL, 55, 63, 90, 50, 80, 42, 41, 43, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_swadloon)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LEAVANNY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_leavanny), R.drawable.pokemon_leavanny, Type.GRASS, Ability.CHLOROPHYLL, 75, 103, 80, 70, 80, 92, 98, 86, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_leavanny)).setPointValue(5);
            case VENIPEDE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_venipede), R.drawable.pokemon_venipede, Type.GRASS, Ability.POISON_POINT, 30, 45, 59, 30, 39, 57, 54, 60, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_venipede)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case WHIRLIPEDE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_whirlipede), R.drawable.pokemon_whirlipede, Type.GRASS, Ability.POISON_POINT, 40, 55, 99, 40, 79, 47, 53, 41, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_whirlipede)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SCOLIPEDE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scolipede), R.drawable.pokemon_scolipede, Type.GRASS, Ability.POISON_POINT, 60, 100, 89, 55, 69, 112, 133, 91, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_scolipede)).setPointValue(6);
            case COTTONEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cottonee), R.drawable.pokemon_cottonee, Type.FAIRY, Ability.MISTY_SURGE, 40, 27, 60, 37, 50, 66, 34, 98, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cottonee)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case WHIMSICOTT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_whimsicott), R.drawable.pokemon_whimsicott, Type.FAIRY, Ability.MISTY_SURGE, 60, 67, 85, 77, 75, 116, 112, 120, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_whimsicott)).setPointValue(6);
            case PETILIL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_petilil), R.drawable.pokemon_petilil, Type.GRASS, Ability.DANCER, 45, 35, 50, 70, 50, 30, 29, 31, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_petilil)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LILLIGANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lilligant), R.drawable.pokemon_lilligant, Type.GRASS, Ability.DANCER, 70, 60, 75, 110, 75, 90, 95, 85, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_lilligant)).setPointValue(5);
            case HISUIAN_LILLIGANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_lilligant), R.drawable.pokemon_hisuian_lilligant, Type.FIGHTING, Ability.DANCER, 70, 105, 75, 50, 75, 105, 112, 98, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_lilligant)).setPointValue(5);
            case BASCULIN_RED -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_basculin), R.drawable.pokemon_basculin_red_striped, Type.WATER, null, 70, 92, 65, 80, 55, 98, 104, 92, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_basculin)).addTag(CardTags.FISH).setPointValue(5);
            case BASCULIN_BLUE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_basculin), R.drawable.pokemon_basculin_blue_striped, Type.WATER, null, 70, 92, 65, 80, 55, 98, 104, 92, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_basculin)).addTag(CardTags.FISH).setPointValue(5);
            case BASCULIN_WHITE_STRIPED -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_basculin), R.drawable.pokemon_basculin_white_striped, Type.WATER, null, 70, 92, 65, 80, 55, 98, 104, 92, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_basculin)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(5);
            case SANDILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sandile), R.drawable.pokemon_sandile, Type.GROUND, Ability.INTIMIDATE, 50, 72, 35, 35, 35, 65, 68, 62, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_sandile)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case KROKOROK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_krokorok), R.drawable.pokemon_krokorok, Type.GROUND, Ability.INTIMIDATE, 60, 82, 45, 45, 45, 74, 82, 66, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_krokorok)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case KROOKODILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_krookodile), R.drawable.pokemon_krookodile, Type.GROUND, Ability.INTIMIDATE, 95, 117, 80, 65, 70, 92, 107, 77, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_krookodile)).setPointValue(6);
            case DARUMAKA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_darumaka), R.drawable.pokemon_darumaka, Type.FIRE, null, 70, 90, 45, 15, 45, 50, 55, 45, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_darumaka)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GALARIAN_DARUMAKA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_darumaka), R.drawable.pokemon_galarian_darumaka, Type.ICE, null, 70, 90, 45, 15, 45, 50, 56, 44, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_galarian_darumaka)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DARMANITAN_STANDARD_MODE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_darmanitan), R.drawable.pokemon_darmanitan, Type.FIRE, Ability.ZEN_MODE, 105, 140, 55, 30, 55, 95, 110, 80, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_darmanitan)).setPointValue(6);
            case DARMANITAN_ZEN_MODE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_darmanitan), R.drawable.pokemon_darmanitan_zen_mode, Type.FIRE, Ability.ZEN_MODE, 105, 30, 105, 140, 105, 55, 140, 50, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_darmanitan)).setPointValue(7);
            case GALARIAN_DARMANITAN_STANDARD_MODE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_darmanitan), R.drawable.pokemon_galarian_darmanitan, Type.ICE, Ability.ZEN_MODE, 105, 140, 55, 30, 55, 95, 110, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_galarian_darmanitan)).setPointValue(6);
            case GALARIAN_DARMANITAN_ZEN_MODE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_darmanitan), R.drawable.pokemon_galarian_darmanitan_zen_mode, Type.ICE, Ability.ZEN_MODE, 105, 160, 55, 30, 55, 135, 140, 50, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_galarian_darmanitan)).setPointValue(7);
            case MARACTUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_maractus), R.drawable.pokemon_maractus, Type.GRASS, Ability.SAND_FORCE, 75, 86, 67, 106, 67, 60, 65, 55, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_maractus)).setPointValue(5);
            case DWEBBLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dwebble), R.drawable.pokemon_dwebble, Type.GROUND, null, 50, 65, 85, 35, 35, 55, 57, 53, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_dwebble)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CRUSTLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crustle), R.drawable.pokemon_crustle, Type.GROUND, null, 70, 105, 125, 65, 75, 45, 53, 37, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_crustle)).setPointValue(5);
            case SCRAGGY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scraggy), R.drawable.pokemon_scraggy, Type.FIGHTING, Ability.FACADE, 50, 75, 70, 35, 70, 48, 49, 47, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_scraggy)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SCRAFTY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scrafty), R.drawable.pokemon_scrafty, Type.FIGHTING, Ability.FACADE, 65, 90, 115, 45, 115, 58, 64, 52, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_scrafty)).setPointValue(4);
            case SIGILYPH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sigilyph), R.drawable.pokemon_sigilyph, Type.PSYCHIC, null, 72, 58, 80, 103, 80, 97, 101, 93, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_sigilyph)).setPointValue(5);
            case YAMASK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_yamask), R.drawable.pokemon_yamask, Type.DARK, null, 38, 30, 85, 55, 65, 30, 22, 38, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_yamask)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case GALARIAN_YAMASK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_yamask), R.drawable.pokemon_galarian_yamask, Type.DARK, null, 38, 55, 85, 30, 65, 30, 22, 38, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_galarian_yamask)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case COFAGRIGUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cofagrigus), R.drawable.pokemon_cofagrigus, Type.DARK, null, 58, 50, 145, 95, 105, 30, 34, 26, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_cofagrigus)).setPointValue(4);
            case TIRTOUGA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tirtouga), R.drawable.pokemon_tirtouga, Type.WATER, Ability.SWIFT_SWIM, 54, 78, 103, 53, 45, 22, 23, 21, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_tirtouga)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case CARRACOSTA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_carracosta), R.drawable.pokemon_carracosta, Type.WATER, Ability.SWIFT_SWIM, 74, 108, 133, 83, 65, 32, 37, 27, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_carracosta)).setPointValue(5);
            case ARCHEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_archen), R.drawable.pokemon_archen, Type.NORMAL, Ability.DEFEATIST, 55, 112, 45, 74, 45, 70, 70, 70, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_archen)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case ARCHEOPS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_archeops), R.drawable.pokemon_archeops, Type.NORMAL, Ability.DEFEATIST, 75, 140, 65, 112, 65, 110, 121, 99, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_archeops)).setPointValue(7);
            case TRUBBISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_trubbish), R.drawable.pokemon_trubbish, Type.DARK, null, 50, 50, 62, 40, 62, 65, 71, 59, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_trubbish)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GARBODOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_garbodor), R.drawable.pokemon_garbodor, Type.DARK, null, 80, 95, 82, 60, 82, 75, 87, 63, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_garbodor), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_garbodor), R.drawable.pokemon_mega_garbodor, Type.DARK, Ability.MEGA_DARKNESS, 80, 115, 102, 80, 102, 95, 87, 50, Type.GROUND, "")).setPointValue(4);
            case ZORUA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zorua), R.drawable.pokemon_zorua, Type.DARK, Ability.DARK_HAZE, 40, 65, 40, 80, 40, 65, 67, 63, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_zorua)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case HISUIAN_ZORUA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_zorua), R.drawable.pokemon_hisuian_zorua, Type.NORMAL, Ability.SPECTRAL_THIEF, 35, 60, 40, 85, 40, 70, 72, 68, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_zorua)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ZOROARK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zoroark), R.drawable.pokemon_zoroark, Type.DARK, Ability.DARK_HAZE, 60, 105, 60, 120, 60, 105, 121, 89, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_zoroark)).setPointValue(6);
            case HISUIAN_ZOROARK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_zoroark), R.drawable.pokemon_hisuian_zoroark, Type.NORMAL, Ability.SPECTRAL_THIEF, 55, 100, 60, 125, 60, 110, 126, 94, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_zoroark)).setPointValue(6);
            case MINCCINO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_minccino), R.drawable.pokemon_minccino, Type.NORMAL, Ability.SKILL_LINK, 55, 50, 40, 40, 40, 75, 71, 79, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_minccino)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case CINCCINO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cinccino), R.drawable.pokemon_cinccino, Type.NORMAL, Ability.SKILL_LINK, 75, 95, 60, 65, 60, 115, 113, 117, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_cinccino)).setPointValue(6);
            case GOTHITA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gothita), R.drawable.pokemon_gothita, Type.PSYCHIC, null, 45, 30, 50, 55, 65, 45, 43, 47, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_gothita)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GOTHORITA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gothorita), R.drawable.pokemon_gothorita, Type.PSYCHIC, null, 60, 45, 70, 75, 85, 55, 58, 52, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_gothorita)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GOTHITELLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gothitelle), R.drawable.pokemon_gothitelle, Type.PSYCHIC, null, 70, 55, 95, 95, 110, 65, 73, 57, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_gothitelle)).setPointValue(4);
            case SOLOSIS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_solosis), R.drawable.pokemon_solosis, Type.PSYCHIC, Ability.TRICK_ROOM, 45, 30, 40, 105, 50, 20, 13, 27, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_solosis)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DUOSION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_duosion), R.drawable.pokemon_duosion, Type.PSYCHIC, Ability.TRICK_ROOM, 65, 40, 50, 125, 60, 30, 30, 30, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_duosion)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case REUNICLUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_reuniclus), R.drawable.pokemon_reuniclus, Type.PSYCHIC, Ability.TRICK_ROOM, 110, 65, 75, 125, 85, 30, 32, 28, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_reuniclus)).setPointValue(5);
            case DUCKLETT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ducklett), R.drawable.pokemon_ducklett, Type.WATER, Ability.DRIZZLE, 62, 44, 50, 44, 50, 55, 52, 58, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_ducklett)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SWANNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swanna), R.drawable.pokemon_swanna, Type.WATER, Ability.DRIZZLE, 75, 87, 63, 87, 63, 98, 106, 90, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_swanna)).setPointValue(5);
            case VANILLITE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vanillite), R.drawable.pokemon_vanillite, Type.ICE, Ability.BRAIN_FREEZE, 36, 50, 50, 65, 60, 44, 42, 46, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_vanillite)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case VANILLISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vanillish), R.drawable.pokemon_vanillish, Type.ICE, Ability.BRAIN_FREEZE, 51, 65, 65, 80, 75, 59, 66, 52, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_vanillish)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case VANILLUXE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vanilluxe), R.drawable.pokemon_vanilluxe, Type.ICE, Ability.BRAIN_FREEZE, 71, 95, 85, 110, 95, 79, 89, 69, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_vanilluxe)).setPointValue(5);
            case DEERLING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_deerling), R.drawable.pokemon_deerling, Type.GRASS, Ability.GRASSY_SURGE, 60, 60, 50, 40, 50, 75, 80, 70, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_deerling)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SAWSBUCK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sawsbuck), R.drawable.pokemon_sawsbuck, Type.GRASS, Ability.GRASSY_SURGE, 80, 100, 70, 60, 70, 95, 110, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_sawsbuck)).setPointValue(5);
            case EMOLGA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_emolga), R.drawable.pokemon_emolga, Type.ELECTRIC, Ability.DISCHARGE, 55, 75, 60, 75, 60, 103, 96, 110, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_emolga)).setPointValue(5);
            case KARRABLAST -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_karrablast), R.drawable.pokemon_karrablast, Type.GRASS, null, 50, 75, 45, 40, 45, 60, 40, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_karrablast)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ESCAVALIER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_escavalier), R.drawable.pokemon_escavalier, Type.STEEL, null, 70, 135, 105, 60, 105, 20, 100, 60, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_escavalier)).setPointValue(6);
            case FOONGUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_foongus), R.drawable.pokemon_foongus, Type.GRASS, null, 69, 55, 45, 55, 55, 15, 10, 20, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_foongus)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case AMOONGUSS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_amoonguss), R.drawable.pokemon_amoonguss, Type.GRASS, null, 114, 85, 70, 85, 80, 30, 30, 30, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_amoonguss)).setPointValue(3);
            case FRILLISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_frillish), R.drawable.pokemon_frillish, Type.WATER, null, 55, 40, 50, 65, 85, 40, 44, 36, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_frillish)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case JELLICENT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_jellicent), R.drawable.pokemon_jellicent, Type.WATER, null, 100, 60, 70, 85, 105, 60, 70, 50, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_jellicent)).setPointValue(4);
            case ALOMOMOLA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alomomola), R.drawable.pokemon_alomomola, Type.WATER, Ability.HYDRATION, 165, 75, 80, 40, 45, 65, 71, 59, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_alomomola)).setPointValue(3);
            case JOLTIK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_joltik), R.drawable.pokemon_joltik, Type.ELECTRIC, Ability.STICKY_WEB, 50, 47, 50, 57, 50, 65, 33, 97, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_joltik)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GALVANTULA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galvantula), R.drawable.pokemon_galvantula, Type.ELECTRIC, Ability.STICKY_WEB, 70, 77, 60, 97, 60, 108, 112, 104, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_galvantula)).setPointValue(5);
            case FERROSEED -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ferroseed), R.drawable.pokemon_ferroseed, Type.STEEL, null, 44, 50, 91, 24, 86, 10, 15, 10, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_ferroseed)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case FERROTHORN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ferrothorn), R.drawable.pokemon_ferrothorn, Type.STEEL, null, 74, 94, 131, 54, 116, 20, 45, 25, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_ferrothorn)).setPointValue(4);
            case KLINK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_klink), R.drawable.pokemon_klink, Type.STEEL, Ability.ELECTRIC_SURGE, 40, 55, 70, 45, 60, 30, 32, 28, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_klink)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case KLANG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_klang), R.drawable.pokemon_klang, Type.STEEL, Ability.ELECTRIC_SURGE, 60, 80, 95, 70, 85, 50, 56, 44, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_klang)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case KLINKLANG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_klinklang), R.drawable.pokemon_klinklang, Type.STEEL, Ability.ELECTRIC_SURGE, 60, 100, 115, 70, 85, 90, 103, 77, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_klinklang)).setPointValue(5);
            case TYNAMO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tynamo), R.drawable.pokemon_tynamo, Type.ELECTRIC, Ability.LEVITATE, 35, 55, 40, 45, 40, 60, 17, 103, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_tynamo)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case EELEKTRIK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_eelektrik), R.drawable.pokemon_eelektrik, Type.ELECTRIC, Ability.LEVITATE, 65, 85, 70, 75, 70, 40, 43, 37, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_eelektrik)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case EELEKTROSS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_eelektross), R.drawable.pokemon_eelektross, Type.ELECTRIC, Ability.LEVITATE, 85, 115, 80, 105, 80, 50, 57, 43, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_eelektross)).setPointValue(5);
            case ELGYEM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_elgyem), R.drawable.pokemon_elgyem, Type.PSYCHIC, Ability.ANALYTIC, 55, 55, 55, 85, 55, 30, 30, 30, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_elgyem)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case BEHEEYEM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_beheeyem), R.drawable.pokemon_beheeyem, Type.PSYCHIC, Ability.ANALYTIC, 75, 75, 75, 125, 95, 40, 44, 36, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_beheeyem)).setPointValue(5);
            case LITWICK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_litwick), R.drawable.pokemon_litwick, Type.FIRE, Ability.FLAME_BODY, 50, 30, 55, 65, 55, 20, 20, 20, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_litwick)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LAMPENT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lampent), R.drawable.pokemon_lampent, Type.FIRE, Ability.FLAME_BODY, 60, 40, 60, 95, 60, 55, 55, 55, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_lampent)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case CHANDELURE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chandelure), R.drawable.pokemon_chandelure, Type.FIRE, Ability.FLAME_BODY, 60, 55, 90, 145, 90, 80, 90, 70, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_chandelure)).setPointValue(7);
            case AXEW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_axew), R.drawable.pokemon_axew, Type.DRAGON, Ability.MOLD_BREAKER, 46, 87, 60, 30, 40, 57, 60, 54, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_axew)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case FRAXURE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fraxure), R.drawable.pokemon_fraxure, Type.DRAGON, Ability.MOLD_BREAKER, 66, 117, 70, 40, 50, 67, 74, 60, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_fraxure)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case HAXORUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_haxorus), R.drawable.pokemon_haxorus, Type.DRAGON, Ability.MOLD_BREAKER, 76, 147, 90, 60, 70, 97, 113, 81, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_haxorus)).setPointValue(7);
            case CUBCHOO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cubchoo), R.drawable.pokemon_cubchoo, Type.ICE, Ability.SNOW_CLOAK, 55, 70, 40, 60, 40, 40, 40, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cubchoo)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case BEARTIC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_beartic), R.drawable.pokemon_beartic, Type.ICE, Ability.SNOW_CLOAK, 95, 130, 80, 70, 80, 50, 60, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_beartic)).setPointValue(6);
            case CRYOGONAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cryogonal), R.drawable.pokemon_cryogonal, Type.ICE, Ability.FROZEN_BODY, 80, 50, 50, 95, 135, 105, 124, 86, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cryogonal)).setPointValue(6);
            case SHELMET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shelmet), R.drawable.pokemon_shelmet, Type.GRASS, null, 50, 40, 85, 40, 65, 25, 25, 25, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_shelmet)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case ACCELGOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_accelgor), R.drawable.pokemon_accelgor, Type.GRASS, null, 80, 70, 40, 100, 60, 145, 60, 100, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_accelgor)).setPointValue(7);
            case STUNFISK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_stunfisk), R.drawable.pokemon_stunfisk, Type.ELECTRIC, Ability.STATIC, 109, 66, 84, 81, 99, 32, 33, 31, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_stunfisk)).setPointValue(3);
            case GALARIAN_STUNFISK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_galarian_stunfisk), R.drawable.pokemon_galarian_stunfisk, Type.STEEL, Ability.CAMOUFLAGE, 109, 81, 99, 66, 84, 32, 34, 30, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_galarian_stunfisk)).setPointValue(3);
            case MIENFOO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mienfoo), R.drawable.pokemon_mienfoo, Type.FIGHTING, null, 45, 85, 50, 55, 50, 65, 69, 61, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_mienfoo)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case MIENSHAO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mienshao), R.drawable.pokemon_mienshao, Type.FIGHTING, null, 65, 125, 60, 95, 60, 105, 116, 94, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_mienshao)).setPointValue(6);
            case DRUDDIGON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_druddigon), R.drawable.pokemon_druddigon, Type.DRAGON, Ability.ROUGH_SKIN, 77, 120, 90, 60, 90, 48, 56, 40, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_druddigon)).setPointValue(5);
            case GOLETT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_golett), R.drawable.pokemon_golett, Type.GROUND, Ability.KLUTZ, 59, 74, 50, 35, 50, 35, 40, 30, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_golett)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GOLURK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_golurk), R.drawable.pokemon_golurk, Type.GROUND, Ability.KLUTZ, 89, 124, 80, 55, 80, 55, 66, 44, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_golurk)).setPointValue(5);
            case PAWNIARD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pawniard), R.drawable.pokemon_pawniard, Type.DARK, Ability.GUILLOTINE, 45, 85, 70, 40, 40, 60, 61, 59, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_pawniard)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case BISHARP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bisharp), R.drawable.pokemon_bisharp, Type.DARK, Ability.GUILLOTINE, 65, 125, 100, 60, 70, 70, 80, 60, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bisharp)).addTag(CardTags.CAN_EVOLVE).setPointValue(6);
            case BOUFFALANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bouffalant), R.drawable.pokemon_bouffalant, Type.NORMAL, null, 95, 110, 95, 40, 95, 55, 64, 46, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_bouffalant)).setPointValue(5);
            case RUFFLET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rufflet), R.drawable.pokemon_rufflet, Type.NORMAL, null, 70, 83, 50, 37, 50, 60, 61, 59, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_rufflet)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case BRAVIARY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_braviary), R.drawable.pokemon_braviary, Type.NORMAL, null, 100, 123, 75, 57, 75, 80, 89, 71, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_braviary)).setPointValue(6);
            case HISUIAN_BRAVIARY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_braviary), R.drawable.pokemon_hisuian_braviary, Type.PSYCHIC, null, 110, 83, 70, 112, 70, 65, 73, 57, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_braviary)).setPointValue(5);
            case VULLABY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vullaby), R.drawable.pokemon_vullaby, Type.DARK, null, 70, 55, 75, 45, 65, 60, 60, 60, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_vullaby)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MANDIBUZZ -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mandibuzz), R.drawable.pokemon_mandibuzz, Type.DARK, null, 110, 65, 105, 55, 95, 80, 89, 71, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_mandibuzz)).setPointValue(4);
            case HEATMOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_heatmor), R.drawable.pokemon_heatmor, Type.FIRE, Ability.GLUTTONY, 85, 97, 66, 105, 66, 65, 74, 56, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_heatmor)).setPointValue(5);
            case DURANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_durant), R.drawable.pokemon_durant, Type.STEEL, null, 58, 109, 112, 48, 48, 109, 58, 48, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_durant)).setPointValue(6);
            case DEINO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_deino), R.drawable.pokemon_deino, Type.DARK, null, 52, 65, 50, 45, 50, 38, 40, 36, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_deino)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ZWEILOUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zweilous), R.drawable.pokemon_zweilous, Type.DARK, null, 72, 85, 70, 65, 70, 58, 65, 51, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_zweilous)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case HYDREIGON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hydreigon), R.drawable.pokemon_hydreigon, Type.DARK, null, 92, 105, 90, 125, 90, 98, 116, 80, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_hydreigon)).setPointValue(6);
            case LARVESTA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_larvesta), R.drawable.pokemon_larvesta, Type.FIRE, Ability.INCINERATE, 55, 85, 55, 50, 55, 60, 66, 54, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_larvesta)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case VOLCARONA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_volcarona), R.drawable.pokemon_volcarona, Type.FIRE, Ability.INCINERATE, 85, 60, 65, 135, 105, 100, 112, 88, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_volcarona)).setPointValue(7);
            case COBALION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cobalion), R.drawable.pokemon_cobalion, Type.STEEL, null, 91, 90, 129, 90, 72, 108, 129, 87, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cobalion)).setPointValue(7);
            case TERRAKION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_terrakion), R.drawable.pokemon_terrakion, Type.GROUND, null, 91, 129, 90, 72, 90, 108, 129, 87, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_terrakion)).setPointValue(7);
            case VIRIZION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_virizion), R.drawable.pokemon_virizion, Type.GRASS, null, 91, 90, 72, 90, 129, 108, 128, 88, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_virizion)).setPointValue(7);
            case TORNADUS_INCARNATE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tornadus_incarnate_forme), R.drawable.pokemon_tornadus_incarnate, Type.NORMAL, Ability.BLEAKWIND_STORM, 79, 115, 70, 125, 80, 111, 126, 96, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_tornadus_incarnate_forme)).setPointValue(7);
            case TORNADUS_THERIAN_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tornadus_therian_forme), R.drawable.pokemon_tornadus_therian, Type.NORMAL, Ability.BLEAKWIND_STORM, 79, 100, 80, 110, 90, 121, 138, 104, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_tornadus_therian_forme)).setPointValue(7);
            case THUNDURUS_INCARNATE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_thunderus_incarnate_forme), R.drawable.pokemon_thundurus_incarnate, Type.ELECTRIC, Ability.WILDBOLT_STORM, 79, 115, 70, 125, 80, 111, 126, 96, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_thunderus_incarnate_forme)).setPointValue(7);
            case THUNDURUS_THERIAN_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_thunderus_therian_forme), R.drawable.pokemon_thundurus_therian, Type.ELECTRIC, Ability.WILDBOLT_STORM, 79, 105, 70, 145, 80, 101, 115, 87, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_thunderus_therian_forme)).setPointValue(7);
            case RESHIRAM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_reshiram), R.drawable.pokemon_reshiram, Type.FIRE, null, 100, 120, 100, 150, 120, 90, 110, 70, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_reshiram)).setPointValue(8);
            case ZEKROM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zekrom), R.drawable.pokemon_zekrom, Type.ELECTRIC, null, 100, 150, 120, 120, 100, 90, 110, 70, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_zekrom)).setPointValue(8);
            case LANDORUS_INCARNATE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_landorus_incarnate_forme), R.drawable.pokemon_landorus_incarnate, Type.GROUND, Ability.SANDSEAR_STORM, 89, 125, 90, 115, 80, 101, 115, 87, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_landorus_incarnate_forme)).setPointValue(7);
            case LANDORUS_THERIAN_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_landorus_therian_forme), R.drawable.pokemon_landorus_therian, Type.GROUND, Ability.SANDSEAR_STORM, 89, 145, 90, 105, 80, 91, 104, 78, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_landorus_therian_forme)).setPointValue(7);
            case KYUREM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kyurem), R.drawable.pokemon_kyurem, Type.ICE, null, 125, 130, 90, 130, 90, 95, 115, 75, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_kyurem)).setPointValue(7);
            case BLACK_KYUREM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_black_kyurem), R.drawable.pokemon_black_kyurem, Type.ICE, null, 125, 170, 100, 120, 90, 95, 115, 75, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_black_kyurem)).setPointValue(9);
            case WHITE_KYUREM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_white_kyurem), R.drawable.pokemon_white_kyurem, Type.ICE, null, 125, 120, 90, 170, 100, 95, 115, 75, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_white_kyurem)).setPointValue(9);
            case KELDEO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_keldeo), R.drawable.pokemon_keldeo, Type.WATER, null, 91, 72, 90, 129, 90, 108, 121, 95, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_keldeo)).setPointValue(7);
            case MELOETTA_ARIA_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meloetta), R.drawable.pokemon_meloetta, Type.PSYCHIC, Ability.RELIC_SONG, 100, 77, 77, 128, 128, 90, 87, 93, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_meloetta)).setPointValue(6);
            case MELOETTA_PIROUETTE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meloetta), R.drawable.pokemon_meloetta_aria_forme, Type.FIGHTING, Ability.RELIC_SONG, 100, 128, 90, 77, 77, 128, 124, 132, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_meloetta)).setPointValue(7);
            case GENESECT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_genesect), R.drawable.pokemon_genesect, Type.STEEL, null, 71, 120, 95, 120, 95, 99, 114, 84, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_genesect)).setPointValue(6);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard6(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case CHESPIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chespin), R.drawable.pokemon_chespin, Type.GRASS, Ability.OVERGROW, 56, 61, 65, 48, 45, 38, 38, 38, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_chespin)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case QUILLADIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_quilladin), R.drawable.pokemon_quilladin, Type.GRASS, Ability.OVERGROW, 61, 78, 95, 56, 58, 57, 62, 52, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_quilladin)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case CHESNAUGHT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chesnaught), R.drawable.pokemon_chesnaught, Type.GRASS, Ability.OVERGROW, 88, 107, 122, 74, 75, 64, 74, 54, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_chesnaught)).setPointValue(5);
            case FENNEKIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fennekin), R.drawable.pokemon_fennekin, Type.FIRE, Ability.BLAZE, 40, 45, 40, 62, 60, 60, 60, 60, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_fennekin)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case BRAIXEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_braixen), R.drawable.pokemon_braixen, Type.FIRE, Ability.BLAZE, 59, 59, 58, 90, 70, 73, 76, 70, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_braixen)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case DELPHOX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_delphox), R.drawable.pokemon_delphox, Type.FIRE, Ability.BLAZE, 75, 69, 72, 114, 100, 104, 116, 92, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_delphox)).setPointValue(6);
            case FROAKIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_froakie), R.drawable.pokemon_froakie, Type.WATER, Ability.TORRENT, 41, 56, 40, 62, 44, 71, 69, 73, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_froakie)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case FROGADIER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_frogadier), R.drawable.pokemon_frogadier, Type.WATER, Ability.TORRENT, 54, 63, 52, 83, 56, 97, 99, 95, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_frogadier)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case GRENINJA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_greninja), R.drawable.pokemon_greninja, Type.WATER, Ability.TORRENT, 72, 95, 67, 103, 71, 122, 136, 108, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_greninja)).setPointValue(7);
            case BATTLEBOND_GRENINJA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ash_greninja), R.drawable.pokemon_battlebond_greninja, Type.WATER, Ability.TORRENT, 72, 145, 67, 153, 71, 132, 147, 117, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_greninja)).setPointValue(8);
            case BUNNELBY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bunnelby), R.drawable.pokemon_bunnelby, Type.GROUND, null, 38, 36, 38, 32, 36, 57, 53, 61, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_bunnelby)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DIGGERSBY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_diggersby), R.drawable.pokemon_diggersby, Type.GROUND, null, 85, 56, 77, 50, 77, 78, 87, 69, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_diggersby)).setPointValue(4);
            case FLETCHLING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fletchling), R.drawable.pokemon_fletchling, Type.NORMAL, Ability.GALE_WINGS, 45, 50, 43, 40, 38, 62, 47, 77, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_fletchling)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case FLETCHINDER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fletchinder), R.drawable.pokemon_fletchinder, Type.FIRE, Ability.GALE_WINGS, 62, 73, 55, 56, 52, 84, 88, 80, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_fletchinder)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case TALONFLAME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_talonflame), R.drawable.pokemon_talonflame, Type.FIRE, Ability.GALE_WINGS, 78, 81, 71, 74, 69, 126, 136, 116, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_talonflame)).setPointValue(7);
            case SCATTERBUG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scatterbug), R.drawable.pokemon_scatterbug, Type.GRASS, null, 38, 35, 40, 27, 25, 35, 29, 41, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_scatterbug)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SPEWPA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spewpa), R.drawable.pokemon_spewpa, Type.GRASS, null, 45, 22, 60, 27, 30, 29, 29, 29, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_spewpa)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case VIVILLON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vivillon), R.drawable.pokemon_vivillon, Type.GRASS, Ability.POWDER, 80, 52, 50, 90, 50, 89, 94, 84, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_vivillon)).setPointValue(4);
            case LITLEO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_litleo), R.drawable.pokemon_litleo, Type.FIRE, Ability.UNNERVE, 62, 50, 58, 73, 54, 72, 75, 69, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_litleo)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PYROAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pyroar), R.drawable.pokemon_pyroar, Type.FIRE, Ability.INCINERATE, 86, 68, 72, 109, 66, 106, 122, 90, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_pyroar)).setPointValue(6);
            case FLABEBE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flabebe), R.drawable.pokemon_flabebe, Type.FAIRY, Ability.FLOWER_VEIL, 44, 38, 39, 61, 79, 42, 38, 44, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_flabebe)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case FLOETTE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_floette), R.drawable.pokemon_floette, Type.FAIRY, Ability.FLOWER_VEIL, 54, 45, 47, 75, 98, 52, 45, 65, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_floette)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case FLORGES -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_florges), R.drawable.pokemon_florges, Type.FAIRY, Ability.FLOWER_VEIL, 78, 65, 68, 112, 154, 75, 65, 74, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_florges)).setPointValue(5);
            case SKIDDO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skiddo), R.drawable.pokemon_skiddo, Type.GRASS, Ability.GRASS_PELT, 66, 65, 48, 62, 57, 52, 57, 47, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_skiddo)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GOGOAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gogoat), R.drawable.pokemon_gogoat, Type.GRASS, Ability.GRASS_PELT, 123, 100, 62, 97, 81, 68, 79, 57, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_gogoat)).setPointValue(5);
            case PANCHAM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pancham), R.drawable.pokemon_pancham, Type.FIGHTING, Ability.MOLD_BREAKER, 67, 82, 62, 46, 48, 43, 42, 44, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_pancham)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PANGORO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pangoro), R.drawable.pokemon_pangoro, Type.FIGHTING, Ability.MOLD_BREAKER, 95, 124, 78, 69, 71, 58, 68, 48, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_pangoro)).setPointValue(5);
            case FURFROU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_furfrou), R.drawable.pokemon_furfrou, Type.NORMAL, Ability.FUR_COAT, 75, 80, 60, 65, 90, 102, 111, 93, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_furfrou)).setPointValue(5);
            case ESPURR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_espurr), R.drawable.pokemon_espurr, Type.PSYCHIC, Ability.PSYCHIC_SURGE, 62, 48, 54, 63, 60, 68, 60, 76, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_espurr)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case MEOWSTIC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meowstic), R.drawable.pokemon_meowstic, Type.PSYCHIC, Ability.PSYCHIC_SURGE, 74, 48, 76, 83, 81, 104, 103, 105, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_meowstic)).setPointValue(5);
            case HONEDGE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_honedge), R.drawable.pokemon_honedge, Type.STEEL, null, 45, 80, 100, 35, 37, 28, 22, 34, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_honedge)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DOUBLADE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_doublade), R.drawable.pokemon_doublade, Type.STEEL, null, 59, 110, 150, 45, 49, 35, 32, 38, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_doublade)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case AEGISLASH_SHIELD_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aegislash), R.drawable.pokemon_aegislash_shield_forme, Type.STEEL, Ability.STANCE_CHANGE, 60, 50, 140, 50, 140, 60, 68, 52, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_aegislash)).setPointValue(3);
            case AEGISLASH_BLADE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aegislash), R.drawable.pokemon_aegislash_blade_forme, Type.STEEL, Ability.STANCE_CHANGE, 60, 140, 50, 140, 50, 60, 68, 52, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_aegislash)).setPointValue(6);
            case SPRITZEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spritzee), R.drawable.pokemon_spritzee, Type.FAIRY, Ability.AROMA_VEIL, 78, 52, 60, 63, 65, 23, 10, 36, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_spritzee)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case AROMATISSE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aromatisse), R.drawable.pokemon_aromatisse, Type.FAIRY, Ability.AROMA_VEIL, 101, 72, 72, 99, 89, 29, 30, 28, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_aromatisse)).setPointValue(4);
            case SWIRLIX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_swirlix), R.drawable.pokemon_swirlix, Type.FAIRY, Ability.SWEET_VEIL, 62, 48, 66, 59, 57, 49, 43, 55, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_swirlix)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SLURPUFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slurpuff), R.drawable.pokemon_slurpuff, Type.FAIRY, Ability.SWEET_VEIL, 82, 80, 86, 85, 75, 72, 67, 77, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_slurpuff)).setPointValue(4);
            case INKAY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_inkay), R.drawable.pokemon_inkay, Type.PSYCHIC, Ability.CONTRARY, 53, 54, 53, 37, 46, 45, 40, 50, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_inkay)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case MALAMAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_malamar), R.drawable.pokemon_malamar, Type.PSYCHIC, Ability.CONTRARY, 86, 92, 88, 68, 75, 73, 82, 64, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_malamar)).setPointValue(4);
            case BINACLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_binacle), R.drawable.pokemon_binacle, Type.WATER, null, 42, 52, 67, 39, 56, 50, 55, 45, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_binacle)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case BARBARACLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_barbaracle), R.drawable.pokemon_barbaracle, Type.WATER, null, 72, 105, 115, 54, 86, 68, 79, 57, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_barbaracle)).setPointValue(5);
            case SKRELP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skrelp), R.drawable.pokemon_skrelp, Type.WATER, Ability.POISON_POINT, 50, 60, 60, 60, 60, 30, 29, 31, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_skrelp)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DRAGALGE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dragalge), R.drawable.pokemon_dragalge, Type.DRAGON, Ability.POISON_POINT, 65, 75, 90, 97, 123, 44, 51, 37, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_dragalge)).setPointValue(4);
            case CLAUNCHER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_clauncher), R.drawable.pokemon_clauncher, Type.WATER, Ability.MEGA_LAUNCHER, 50, 53, 62, 58, 63, 44, 44, 44, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_clauncher)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CLAWITZER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_clawitzer), R.drawable.pokemon_clawitzer, Type.WATER, Ability.MEGA_LAUNCHER, 71, 73, 88, 120, 89, 59, 65, 53, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_clawitzer)).setPointValue(5);
            case HELIOPTILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_helioptile), R.drawable.pokemon_helioptile, Type.ELECTRIC, Ability.SOLAR_POWER, 44, 38, 33, 61, 43, 70, 67, 73, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_helioptile)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case HELIOLISK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_heliolisk), R.drawable.pokemon_heliolisk, Type.ELECTRIC, Ability.SOLAR_POWER, 62, 55, 52, 109, 94, 109, 117, 101, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_heliolisk)).setPointValue(6);
            case TYRUNT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tyrunt), R.drawable.pokemon_tyrunt, Type.DRAGON, null, 58, 89, 77, 45, 45, 48, 52, 44, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_tyrunt)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TYRANTRUM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tyrantrum), R.drawable.pokemon_tyrantrum, Type.DRAGON, null, 82, 121, 119, 69, 59, 71, 85, 57, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_tyrantrum)).setPointValue(6);
            case AMAURA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_amaura), R.drawable.pokemon_amaura, Type.ICE, Ability.SNOW_WARNING, 77, 59, 50, 67, 63, 46, 50, 42, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_amaura)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case AURORUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_aurorus), R.drawable.pokemon_aurorus, Type.ICE, Ability.SNOW_WARNING, 123, 77, 72, 99, 92, 58, 69, 47, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_aurorus)).setPointValue(4);
            case SYLVEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sylveon), R.drawable.pokemon_sylveon, Type.FAIRY, Ability.FAIRY_AURA, 95, 65, 65, 110, 130, 60, 65, 55, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_sylveon)).setPointValue(5);
            case HAWLUCHA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hawlucha), R.drawable.pokemon_hawlucha, Type.FIGHTING, null, 78, 92, 75, 74, 63, 118, 127, 109, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_hawlucha)).setPointValue(6);
            case DEDENNE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dedenne), R.drawable.pokemon_dedenne, Type.ELECTRIC, Ability.CHEEK_POUCH, 67, 58, 57, 81, 67, 101, 82, 120, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_dedenne)).setPointValue(5);
            case CARBINK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_carbink), R.drawable.pokemon_carbink, Type.FAIRY, Ability.STEALTH_ROCK, 50, 50, 150, 50, 150, 50, 48, 52, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_carbink)).setPointValue(3);
            case GOOMY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_goomy), R.drawable.pokemon_goomy, Type.DRAGON, Ability.GOOEY, 45, 50, 35, 55, 75, 40, 34, 46, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_goomy)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SLIGGOO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sliggoo), R.drawable.pokemon_sliggoo, Type.DRAGON, Ability.GOOEY, 68, 75, 53, 83, 113, 60, 63, 57, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_sliggoo)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case HISUIAN_SLIGGOO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_sliggoo), R.drawable.pokemon_hisuian_sliggoo, Type.DRAGON, Ability.GOOEY, 58, 75, 83, 83, 113, 40, 46, 34, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_sliggoo)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GOODRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_goodra), R.drawable.pokemon_goodra, Type.DRAGON, Ability.GOOEY, 90, 100, 70, 110, 150, 80, 94, 66, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_goodra)).setPointValue(6);
            case HISUIAN_GOODRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_goodra), R.drawable.pokemon_hisuian_goodra, Type.DRAGON, Ability.GOOEY, 80, 100, 100, 110, 150, 60, 72, 48, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_goodra)).setPointValue(5);
            case KLEFKI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_klefki), R.drawable.pokemon_klefki, Type.STEEL, Ability.FAIRY_LOCK, 57, 80, 91, 80, 87, 75, 65, 85, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_klefki)).setPointValue(4);
            case PHANTUMP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_phantump), R.drawable.pokemon_phantump, Type.DARK, Ability.DARK_AURA, 43, 70, 48, 50, 60, 38, 37, 39, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_phantump)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case TREVENANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_trevenant), R.drawable.pokemon_trevenant, Type.DARK, Ability.DARK_AURA, 85, 110, 76, 65, 82, 56, 64, 48, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_trevenant)).setPointValue(5);
            case PUMPKABOO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pumpkaboo), R.drawable.pokemon_pumpkaboo, Type.GRASS, Ability.GRASS_AURA, 49, 66, 70, 44, 55, 51, 48, 54, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_pumpkaboo_average_size)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GOURGEIST -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gourgeist), R.drawable.pokemon_gourgeist, Type.GRASS, Ability.GRASS_AURA, 65, 90, 122, 58, 75, 84, 87, 81, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_gourgeist_average_size)).setPointValue(4);
            case BERGMITE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bergmite), R.drawable.pokemon_bergmite, Type.ICE, Ability.ICE_BODY, 55, 69, 85, 32, 35, 28, 32, 24, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bergmite)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case AVALUGG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_avalugg), R.drawable.pokemon_avalugg, Type.ICE, Ability.ICE_BODY, 95, 117, 184, 44, 46, 28, 34, 22, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_avalugg)).setPointValue(5);
            case HISUIAN_AVALUGG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_avalugg), R.drawable.pokemon_hisuian_avalugg, Type.ICE, Ability.ICE_BODY, 95, 127, 184, 34, 36, 38, 46, 30, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_avalugg)).setPointValue(5);
            case NOIBAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_noibat), R.drawable.pokemon_noibat, Type.DRAGON, Ability.BOOMBURST, 40, 30, 35, 45, 40, 55, 54, 56, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_noibat)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case NOIVERN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_noivern), R.drawable.pokemon_noivern, Type.DRAGON, Ability.BOOMBURST, 85, 70, 80, 97, 80, 123, 142, 104, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_noivern)).setPointValue(7);
            case XERNEAS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_xerneas), R.drawable.pokemon_xerneas, Type.FAIRY, Ability.FAIRY_AURA, 126, 131, 95, 131, 98, 99, 118, 80, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_xerneas)).setPointValue(7);
            case YVELTAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_yveltal), R.drawable.pokemon_yveltal, Type.DARK, Ability.DARK_AURA, 126, 131, 95, 131, 98, 99, 118, 80, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_yveltal)).setPointValue(7);
            case ZYGARDE_CELL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zygarde_cell), R.drawable.pokemon_zygarde_cell, Type.DRAGON, Ability.AURA_BREAK, 13, 24, 15, 15, 20, 20, 25, 15, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_zygarde_cell)).setPointValue(1);
            case ZYGARDE_CORE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zygarde_core), R.drawable.pokemon_zygarde_core, Type.DRAGON, Ability.AURA_BREAK, 26, 49, 35, 30, 45, 45, 49, 35, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_zygarde_core)).setPointValue(1);
            case ZYGARDE_10_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zygarde_10_forme), R.drawable.pokemon_zygarde_10, Type.DRAGON, null, 54, 100, 71, 61, 85, 115, 127, 103, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_zygarde_10_forme)).setPointValue(6);
            case ZYGARDE_50_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zygarde_50_forme), R.drawable.pokemon_zygarde_50, Type.DRAGON, Ability.AURA_BREAK, 108, 100, 121, 81, 95, 95, 114, 76, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_zygarde_50_forme)).setPointValue(6);
            case ZYGARDE_COMPLETE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zygarde_complete_forme), R.drawable.pokemon_zygarde_complete, Type.DRAGON, null, 216, 100, 121, 91, 95, 85, 104, 66, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_zygarde_complete_forme)).setPointValue(5);
            case DIANCIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_diancie), R.drawable.pokemon_diancie, Type.FAIRY, null, 50, 100, 150, 100, 150, 50, 50, 50, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_diancie), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_diancie), R.drawable.pokemon_mega_diancie, Type.FAIRY, Ability.MEGA_STARFALL, 50, 160, 110, 160, 110, 110, 120, 100, Type.STEEL, "")).setPointValue(5);
            case HOOPA_CONFINED -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hoopa_confined), R.drawable.pokemon_hoopa_confined, Type.PSYCHIC, Ability.HYPERSPACE_HOLE, 80, 110, 60, 150, 130, 70, 70, 70, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_hoopa_confined)).setPointValue(7);
            case HOOPA_UNBOUND -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hoopa_unbound), R.drawable.pokemon_hoopa_unbound, Type.DARK, Ability.HYPERSPACE_HOLE, 80, 160, 60, 170, 130, 80, 98, 62, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_hoopa_unbound)).setPointValue(9);
            case VOLCANION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_volcanion), R.drawable.pokemon_volcanion, Type.FIRE, Ability.STEAM_ERUPTION, 80, 110, 120, 130, 90, 70, 83, 57, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_volcanion)).setPointValue(6);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard7(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case ROWLET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rowlet), R.drawable.pokemon_rowlet, Type.GRASS, Ability.OVERGROW, 68, 55, 55, 50, 50, 42, 31, 53, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_rowlet)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DARTRIX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dartrix), R.drawable.pokemon_dartrix, Type.GRASS, Ability.OVERGROW, 78, 75, 75, 70, 70, 52, 55, 49, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_dartrix)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DECIDUEYE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_decidueye), R.drawable.pokemon_decidueye, Type.GRASS, Ability.OVERGROW, 78, 107, 75, 100, 100, 70, 78, 62, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_decidueye)).setPointValue(5);
            case HISUIAN_DECIDUEYE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hisuian_decidueye), R.drawable.pokemon_hisuian_decidueye, Type.FIGHTING, Ability.OVERGROW, 88, 112, 80, 95, 95, 60, 66, 54, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_hisuian_decidueye)).setPointValue(5);
            case LITTEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_litten), R.drawable.pokemon_litten, Type.FIRE, Ability.BLAZE, 45, 65, 40, 60, 40, 70, 64, 76, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_litten)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TORRACAT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_torracat), R.drawable.pokemon_torracat, Type.FIRE, Ability.BLAZE, 65, 85, 50, 80, 50, 90, 97, 83, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_torracat)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case INCINEROAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_incineroar), R.drawable.pokemon_incineroar, Type.FIRE, Ability.BLAZE, 95, 115, 90, 80, 90, 60, 69, 51, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_incineroar)).setPointValue(5);
            case POPPLIO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_popplio), R.drawable.pokemon_popplio, Type.WATER, Ability.TORRENT, 50, 54, 54, 66, 56, 40, 39, 41, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_popplio)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case BRIONNE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_brionne), R.drawable.pokemon_brionne, Type.WATER, Ability.TORRENT, 60, 69, 69, 91, 81, 50, 53, 47, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_brionne)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case PRIMARINA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_primarina), R.drawable.pokemon_primarina, Type.WATER, Ability.TORRENT, 80, 74, 74, 126, 116, 60, 67, 53, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_primarina)).setPointValue(6);
            case PIKIPEK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pikipek), R.drawable.pokemon_pikipek, Type.NORMAL, Ability.BIG_PECKS, 35, 75, 30, 30, 30, 65, 45, 85, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_pikipek)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case TRUMBEAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_trumbeak), R.drawable.pokemon_trumbeak, Type.NORMAL, Ability.BIG_PECKS, 55, 85, 50, 40, 50, 75, 78, 72, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_trumbeak)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TOUCANNON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_toucannon), R.drawable.pokemon_toucannon, Type.NORMAL, Ability.FLAME_BODY, 80, 120, 75, 75, 75, 60, 65, 55, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_toucannon)).setPointValue(5);
            case YUNGOOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_yungoos), R.drawable.pokemon_yungoos, Type.NORMAL, null, 48, 70, 30, 30, 30, 45, 43, 47, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_yungoos)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GUMSHOOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gumshoos), R.drawable.pokemon_gumshoos, Type.NORMAL, null, 88, 110, 60, 55, 60, 45, 47, 43, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_gumshoos)).setPointValue(4);
            case GRUBBIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grubbin), R.drawable.pokemon_grubbin, Type.ELECTRIC, null, 47, 62, 45, 55, 45, 46, 42, 50, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_grubbin)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CHARJABUG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_charjabug), R.drawable.pokemon_charjabug, Type.ELECTRIC, Ability.CHARGE, 57, 82, 95, 55, 75, 36, 37, 35, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_charjabug)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case VIKAVOLT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_vikavolt), R.drawable.pokemon_vikavolt, Type.ELECTRIC, Ability.LEVITATE, 77, 70, 90, 145, 75, 43, 48, 38, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_vikavolt)).setPointValue(6);
            case CRABRAWLER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crabrawler), R.drawable.pokemon_crabrawler, Type.FIGHTING, null, 47, 82, 57, 42, 47, 63, 61, 65, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_crabrawler)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case CRABOMINABLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crabominable), R.drawable.pokemon_crabominable, Type.ICE, null, 97, 132, 77, 62, 67, 43, 51, 35, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_crabominable)).setPointValue(5);
            case ORICORIO_BAILE_STYLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oricorio), R.drawable.pokemon_oricorio_baile, Type.FIRE, Ability.DANCER, 75, 70, 70, 98, 70, 93, 82, 104, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_oricorio)).setPointValue(5);
            case ORICORIO_POM_POM_STYLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oricorio), R.drawable.pokemon_oricorio_pom_pom, Type.ELECTRIC, Ability.DANCER, 75, 70, 70, 98, 70, 93, 82, 104, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_oricorio)).setPointValue(5);
            case ORICORIO_PAU_STYLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oricorio), R.drawable.pokemon_oricorio_pau, Type.PSYCHIC, Ability.DANCER, 75, 70, 70, 98, 70, 93, 82, 104, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_oricorio)).setPointValue(5);
            case ORICORIO_SENSU_STYLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oricorio), R.drawable.pokemon_oricorio_sensu, Type.DARK, Ability.DANCER, 75, 70, 70, 98, 70, 93, 82, 104, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_oricorio)).setPointValue(5);
            case CUTIEFLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cutiefly), R.drawable.pokemon_cutiefly, Type.FAIRY, null, 40, 45, 40, 55, 40, 84, 40, 80, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_cutiefly)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case RIBOMBEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ribombee), R.drawable.pokemon_ribombee, Type.FAIRY, null, 60, 55, 60, 95, 70, 124, 60, 95, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_ribombee)).setPointValue(6);
            case ROCKRUFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rockruff), R.drawable.pokemon_rockruff, Type.GROUND, Ability.STEALTH_ROCK, 45, 65, 40, 30, 40, 60, 60, 60, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_rockruff)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case LYCANROC_MIDDAY_FORM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lycanroc_midday), R.drawable.pokemon_lycanroc_midday_form, Type.GROUND, Ability.STEALTH_ROCK, 75, 115, 65, 55, 65, 112, 121, 103, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_lycanroc_midday_form)).setPointValue(6);
            case LYCANROC_MIDNIGHT_FORM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lycanroc_midnight), R.drawable.pokemon_lycanroc_midnight_form, Type.GROUND, Ability.STEALTH_ROCK, 85, 115, 75, 55, 75, 82, 89, 75, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_lycanroc_midnight_form)).setPointValue(5);
            case LYCANROC_DUSK_FORM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lycanroc_dusk), R.drawable.pokemon_lycanroc_dusk_form, Type.GROUND, Ability.STEALTH_ROCK, 75, 117, 65, 55, 65, 110, 119, 101, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_lycanroc_dusk_form)).setPointValue(6);
            case WISHIWASHI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wishiwashi), R.drawable.pokemon_wishiwashi, Type.WATER, Ability.SCHOOLING, 45, 20, 20, 25, 25, 40, 20, 70, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wishiwashi_solo_form)).addTag(CardTags.FISH).setPointValue(1);
            case WISHIWASHI_SCHOOLING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wishiwashi), R.drawable.pokemon_wishiwashi_schooling, Type.WATER, Ability.SCHOOLING, 45, 140, 130, 140, 135, 30, 70, 25, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wishiwashi_school_form)).addTag(CardTags.FISH).setPointValue(7);
            case MAREANIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mareanie), R.drawable.pokemon_mareanie, Type.WATER, Ability.MERCILESS, 50, 53, 62, 43, 52, 45, 44, 46, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_mareanie)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case TOXAPEX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_toxapex), R.drawable.pokemon_toxapex, Type.WATER, Ability.MERCILESS, 50, 63, 152, 53, 142, 35, 36, 34, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_toxapex)).setPointValue(3);
            case MUDBRAY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mudbray), R.drawable.pokemon_mudbray, Type.GROUND, Ability.STAMINA, 70, 100, 70, 45, 55, 45, 52, 38, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_mudbray)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case MUDSDALE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mudsdale), R.drawable.pokemon_mudsdale, Type.GROUND, Ability.STAMINA, 100, 125, 100, 55, 85, 35, 43, 27, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_mudsdale)).setPointValue(5);
            case DEWPIDER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dewpider), R.drawable.pokemon_dewpider, Type.WATER, Ability.WATER_BUBBLE, 38, 40, 52, 40, 72, 27, 24, 30, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_dewpider)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case ARAQUANID -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_araquanid), R.drawable.pokemon_araquanid, Type.WATER, Ability.WATER_BUBBLE, 68, 70, 92, 50, 132, 42, 48, 36, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_araquanid)).setPointValue(3);
            case FOMANTIS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fomantis), R.drawable.pokemon_fomantis, Type.GRASS, Ability.SOLAR_BLADE, 40, 55, 35, 50, 35, 35, 26, 44, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_fomantis)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case LURANTIS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lurantis), R.drawable.pokemon_lurantis, Type.GRASS, Ability.SOLAR_BLADE, 70, 105, 90, 80, 90, 45, 48, 42, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_lurantis)).setPointValue(4);
            case MORELULL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_morelull), R.drawable.pokemon_morelull, Type.FAIRY, Ability.RAIN_DISH, 40, 35, 55, 65, 75, 15, 15, 20, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_morelull)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SHIINOTIC -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shiinotic), R.drawable.pokemon_shiinotic, Type.FAIRY, Ability.RAIN_DISH, 60, 45, 80, 90, 100, 30, 31, 29, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_shiinotic)).setPointValue(3);
            case SALANDIT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_salandit), R.drawable.pokemon_salandit, Type.FIRE, Ability.POISON_POINT, 48, 44, 40, 71, 40, 77, 72, 82, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_salandit)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SALAZZLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_salazzle), R.drawable.pokemon_salazzle, Type.FIRE, Ability.CORROSION, 68, 64, 60, 111, 60, 117, 126, 108, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_salazzle)).setPointValue(6);
            case STUFFUL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_stufful), R.drawable.pokemon_stufful, Type.FIGHTING, Ability.FLUFFY, 70, 75, 50, 45, 50, 50, 49, 51, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_stufful)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case BEWEAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bewear), R.drawable.pokemon_bewear, Type.FIGHTING, Ability.FLUFFY, 120, 125, 80, 55, 60, 60, 70, 50, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_bewear)).setPointValue(5);
            case BOUNSWEET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bounsweet), R.drawable.pokemon_bounsweet, Type.GRASS, Ability.LEAF_GUARD, 42, 30, 38, 30, 38, 32, 28, 36, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bounsweet)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case STEENEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_steenee), R.drawable.pokemon_steenee, Type.GRASS, Ability.LEAF_GUARD, 52, 40, 48, 40, 48, 62, 61, 63, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_steenee)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case TSAREENA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tsareena), R.drawable.pokemon_tsareena, Type.GRASS, Ability.LEAF_GUARD, 72, 120, 98, 50, 98, 72, 77, 67, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_tsareena)).setPointValue(6);
            case COMFEY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_comfey), R.drawable.pokemon_comfey, Type.FAIRY, Ability.TRIAGE, 51, 52, 90, 82, 110, 100, 50, 50, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_comfey)).setPointValue(4);
            case ORANGURU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oranguru), R.drawable.pokemon_oranguru, Type.PSYCHIC, Ability.COACHING, 90, 60, 80, 90, 110, 60, 69, 51, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_oranguru)).setPointValue(4);
            case PASSIMIAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_passimian), R.drawable.pokemon_passimian, Type.FIGHTING, Ability.FLING, 100, 120, 90, 40, 60, 80, 92, 68, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_passimian)).setPointValue(5);
            case WIMPOD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wimpod), R.drawable.pokemon_wimpod, Type.WATER, Ability.EMERGENCY_EXIT, 25, 35, 40, 20, 30, 80, 82, 78, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wimpod)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GOLISOPOD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_golisopod), R.drawable.pokemon_golisopod, Type.WATER, Ability.EMERGENCY_EXIT, 75, 125, 140, 60, 90, 40, 47, 33, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_golisopod)).setPointValue(5);
            case SANDYGAST -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sandygast), R.drawable.pokemon_sandygast, Type.GROUND, Ability.WATER_COMPACTION, 55, 55, 80, 70, 45, 15, 17, 13, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_sandygast)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case PALOSSAND -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_palossand), R.drawable.pokemon_palossand, Type.GROUND, Ability.WATER_COMPACTION, 85, 75, 110, 100, 75, 35, 42, 28, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_palossand)).setPointValue(4);
            case PYUKUMUKU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pyukumuku), R.drawable.pokemon_pyukumuku, Type.WATER, Ability.INNARDS_OUT, 55, 60, 130, 30, 130, 5, 30, 15, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_pyukumuku)).setPointValue(2);
            case TYPE_NULL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_type_null), R.drawable.pokemon_type_null, Type.NORMAL, null, 95, 95, 95, 95, 95, 59, 69, 49, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_type_null)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case SILVALLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_silvally), R.drawable.pokemon_silvally, Type.STELLAR, Ability.RKS_SYSTEM, 95, 95, 95, 95, 95, 95, 95, 95, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_silvally)).setPointValue(5);
            case MINIOR_METEOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_minior), R.drawable.pokemon_minior_meteor, Type.GROUND, Ability.SHIELDS_DOWN, 60, 60, 100, 60, 100, 60, 60, 60, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_minior_meteor_form)).setPointValue(3);
            case MINIOR_CORE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_minior), R.drawable.pokemon_minior_core, Type.GROUND, Ability.SHIELDS_DOWN, 60, 100, 60, 100, 60, 120, 60, 120, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_minior_core)).setPointValue(6);
            case KOMALA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_komala), R.drawable.pokemon_komala, Type.NORMAL, Ability.COMATOSE, 65, 115, 65, 75, 95, 65, 69, 61, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_komala)).setPointValue(5);
            case TURTONATOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_turtonator), R.drawable.pokemon_turtonator, Type.FIRE, Ability.SHELL_TRAP, 60, 78, 135, 91, 85, 36, 43, 29, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_turtonator)).setPointValue(4);
            case TOGEDEMARU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_togedemaru), R.drawable.pokemon_togedemaru, Type.STEEL, Ability.ROUGH_SKIN, 65, 98, 63, 40, 73, 96, 84, 108, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_togedemaru)).setPointValue(5);
            case MIMIKYU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mimikyu), R.drawable.pokemon_mimikyu, Type.FAIRY, Ability.DISGUISE, 55, 90, 80, 50, 105, 96, 55, 80, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_mimikyu)).setPointValue(4);
            case BRUXISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bruxish), R.drawable.pokemon_bruxish, Type.PSYCHIC, Ability.PSYCHIC_FANGS, 68, 105, 70, 70, 70, 92, 98, 86, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_bruxish)).addTag(CardTags.FISH).setPointValue(5);
            case DRAMPA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drampa), R.drawable.pokemon_drampa, Type.DRAGON, Ability.CLOUD_NINE, 78, 60, 85, 135, 91, 36, 43, 29, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_drampa)).setPointValue(6);
            case DHELMISE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dhelmise), R.drawable.pokemon_dhelmise, Type.DARK, null, 70, 131, 100, 86, 90, 40, 48, 32, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_dhelmise)).setPointValue(6);
            case JANGMO_O -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_jangmo_o), R.drawable.pokemon_jangmo_o, Type.DRAGON, null, 45, 55, 65, 45, 45, 45, 49, 41, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_jangmo_o)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case HAKAMO_O -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hakamo_o), R.drawable.pokemon_hakamo_o, Type.DRAGON, Ability.CLANGING_SCALES, 55, 75, 90, 65, 70, 65, 73, 57, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_hakamo_o)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case KOMMO_O -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kommo_o), R.drawable.pokemon_kommo_o, Type.DRAGON, Ability.CLANGING_SCALES, 75, 110, 125, 100, 105, 85, 98, 72, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_kommo_o)).setPointValue(6);
            case TAPU_KOKO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tapu_koko), R.drawable.pokemon_tapu_koko, Type.ELECTRIC, Ability.ELECTRIC_SURGE, 70, 115, 85, 95, 75, 130, 139, 121, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_tapu_koko)).setPointValue(7);
            case TAPU_LELE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tapu_lele), R.drawable.pokemon_tapu_lele, Type.PSYCHIC, Ability.PSYCHIC_SURGE, 70, 85, 75, 130, 115, 95, 101, 89, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_tapu_lele)).setPointValue(7);
            case TAPU_BULU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tapu_bulu), R.drawable.pokemon_tapu_bulu, Type.GRASS, Ability.GRASSY_SURGE, 70, 130, 115, 85, 95, 75, 84, 66, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_tapu_bulu)).setPointValue(6);
            case TAPU_FINI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tapu_fini), R.drawable.pokemon_tapu_fini, Type.WATER, Ability.MISTY_SURGE, 70, 75, 115, 95, 130, 85, 91, 79, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_tapu_fini)).setPointValue(5);
            case COSMOG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cosmog), R.drawable.pokemon_cosmog, Type.PSYCHIC, null, 43, 29, 31, 29, 31, 37, 31, 83, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_cosmog)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case COSMOEM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cosmoem), R.drawable.pokemon_cosmoem, Type.PSYCHIC, null, 43, 29, 131, 29, 131, 37, 47, 29, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_cosmoem)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SOLGALEO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_solgaleo), R.drawable.pokemon_solgaleo, Type.STEEL, null, 137, 137, 107, 113, 89, 97, 113, 83, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_solgaleo)).setPointValue(7);
            case LUNALA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lunala), R.drawable.pokemon_lunala, Type.PSYCHIC, Ability.MOONGEIST_BEAM, 137, 113, 89, 137, 107, 97, 113, 83, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_lunala)).setPointValue(7);
            case NIHILEGO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nihilego), R.drawable.pokemon_nihilego, Type.GROUND, Ability.BEAST_BOOST, 109, 53, 47, 127, 131, 103, 113, 89, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_nihilego)).setPointValue(6);
            case BUZZWOLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_buzzwole), R.drawable.pokemon_buzzwole, Type.FIGHTING, Ability.BEAST_BOOST, 107, 139, 139, 53, 53, 79, 89, 59, Type.NORMAL, ctx.getResources().getString(R.string.pokemon_flavor_buzzwole)).setPointValue(6);
            case PHEROMOSA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pheromosa), R.drawable.pokemon_pheromosa, Type.FIGHTING, Ability.BEAST_BOOST, 71, 137, 37, 137, 37, 151, 167, 137, Type.NORMAL, ctx.getResources().getString(R.string.pokemon_flavor_pheromosa)).setPointValue(9);
            case XURKITREE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_xurkitree), R.drawable.pokemon_xurkitree, Type.ELECTRIC, Ability.BEAST_BOOST, 83, 89, 71, 173, 71, 83, 101, 71, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_xurkitree)).setPointValue(8);
            case CELESTEELA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_celesteela), R.drawable.pokemon_celesteela, Type.STEEL, Ability.BEAST_BOOST, 97, 101, 103, 107, 101, 61, 101, 47, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_celesteela)).setPointValue(5);
            case KARTANA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kartana), R.drawable.pokemon_kartana, Type.GRASS, Ability.BEAST_BOOST, 59, 181, 131, 59, 31, 109, 149, 149, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_kartana)).setPointValue(9);
            case GUZZLORD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_guzzlord), R.drawable.pokemon_guzzlord, Type.DARK, Ability.BEAST_BOOST, 223, 101, 53, 97, 53, 43, 53, 29, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_guzzlord)).setPointValue(4);
            case NECROZMA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_necrozma), R.drawable.pokemon_necrozma, Type.PSYCHIC, Ability.PHOTON_GEYSER, 97, 107, 101, 127, 89, 79, 93, 63, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_necrozma)).setPointValue(6);
            case DUSK_MANE_NECROZMA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dusk_mane_necrozma), R.drawable.pokemon_dusk_mane_necrozma, Type.STEEL, Ability.PHOTON_GEYSER, 97, 157, 127, 113, 109, 77, 93, 63, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_dusk_mane_necrozma), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ultra_necrozma), R.drawable.pokemon_ultra_necrozma, Type.DRAGON, Ability.LIGHT_THAT_BURNS, 97, 167, 97, 167, 97, 129, 153, 103, Type.FAIRY, "")).setPointValue(8);
            case DAWN_WINGS_NECROZMA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dawn_wings_necrozma), R.drawable.pokemon_dawn_wings_necrozma, Type.DARK, Ability.PHOTON_GEYSER, 97, 113, 109, 157, 127, 77, 93, 63, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_dawn_wings_necrozma), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ultra_necrozma), R.drawable.pokemon_ultra_necrozma, Type.DRAGON, Ability.LIGHT_THAT_BURNS, 97, 167, 97, 167, 97, 129, 153, 103, Type.FAIRY, "")).setPointValue(8);
            case MAGEARNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_magearna), R.drawable.pokemon_magearna, Type.STEEL, null, 80, 95, 115, 130, 115, 65, 75, 55, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_magearna)).setPointValue(6);
            case MARSHADOW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_marshadow), R.drawable.pokemon_marshadow, Type.DARK, Ability.SPECTRAL_THIEF, 90, 125, 80, 90, 90, 125, 134, 116, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_marshadow)).setPointValue(7);
            case POIPOLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_poipole), R.drawable.pokemon_poipole, Type.DARK, null, 67, 73, 67, 73, 67, 73, 59, 89, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_poipole)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case NAGANADEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_naganadel), R.drawable.pokemon_naganadel, Type.DARK, Ability.BEAST_BOOST, 73, 73, 73, 127, 73, 121, 149, 101, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_naganadel)).setPointValue(7);
            case STAKATAKA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_stakataka), R.drawable.pokemon_stakataka, Type.STEEL, Ability.BEAST_BOOST, 61, 131, 211, 53, 101, 13, 23, 17, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_stakataka)).setPointValue(6);
            case BLACEPHALON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_blacephalon), R.drawable.pokemon_blacephalon, Type.FIRE, Ability.BEAST_BOOST, 53, 127, 53, 151, 79, 107, 113, 107, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_blacephalon)).setPointValue(8);
            case ZERAORA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zeraora), R.drawable.pokemon_zeraora, Type.ELECTRIC, null, 88, 112, 75, 102, 80, 143, 160, 126, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_zeraora)).setPointValue(8);
            case MELTAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meltan), R.drawable.pokemon_meltan, Type.STEEL, null, 46, 65, 65, 55, 35, 34, 34, 34, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_meltan)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case MELMETAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_melmetal), R.drawable.pokemon_melmetal, Type.STEEL, null, 135, 143, 143, 80, 65, 34, 42, 26, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_melmetal), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_melmetal), R.drawable.pokemon_mega_melmetal, Type.STEEL, Ability.MEGA_STEELSPIKE, 135, 173, 173, 80, 95, 44, 42, 26, Type.FIRE, "")).setPointValue(6);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard8(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case GROOKEY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grookey), R.drawable.pokemon_grookey, Type.GRASS, Ability.OVERGROW, 50, 65, 50, 40, 40, 65, 61, 69, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_grookey)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case THWACKEY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_thwackey), R.drawable.pokemon_thwackey, Type.GRASS, Ability.OVERGROW, 70, 85, 70, 55, 60, 80, 83, 77, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_thwackey)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case RILLABOOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rillaboom), R.drawable.pokemon_rillaboom, Type.GRASS, Ability.OVERGROW, 100, 125, 90, 60, 70, 85, 98, 72, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_rillaboom), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_rillaboom), R.drawable.pokemon_mega_rillaboom, Type.GRASS, Ability.MEGA_OVERGROWTH, 100, 155, 110, 60, 90, 115, 98, 72, Type.NORMAL, "")).setPointValue(6);
            case SCORBUNNY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scorbunny), R.drawable.pokemon_scorbunny, Type.FIRE, Ability.BLAZE, 50, 71, 40, 40, 40, 69, 64, 74, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_scorbunny)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case RABOOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_raboot), R.drawable.pokemon_raboot, Type.FIRE, Ability.BLAZE, 65, 86, 60, 55, 60, 94, 94, 94, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_raboot)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case CINDERACE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cinderace), R.drawable.pokemon_cinderace, Type.FIRE, Ability.BLAZE, 80, 116, 75, 65, 75, 119, 131, 107, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_cinderace), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_cinderace), R.drawable.pokemon_mega_cinderace, Type.FIRE, Ability.MEGA_FLARE, 80, 136, 95, 65, 95, 159, 131, 107, Type.WATER, "")).setPointValue(7);
            case SOBBLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sobble), R.drawable.pokemon_sobble, Type.WATER, Ability.TORRENT, 50, 40, 40, 70, 40, 70, 63, 77, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_sobble)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DRIZZILE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drizzile), R.drawable.pokemon_drizzile, Type.WATER, Ability.TORRENT, 65, 60, 55, 95, 55, 90, 92, 88, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_drizzile)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case INTELEON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_inteleon), R.drawable.pokemon_inteleon, Type.WATER, Ability.TORRENT, 70, 85, 65, 125, 65, 120, 134, 106, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_inteleon), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_inteleon), R.drawable.pokemon_mega_inteleon, Type.WATER, Ability.MEGA_GEYSER, 70, 110, 70, 155, 70, 155, 134, 106, Type.ELECTRIC, "")).setPointValue(7);
            case SKWOVET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skwovet), R.drawable.pokemon_skwovet, Type.NORMAL, Ability.CHEEK_POUCH, 70, 55, 55, 35, 35, 25, 21, 29, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_skwovet)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case GREEDENT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_greedent), R.drawable.pokemon_greedent, Type.NORMAL, Ability.CHEEK_POUCH, 120, 95, 95, 55, 75, 20, 19, 21, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_greedent)).setPointValue(3);
            case ROOKIDEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rookidee), R.drawable.pokemon_rookidee, Type.NORMAL, null, 38, 47, 35, 33, 35, 57, 44, 70, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_rookidee)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CORVISQUIRE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_corvisquire), R.drawable.pokemon_corvisquire, Type.NORMAL, null, 68, 67, 55, 43, 55, 77, 81, 73, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_corvisquire)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case CORVIKNIGHT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_corviknight), R.drawable.pokemon_corviknight, Type.STEEL, null, 98, 87, 105, 53, 85, 67, 77, 57, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_corviknight), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_corviknight), R.drawable.pokemon_mega_corviknight, Type.STEEL, Ability.MEGA_STEELSPIKE, 98, 107, 145, 53, 105, 87, 77, 57, Type.FIRE, "")).setPointValue(4);
            case BLIPBUG -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_blipbug), R.drawable.pokemon_blipbug, Type.GRASS, null, 25, 20, 20, 25, 45, 45, 44, 46, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_blipbug)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case DOTTLER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dottler), R.drawable.pokemon_dottler, Type.GRASS, null, 50, 35, 80, 50, 90, 30, 32, 28, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_dottler)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case ORBEETLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_orbeetle), R.drawable.pokemon_orbeetle, Type.GRASS, null, 60, 45, 110, 80, 120, 90, 100, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_orbeetle), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_orbeetle), R.drawable.pokemon_mega_orbeetle, Type.PSYCHIC, Ability.MEGA_MINDSTORM, 60, 45, 130, 120, 140, 110, 100, 80, Type.DARK, "")).setPointValue(5);
            case NICKIT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nickit), R.drawable.pokemon_nickit, Type.DARK, Ability.THIEF, 40, 28, 28, 47, 52, 50, 50, 50, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_nickit)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case THIEVUL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_thievul), R.drawable.pokemon_thievul, Type.DARK, Ability.THIEF, 70, 58, 58, 87, 92, 90, 96, 84, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_thievul)).setPointValue(5);
            case GOSSIFLEUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gossifleur), R.drawable.pokemon_gossifleur, Type.GRASS, Ability.REGENERATOR, 40, 40, 60, 40, 60, 10, 40, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_gossifleur)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case ELDEGOSS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_eldegoss), R.drawable.pokemon_eldegoss, Type.GRASS, Ability.REGENERATOR, 60, 50, 90, 80, 120, 60, 60, 60, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_eldegoss)).setPointValue(4);
            case WOOLOO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wooloo), R.drawable.pokemon_wooloo, Type.NORMAL, Ability.FLUFFY, 42, 40, 55, 40, 45, 48, 46, 50, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_wooloo)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case DUBWOOL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dubwool), R.drawable.pokemon_dubwool, Type.NORMAL, Ability.FLUFFY, 72, 80, 100, 60, 90, 88, 98, 78, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_dubwool)).setPointValue(5);
            case CHEWTLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chewtle), R.drawable.pokemon_chewtle, Type.WATER, Ability.SWIFT_SWIM, 50, 64, 50, 38, 38, 44, 44, 44, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_chewtle)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case DREDNAW -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drednaw), R.drawable.pokemon_drednaw, Type.WATER, Ability.SWIFT_SWIM, 90, 115, 90, 48, 68, 74, 86, 62, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_drednaw), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_drednaw), R.drawable.pokemon_mega_drednaw, Type.WATER, Ability.MEGA_GEYSER, 90, 145, 130, 48, 88, 84, 86, 62, Type.ELECTRIC, "")).setPointValue(5);
            case YAMPER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_yamper), R.drawable.pokemon_yamper, Type.ELECTRIC, null, 59, 45, 50, 40, 50, 26, 27, 25, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_yamper)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BOLTUND -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_boltund), R.drawable.pokemon_boltund, Type.ELECTRIC, null, 69, 90, 60, 90, 60, 121, 133, 109, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_boltund)).setPointValue(7);
            case ROLYCOLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rolycoly), R.drawable.pokemon_rolycoly, Type.GROUND, Ability.HEATPROOF, 30, 40, 50, 40, 50, 30, 31, 29, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_rolycoly)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case CARKOL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_carkol), R.drawable.pokemon_carkol, Type.GROUND, Ability.STEAM_ENGINE, 80, 60, 90, 60, 70, 50, 57, 43, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_carkol)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case COALOSSAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_coalossal), R.drawable.pokemon_coalossal, Type.GROUND, Ability.STEAM_ENGINE, 110, 80, 120, 80, 90, 30, 36, 24, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_coalossal), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_coalossal), R.drawable.pokemon_mega_coalossal, Type.FIRE, Ability.MEGA_ROCKFALL, 0, 0, 0, 0, 0, 0, 36, 24, Type.WATER, "")).setPointValue(3);
            case APPLIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_applin), R.drawable.pokemon_applin, Type.GRASS, Ability.RIPEN, 40, 40, 80, 40, 40, 20, 20, 40, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_applin)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case FLAPPLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flapple), R.drawable.pokemon_flapple, Type.GRASS, Ability.RIPEN, 70, 110, 80, 95, 60, 70, 40, 80, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_flapple), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_flapple), R.drawable.pokemon_mega_flapple, Type.GRASS, Ability.MEGA_OVERGROWTH, 70, 140, 80, 125, 60, 110, 45, 95, Type.FIRE, "")).setPointValue(5);
            case APPLETUN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_appletun), R.drawable.pokemon_appletun, Type.GRASS, Ability.RIPEN, 110, 85, 80, 100, 80, 30, 80, 40, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_appletun), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_appletun), R.drawable.pokemon_mega_flapple, Type.GRASS, Ability.MEGA_OVERGROWTH, 110, 105, 100, 120, 100, 50, 31, 29, Type.FIRE, "")).setPointValue(4);
            case SILICOBRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_silicobra), R.drawable.pokemon_silicobra, Type.GROUND, Ability.SAND_STREAM, 52, 57, 75, 35, 50, 46, 45, 47, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_silicobra)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case SANDACONDA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sandaconda), R.drawable.pokemon_sandaconda, Type.GROUND, Ability.SAND_STREAM, 72, 107, 125, 65, 70, 71, 81, 61, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_sandaconda), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_sandaconda), R.drawable.pokemon_mega_sandaconda, Type.GROUND, Ability.MEGA_ROCKFALL, 72, 127, 145, 65, 100, 101, 81, 61, Type.GRASS, "")).setPointValue(5);
            case CRAMORANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cramorant), R.drawable.pokemon_cramorant, Type.WATER, Ability.GULP_MISSILE, 70, 85, 55, 85, 95, 85, 90, 80, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_cramorant)).setPointValue(4);
            case ARROKUDA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arrokuda), R.drawable.pokemon_arrokuda, Type.WATER, Ability.SWIFT_SWIM, 41, 63, 40, 40, 30, 66, 60, 30, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_arrokuda)).addTag(CardTags.CAN_EVOLVE).addTag(CardTags.FISH).setPointValue(2);
            case BARRASKEWDA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_barraskewda), R.drawable.pokemon_barraskewda, Type.WATER, Ability.SWIFT_SWIM, 61, 123, 60, 60, 50, 136, 90, 50, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_barraskewda)).addTag(CardTags.FISH).setPointValue(7);
            case TOXEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_toxel), R.drawable.pokemon_toxel, Type.ELECTRIC, Ability.BEGINNERS_LUCK, 40, 38, 35, 54, 35, 40, 41, 39, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_toxel)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case TOXTRICITY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_toxtricity), R.drawable.pokemon_toxtricity_amped, Type.ELECTRIC, null, 75, 98, 70, 114, 70, 75, 83, 67, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_toxtricity), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_toxtricity), R.drawable.pokemon_mega_toxtricity, Type.ELECTRIC, Ability.MEGA_LIGHTNING, 75, 138, 70, 154, 70, 95, 83, 67, Type.GROUND, "")).setPointValue(5);
            case SIZZLIPEDE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sizzlipede), R.drawable.pokemon_sizzlipede, Type.FIRE, Ability.FLAME_BODY, 50, 65, 45, 50, 50, 45, 29, 61, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_sizzlipede)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CENTISKORCH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_centiskorch), R.drawable.pokemon_centiskorch, Type.FIRE, Ability.FLAME_BODY, 100, 115, 65, 90, 90, 65, 76, 54, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_centiskorch), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_centiskorch), R.drawable.pokemon_mega_centiskorch, Type.FIRE, Ability.MEGA_FLARE, 100, 145, 65, 110, 90, 115, 76, 54, Type.WATER, "")).setPointValue(5);
            case CLOBBOPUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_clobbopus), R.drawable.pokemon_clobbopus, Type.FIGHTING, null, 50, 68, 60, 50, 50, 32, 29, 35, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_clobbopus)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GRAPPLOCT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grapploct), R.drawable.pokemon_grapploct, Type.FIGHTING, null, 80, 118, 90, 70, 80, 42, 47, 37, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_grapploct)).setPointValue(5);
            case SINISTEA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sinistea), R.drawable.pokemon_sinistea, Type.DARK, Ability.POLTERGEIST, 40, 45, 45, 74, 54, 50, 40, 70, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_sinistea)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case POLTEAGEIST -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_polteageist), R.drawable.pokemon_polteageist, Type.DARK, Ability.POLTERGEIST, 60, 65, 65, 134, 114, 70, 27, 113, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_polteageist)).setPointValue(6);
            case HATENNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hatenna), R.drawable.pokemon_hatenna, Type.FAIRY, null, 42, 30, 45, 56, 53, 39, 34, 44, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_hatenna)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case HATTREM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hattrem), R.drawable.pokemon_hattrem, Type.FAIRY, null, 57, 40, 65, 86, 73, 49, 46, 52, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_hattrem)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case HATTERENE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hatterene), R.drawable.pokemon_hatterene, Type.FAIRY, null, 57, 90, 95, 136, 103, 29, 27, 31, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_hatterene), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_hatterene), R.drawable.pokemon_mega_hatterene, Type.FAIRY, Ability.MEGA_STARFALL, 57, 90, 115, 166, 143, 39, 27, 31, Type.DARK, "")).setPointValue(6);
            case IMPIDIMP -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_impidimp), R.drawable.pokemon_impidimp, Type.DARK, Ability.DARK_HAZE, 45, 45, 30, 55, 40, 50, 47, 53, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_impidimp)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case MORGREM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_morgrem), R.drawable.pokemon_morgrem, Type.DARK, Ability.DARK_HAZE, 65, 60, 45, 75, 55, 70, 72, 68, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_morgrem)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GRIMMSNARL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grimmsnarl), R.drawable.pokemon_grimmsnarl, Type.DARK, Ability.DARK_HAZE, 95, 120, 65, 95, 75, 60, 68, 52, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_grimmsnarl), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_grimmsnarl), R.drawable.pokemon_mega_grimmsnarl, Type.DARK, Ability.MEGA_DARKNESS, 95, 160, 80, 135, 90, 60, 68, 52, Type.FAIRY, "")).setPointValue(5);
            case OBSTAGOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_obstagoon), R.drawable.pokemon_obstagoon, Type.DARK, Ability.OBSTRUCT, 93, 90, 101, 60, 81, 95, 106, 84, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_obstagoon)).setPointValue(5);
            case PERRSERKER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_perrserker), R.drawable.pokemon_perrserker, Type.STEEL, null, 70, 110, 100, 50, 60, 50, 55, 45, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_perrserker)).setPointValue(5);
            case CURSOLA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cursola), R.drawable.pokemon_cursola, Type.DARK, Ability.PERISH_SONG, 60, 95, 50, 145, 130, 30, 30, 49, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_cursola)).setPointValue(6);
            case SIRFETCHD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sirfetchd), R.drawable.pokemon_sirfetchd, Type.FIGHTING, null, 62, 135, 95, 68, 82, 65, 76, 54, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_sirfetchd)).setPointValue(6);
            case MR_RIME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mr_rime), R.drawable.pokemon_mr_rime, Type.ICE, Ability.FROZEN_BODY, 80, 85, 75, 110, 100, 70, 79, 61, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_mr_rime)).setPointValue(5);
            case RUNERIGUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_runerigus), R.drawable.pokemon_runerigus, Type.DARK, null, 58, 95, 145, 50, 105, 30, 34, 26, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_runerigus)).setPointValue(4);
            case MILCERY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_milcery), R.drawable.pokemon_milcery, Type.FAIRY, null, 45, 40, 40, 50, 61, 34, 30, 60, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_milcery)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case ALCREMIE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_alcremie), R.drawable.pokemon_alcremie, Type.FAIRY, null, 65, 60, 75, 110, 121, 64, 29, 99, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_alcremie), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_alcremie), R.drawable.pokemon_mega_alcremie, Type.FAIRY, Ability.MEGA_STARFALL, 65, 60, 95, 130, 161, 84, 29, 99, Type.STEEL, "")).setPointValue(5);
            case FALINKS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_falinks), R.drawable.pokemon_falinks, Type.FIGHTING, Ability.NO_RETREAT, 65, 100, 100, 70, 60, 75, 85, 65, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_falinks)).setPointValue(5);
            case PINCURCHIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pincurchin), R.drawable.pokemon_pincurchin, Type.ELECTRIC, Ability.ELECTRIC_SURGE, 48, 101, 95, 91, 85, 15, 10, 20, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_pincurchin)).setPointValue(4);
            case SNOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_snom), R.drawable.pokemon_snom, Type.ICE, Ability.ICE_SCALES, 30, 25, 35, 45, 30, 20, 18, 22, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_snom)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case FROSMOTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_frosmoth), R.drawable.pokemon_frosmoth, Type.ICE, Ability.AURORA_VEIL, 70, 65, 60, 125, 90, 65, 73, 57, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_frosmoth)).setPointValue(5);
            case STONJOURNER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_stonjourner), R.drawable.pokemon_stonjourner, Type.GROUND, Ability.STEALTH_ROCK, 100, 125, 135, 20, 20, 70, 85, 55, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_stonjourner)).setPointValue(5);
            case EISCUE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_eiscue), R.drawable.pokemon_eiscue, Type.ICE, Ability.ICE_FACE, 75, 80, 110, 65, 90, 50, 58, 42, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_eiscue)).setPointValue(3);
            case INDEEDEE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_indeedee), R.drawable.pokemon_indeedee, Type.PSYCHIC, Ability.PSYCHIC_SURGE, 70, 55, 65, 95, 105, 85, 93, 77, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_indeedee)).setPointValue(5);
            case MORPEKO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_morpeko), R.drawable.pokemon_morpeko, Type.ELECTRIC, Ability.AURA_SHIFT, 58, 95, 58, 70, 58, 97, 84, 110, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_morpeko)).setPointValue(5);
            case CUFANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cufant), R.drawable.pokemon_cufant, Type.STEEL, null, 72, 80, 49, 40, 49, 40, 46, 34, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cufant)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case COPPERAJAH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_copperajah), R.drawable.pokemon_copperajah, Type.STEEL, null, 122, 130, 69, 80, 69, 30, 37, 23, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_copperajah), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_copperajah), R.drawable.pokemon_mega_copperajah, Type.STEEL, Ability.MEGA_STEELSPIKE, 122, 168, 100, 80, 100, 30, 37, 23, Type.FIRE, "")).setPointValue(5);
            case DRACOZOLT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dracozolt), R.drawable.pokemon_dracozolt, Type.DRAGON, null, 90, 100, 90, 80, 70, 75, 89, 61, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_dracozolt)).setPointValue(5);
            case ARCTOZOLT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arctozolt), R.drawable.pokemon_arctozolt, Type.ELECTRIC, null, 90, 100, 90, 90, 80, 55, 65, 45, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_arctozolt)).setPointValue(4);
            case DRACOVISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dracovish), R.drawable.pokemon_dracovish, Type.WATER, null, 90, 90, 100, 70, 80, 75, 89, 61, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_dracovish)).setPointValue(4);
            case ARCTOVISH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arctovish), R.drawable.pokemon_arctovish, Type.ICE, null, 90, 90, 100, 80, 90, 55, 65, 45, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_arctovish)).setPointValue(4);
            case DURALUDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_duraludon), R.drawable.pokemon_duraludon, Type.STEEL, null, 70, 95, 115, 120, 50, 85, 95, 75, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_duraludon), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_duraludon), R.drawable.pokemon_mega_duraludon, Type.STEEL, Ability.MEGA_STEELSPIKE, 70, 105, 155, 140, 60, 105, 95, 75, Type.GROUND, "")).addTag(CardTags.CAN_EVOLVE).setPointValue(6);
            case DREEPY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dreepy), R.drawable.pokemon_dreepy, Type.DRAGON, null, 28, 60, 30, 40, 30, 82, 60, 50, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_dreepy)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case DRAKLOAK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_drakloak), R.drawable.pokemon_drakloak, Type.DRAGON, null, 68, 80, 50, 60, 50, 102, 80, 60, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_drakloak)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case DRAGAPULT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dragapult), R.drawable.pokemon_dragapult, Type.DRAGON, Ability.DRAGON_DARTS, 88, 120, 75, 100, 75, 142, 160, 75, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_dragapult)).setPointValue(8);
            case ZACIAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zacian), R.drawable.pokemon_zacian, Type.FAIRY, null, 92, 120, 115, 80, 115, 138, 120, 115, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_zacian), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crowned_zacian), R.drawable.pokemon_crowned_zacian, Type.FAIRY, Ability.INTREPID_SWORD, 92, 150, 115, 80, 115, 148, 150, 115, Type.GROUND, "")).setPointValue(8);
            case ZAMAZENTA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zamazenta), R.drawable.pokemon_zamazenta, Type.FIGHTING, null, 92, 120, 115, 80, 115, 138, 120, 115, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_zamazenta), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crowned_zamazenta), R.drawable.pokemon_crowned_zamazenta, Type.FIGHTING, Ability.DAUNTLESS_SHIELD, 92, 120, 140, 80, 140, 128, 120, 140, Type.GROUND, "")).setPointValue(8);
            case ETERNATUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_eternatus), R.drawable.pokemon_eternatus, Type.DRAGON, null, 140, 85, 95, 145, 95, 130, 161, 99, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_eternatus), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_eternamax_eternatus), R.drawable.pokemon_eternamax_eternatus, Type.DRAGON, Ability.ETERNABEAM, 255, 115, 250, 125, 250, 130, 161, 99, Type.GROUND, "")).setPointValue(9);
            case KUBFU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kubfu), R.drawable.pokemon_kubfu, Type.FIGHTING, null, 60, 90, 60, 53, 50, 72, 74, 70, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_kubfu)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case URSHIFU_SINGLE_STRIKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_single_strike_urshifu), R.drawable.pokemon_urshifu_single_strike, Type.FIGHTING, null, 100, 130, 100, 63, 60, 97, 113, 81, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_urshifu), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_urshifu), R.drawable.pokemon_mega_urshifu_single_strike, Type.FIGHTING, Ability.MEGA_KNUCKLE, 100, 170, 120, 63, 70, 127, 113, 81, Type.PSYCHIC, "")).setPointValue(6);
            case URSHIFU_RAPID_STRIKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rapid_strike_urshifu), R.drawable.pokemon_urshifu_rapid_strike, Type.FIGHTING, null, 100, 130, 100, 63, 60, 97, 113, 81, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_urshifu), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_urshifu), R.drawable.pokemon_mega_urshifu_rapid_strike, Type.FIGHTING, Ability.MEGA_KNUCKLE, 100, 170, 120, 63, 70, 127, 113, 81, Type.PSYCHIC, "")).setPointValue(6);
            case ZARUDE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_zarude), R.drawable.pokemon_zarude, Type.GRASS, Ability.LEAF_GUARD, 105, 120, 105, 70, 95, 105, 120, 90, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_zarude)).setPointValue(6);
            case REGIELEKI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_regieleki), R.drawable.pokemon_regieleki, Type.ELECTRIC, Ability.SLOW_START, 80, 100, 50, 100, 50, 200, 100, 150, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_regieleki)).setPointValue(10);
            case REGIDRAGO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_regidrago), R.drawable.pokemon_regidrago, Type.DRAGON, Ability.SLOW_START, 200, 100, 50, 100, 50, 80, 95, 65, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_regidrago)).setPointValue(5);
            case GLASTRIER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_glastrier), R.drawable.pokemon_glastrier, Type.ICE, Ability.CHILLING_NEIGH, 100, 145, 130, 65, 110, 30, 37, 23, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_glastrier)).setPointValue(6);
            case SPECTRIER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spectrier), R.drawable.pokemon_spectrier, Type.DARK, Ability.GRIM_NEIGH, 100, 65, 60, 145, 80, 130, 145, 115, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_spectrier)).setPointValue(7);
            //case CALYREX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_calyrex), R.drawable.pokemon_calyrex, Type.GRASS, null, 100, 80, 80, 80, 80, 80, 80, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_calyrex)).setPointValue(4);
            //case ICE_RIDER_CALYREX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ice_rider_calyrex), R.drawable.pokemon_ice_rider_calyrex, Type.ICE, null, 100, 165, 150, 85, 130, 50, 60, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_ice_rider_calyrex)).setPointValue(8);
            //case SHADOW_RIDER_CALYREX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shadow_rider_calyrex), R.drawable.pokemon_shadow_rider_calyrex, Type.DARK, null, 100, 85, 80, 165, 100, 150, 160, 130, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_shadow_rider_calyrex)).setPointValue(9);
            case WYRDEER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wyrdeer), R.drawable.pokemon_wyrdeer, Type.PSYCHIC, Ability.CALM_MIND, 103, 105, 72, 105, 75, 65, 75, 55, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_wyrdeer)).setPointValue(5);
            case KLEAVOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kleavor), R.drawable.pokemon_kleavor, Type.GROUND, Ability.STEALTH_ROCK, 70, 130, 95, 45, 75, 85, 95, 75, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_kleavor)).setPointValue(6);
            case URSALUNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ursaluna), R.drawable.pokemon_ursaluna, Type.GROUND, Ability.LUNAR_RUSH, 130, 140, 105, 45, 80, 50, 60, 40, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_ursaluna)).setPointValue(6);
            case BLOODMOON_URSALUNA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bloodmoon_ursaluna), R.drawable.pokemon_bloodmoon_ursaluna, Type.GROUND, Ability.BLOOD_MOON_FRENZY, 113, 70, 120, 135, 65, 52, 65, 40, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_bloodmoon_ursaluna)).setPointValue(6);
            case BASCULEGION -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_basculegion), R.drawable.pokemon_basculegion, Type.WATER, null, 120, 112, 65, 80, 75, 78, 90, 65, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_basculegion)).addTag(CardTags.FISH).setPointValue(5);
            case SNEASLER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sneasler), R.drawable.pokemon_sneasler, Type.FIGHTING, null, 80, 130, 60, 40, 80, 120, 135, 105, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_sneasler)).setPointValue(7);
            case OVERQWIL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_overqwil), R.drawable.pokemon_overqwil, Type.DARK, Ability.POISON_POINT, 85, 115, 95, 65, 65, 85, 95, 75, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_overqwil)).setPointValue(5);
            case ENAMORUS_INCARNATE_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_enamorus_incarnate), R.drawable.pokemon_enamorus_incarnate, Type.FAIRY, Ability.SPRINGTIDE_STORM, 74, 115, 70, 135, 80, 106, 120, 90, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_enamorus_incarnate_forme)).setPointValue(7);
            case ENAMORUS_THERIAN_FORME -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_enamorus_therian), R.drawable.pokemon_enamorus_therian, Type.FAIRY, Ability.SPRINGTIDE_STORM, 74, 115, 110, 135, 100, 46, 50, 40, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_enamorus_therian_forme)).setPointValue(6);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    private static Card initCard9(Context ctx, CardRegistry cr) {
        return switch (cr) {
            case SPRIGATITO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sprigatito), R.drawable.pokemon_sprigatito, Type.GRASS, Ability.OVERGROW, 40, 61, 54, 45, 45, 65, 59, 71, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_sprigatito)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case FLORAGATO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_floragato), R.drawable.pokemon_floragato, Type.GRASS, Ability.OVERGROW, 61, 80, 63, 60, 63, 83, 85, 81, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_floragato)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case MEOWSCARADA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_meowscarada), R.drawable.pokemon_meowscarada, Type.GRASS, Ability.OVERGROW, 76, 110, 70, 81, 70, 123, 135, 111, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_meowscarada)).setPointValue(7);
            case FUECOCO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fuecoco), R.drawable.pokemon_fuecoco, Type.FIRE, Ability.BLAZE, 67, 45, 59, 63, 40, 36, 36, 36, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_fuecoco)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case CROCALOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_crocalor), R.drawable.pokemon_crocalor, Type.FIRE, Ability.BLAZE, 81, 55, 78, 90, 58, 49, 54, 44, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_crocalor)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SKELEDIRGE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_skeledirge), R.drawable.pokemon_skeledirge, Type.FIRE, Ability.BLAZE, 104, 75, 100, 110, 75, 66, 80, 52, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_skeledirge)).setPointValue(5);
            case QUAXLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_quaxly), R.drawable.pokemon_quaxly, Type.WATER, Ability.TORRENT, 55, 65, 45, 50, 45, 50, 48, 52, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_quaxly)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case QUAXWELL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_quaxwell), R.drawable.pokemon_quaxwell, Type.WATER, Ability.TORRENT, 70, 85, 65, 65, 60, 65, 70, 60, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_quaxwell)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case QUAQUAVAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_quaquaval), R.drawable.pokemon_quaquaval, Type.WATER, Ability.TORRENT, 85, 120, 80, 85, 75, 85, 97, 73, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_quaquaval)).setPointValue(6);
            case LECHONK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lechonk), R.drawable.pokemon_lechonk, Type.NORMAL, null, 54, 45, 40, 35, 45, 35, 35, 35, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_lechonk)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case OINKOLOGNE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_oinkologne), R.drawable.pokemon_oinkologne, Type.NORMAL, null, 115, 90, 70, 59, 90, 65, 76, 54, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_oinkologne)).setPointValue(4);
            case TAROUNTULA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tarountula), R.drawable.pokemon_tarountula, Type.GRASS, Ability.SILK_TRAP, 35, 41, 45, 29, 40, 20, 50, 40, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_tarountula)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case SPIDOPS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_spidops), R.drawable.pokemon_spidops, Type.GRASS, Ability.SILK_TRAP, 60, 79, 92, 52, 86, 35, 80, 50, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_spidops)).setPointValue(3);
            case NYMBLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nymble), R.drawable.pokemon_nymble, Type.DARK, null, 33, 46, 40, 21, 25, 45, 37, 33, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_nymble)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case LOKIX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_lokix), R.drawable.pokemon_lokix, Type.DARK, null, 71, 102, 78, 52, 55, 92, 29, 61, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_lokix)).setPointValue(4);
            case PAWMI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pawmi), R.drawable.pokemon_pawmi, Type.ELECTRIC, null, 45, 50, 20, 40, 25, 60, 97, 87, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_pawmi)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PAWMO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pawmo), R.drawable.pokemon_pawmo, Type.ELECTRIC, null, 60, 75, 40, 50, 40, 85, 50, 70, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_pawmo)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PAWMOT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pawmot), R.drawable.pokemon_pawmot, Type.ELECTRIC, null, 70, 115, 70, 70, 60, 105, 82, 88, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_pawmot)).setPointValue(5);
            case TANDEMAUS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tandemaus), R.drawable.pokemon_tandemaus, Type.NORMAL, null, 50, 50, 45, 40, 45, 75, 117, 93, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_tandemaus)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case MAUSHOLD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_maushold), R.drawable.pokemon_maushold, Type.NORMAL, Ability.POPULATION_BOMB, 74, 75, 70, 65, 75, 111, 58, 92, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_maushold)).setPointValue(5);
            case FIDOUGH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fidough), R.drawable.pokemon_fidough, Type.FAIRY, Ability.WELL_BAKED_BODY, 37, 55, 70, 30, 55, 65, 95, 127, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_fidough)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case DACHSBUN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dachsbun), R.drawable.pokemon_dachsbun, Type.FAIRY, Ability.WELL_BAKED_BODY, 57, 80, 115, 50, 80, 95, 66, 64, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_dachsbun)).setPointValue(4);
            case SMOLIV -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_smoliv), R.drawable.pokemon_smoliv, Type.GRASS, Ability.GRASSY_SURGE, 41, 35, 45, 58, 51, 30, 99, 91, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_smoliv)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case DOLLIV -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dolliv), R.drawable.pokemon_dolliv, Type.GRASS, Ability.GRASSY_SURGE, 52, 53, 60, 78, 78, 33, 29, 31, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_dolliv)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ARBOLIVA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arboliva), R.drawable.pokemon_arboliva, Type.GRASS, Ability.GRASSY_SURGE, 78, 69, 90, 125, 109, 39, 34, 32, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_arboliva)).setPointValue(5);
            case SQUAWKABILLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_squawkabilly), R.drawable.pokemon_squawkabilly, Type.NORMAL, Ability.FACADE, 82, 96, 51, 45, 51, 92, 44, 34, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_squawkabilly)).setPointValue(4);
            case NACLI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_nacli), R.drawable.pokemon_nacli, Type.GROUND, null, 55, 55, 75, 35, 35, 25, 76, 108, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_nacli)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case NACLSTACK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_naclstack), R.drawable.pokemon_naclstack, Type.GROUND, null, 60, 60, 100, 35, 65, 35, 26, 24, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_naclstack)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case GARGANACL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_garganacl), R.drawable.pokemon_garganacl, Type.GROUND, null, 100, 100, 130, 45, 90, 35, 41, 29, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_garganacl)).setPointValue(4);
            case CHARCADET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_charcadet), R.drawable.pokemon_charcadet, Type.FIRE, Ability.FLASH_FIRE, 40, 50, 40, 50, 40, 35, 42, 28, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_charcadet)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case ARMAROUGE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_armarouge), R.drawable.pokemon_armarouge, Type.PSYCHIC, Ability.ARMOR_FLARE, 85, 60, 100, 125, 80, 75, 36, 34, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_armarouge)).setPointValue(5);
            case CERULEDGE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ceruledge), R.drawable.pokemon_ceruledge, Type.DARK, Ability.BITTER_BLADE, 75, 125, 80, 60, 100, 85, 86, 64, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_ceruledge)).setPointValue(6);
            case TADBULB -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tadbulb), R.drawable.pokemon_tadbulb, Type.ELECTRIC, Ability.CHARGE, 61, 31, 41, 59, 35, 45, 35, 45, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_tadbulb)).addTag(CardTags.CAN_EVOLVE).setPointValue(1);
            case BELLIBOLT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bellibolt), R.drawable.pokemon_bellibolt, Type.ELECTRIC, Ability.ELECTROMORPHOSIS, 109, 64, 91, 103, 83, 45, 85, 15, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_bellibolt)).setPointValue(4);
            case WATTREL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wattrel), R.drawable.pokemon_wattrel, Type.ELECTRIC, Ability.WIND_POWER, 40, 40, 35, 55, 40, 70, 52, 38, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_wattrel)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case KILOWATTREL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kilowattrel), R.drawable.pokemon_kilowattrel, Type.ELECTRIC, Ability.WIND_POWER, 70, 70, 60, 105, 60, 125, 62, 78, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_kilowattrel)).setPointValue(6);
            case MASCHIFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_maschiff), R.drawable.pokemon_maschiff, Type.DARK, Ability.GUARD_DOG, 60, 78, 60, 40, 51, 51, 139, 111, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_maschiff)).addTag(CardTags.CAN_EVOLVE).setPointValue(6);
            case MABOSSTIFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mabosstiff), R.drawable.pokemon_mabosstiff, Type.DARK, Ability.GUARD_DOG, 80, 120, 90, 60, 70, 85, 54, 48, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_mabosstiff)).setPointValue(5);
            case SHROODLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_shroodle), R.drawable.pokemon_shroodle, Type.NORMAL, null, 40, 65, 35, 40, 35, 75, 97, 73, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_shroodle)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GRAFAIAI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_grafaiai), R.drawable.pokemon_grafaiai, Type.NORMAL, null, 63, 95, 65, 80, 72, 110, 42, 108, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_grafaiai)).setPointValue(5);
            case BRAMBLIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bramblin), R.drawable.pokemon_bramblin, Type.GRASS, null, 40, 65, 30, 45, 35, 60, 120, 100, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_bramblin)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case BRAMBLEGHAST -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_brambleghast), R.drawable.pokemon_brambleghast, Type.GRASS, null, 55, 115, 70, 80, 70, 90, 31, 89, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_brambleghast)).setPointValue(5);
            case TOEDSCOOL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_toedscool), R.drawable.pokemon_toedscool, Type.GROUND, null, 40, 40, 35, 50, 100, 70, 86, 94, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_toedscool)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case TOEDSCRUEL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_toedscruel), R.drawable.pokemon_toedscruel, Type.GROUND, null, 80, 70, 65, 80, 120, 100, 77, 63, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_toedscruel)).setPointValue(5);
            case KLAWF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_klawf), R.drawable.pokemon_klawf, Type.GROUND, null, 70, 100, 115, 35, 55, 75, 113, 87, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_klawf)).setPointValue(5);
            case CAPSAKID -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_capsakid), R.drawable.pokemon_capsakid, Type.GRASS, null, 50, 62, 40, 62, 40, 50, 86, 64, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_capsakid)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SCOVILLAIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scovillain), R.drawable.pokemon_scovillain, Type.GRASS, Ability.SPICY_EXTRACT, 65, 108, 65, 108, 65, 75, 43, 57, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_scovillain)).setPointValue(5);
            case RELLOR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rellor), R.drawable.pokemon_rellor, Type.GRASS, null, 41, 50, 60, 31, 58, 30, 78, 72, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_rellor)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case RABSCA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_rabsca), R.drawable.pokemon_rabsca, Type.PSYCHIC, Ability.POWER_SWAP, 75, 50, 85, 115, 100, 45, 19, 41, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_rabsca)).setPointValue(5);
            case FLITTLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flittle), R.drawable.pokemon_flittle, Type.PSYCHIC, null, 30, 35, 30, 55, 30, 75, 40, 50, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_flittle)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case ESPATHRA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_espathra), R.drawable.pokemon_espathra, Type.PSYCHIC, null, 95, 60, 60, 101, 60, 105, 56, 94, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_espathra)).setPointValue(5);
            case TINKATINK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tinkatink), R.drawable.pokemon_tinkatink, Type.FAIRY, null, 50, 45, 45, 35, 64, 58, 35, 45, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_tinkatink)).addTag(CardTags.CAN_EVOLVE).setPointValue(2);
            case TINKATUFF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tinkatuff), R.drawable.pokemon_tinkatuff, Type.FAIRY, null, 65, 55, 55, 45, 82, 78, 58, 58, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_tinkatuff)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case TINKATON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tinkaton), R.drawable.pokemon_tinkaton, Type.FAIRY, null, 85, 75, 77, 70, 105, 94, 88, 68, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_tinkaton)).setPointValue(4);
            case WIGLETT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wiglett), R.drawable.pokemon_wiglett, Type.WATER, null, 10, 55, 25, 35, 25, 95, 110, 78, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wiglett)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case WUGTRIO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wugtrio), R.drawable.pokemon_wugtrio, Type.WATER, null, 35, 100, 50, 50, 70, 120, 74, 116, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_wugtrio)).setPointValue(6);
            case BOMBIRDIER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_bombirdier), R.drawable.pokemon_bombirdier, Type.DARK, null, 70, 103, 85, 60, 85, 82, 113, 127, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_bombirdier)).setPointValue(6);
            case FINIZEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_finizen), R.drawable.pokemon_finizen, Type.WATER, null, 70, 45, 40, 45, 40, 75, 92, 72, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_finizen)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case PALAFIN_ZERO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_palafin), R.drawable.pokemon_palafin_zero, Type.WATER, Ability.ZERO_TO_HERO, 100, 70, 72, 53, 62, 100, 85, 65, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_palafin_zero)).setPointValue(4);
            case PALAFIN_HERO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_palafin), R.drawable.pokemon_palafin_hero, Type.WATER, null, 100, 160, 97, 106, 87, 100, 114, 86, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_palafin_hero)).setPointValue(8);
            case VAROOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_varoom), R.drawable.pokemon_varoom, Type.STEEL, null, 45, 70, 63, 30, 45, 47, 116, 84, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_varoom)).addTag(CardTags.CAN_EVOLVE).setPointValue(5);
            case REVAVROOM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_revavroom), R.drawable.pokemon_revavroom, Type.STEEL, null, 80, 119, 90, 54, 67, 90, 52, 42, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_revavroom), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_revavroom), R.drawable.pokemon_mega_revavroom, Type.STEEL, Ability.MEGA_STEELSPIKE, 80, 159, 110, 54, 67, 130, 70, 70, Type.FIRE, "")).setPointValue(5);
            case CYCLIZAR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cyclizar), R.drawable.pokemon_cyclizar, Type.DRAGON, null, 70, 95, 65, 85, 65, 121, 105, 75, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_cyclizar)).setPointValue(6);
            case ORTHWORM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_orthworm), R.drawable.pokemon_orthworm, Type.STEEL, Ability.EARTH_EATER, 70, 85, 145, 60, 55, 65, 138, 104, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_orthworm)).setPointValue(7);
            case GLIMMET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_glimmet), R.drawable.pokemon_glimmet, Type.GROUND, Ability.TOXIC_DEBRIS, 48, 35, 42, 105, 60, 60, 78, 52, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_glimmet)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case GLIMMORA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_glimmora), R.drawable.pokemon_glimmora, Type.GROUND, Ability.TOXIC_DEBRIS, 83, 55, 90, 130, 81, 86, 59, 61, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_glimmora)).setPointValue(6);
            case GREAVARD -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_greavard), R.drawable.pokemon_greavard, Type.DARK, null, 50, 61, 60, 30, 55, 34, 96, 76, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_greavard)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case HOUNDSTONE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_houndstone), R.drawable.pokemon_houndstone, Type.DARK, null, 72, 101, 100, 50, 97, 68, 38, 30, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_houndstone)).setPointValue(4);
            case FLAMIGO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flamigo), R.drawable.pokemon_flamigo, Type.FIGHTING, null, 82, 115, 74, 75, 64, 90, 71, 65, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_flamigo)).setPointValue(5);
            case CETODDLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cetoddle), R.drawable.pokemon_cetoddle, Type.ICE, Ability.THICK_FAT, 108, 68, 45, 30, 40, 43, 100, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cetoddle)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case CETITAN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_cetitan), R.drawable.pokemon_cetitan, Type.ICE, Ability.THICK_FAT, 170, 113, 65, 45, 55, 73, 48, 38, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_cetitan)).setPointValue(4);
            case VELUZA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_veluza), R.drawable.pokemon_veluza, Type.WATER, null, 90, 102, 73, 78, 65, 70, 90, 56, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_veluza)).addTag(CardTags.FISH).setPointValue(5);
            case DONDOZO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dondozo), R.drawable.pokemon_dondozo, Type.WATER, null, 150, 100, 115, 65, 65, 35, 81, 59, Type.ELECTRIC, ctx.getResources().getString(R.string.pokemon_flavor_dondozo)).setPointValue(4);
            case TATSUGIRI_CURLY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tatsugiri), R.drawable.pokemon_tatsugiri_curly, Type.DRAGON, Ability.COMMANDER, 68, 50, 60, 120, 95, 82, 42, 28, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_tatsugiri)).addTag(CardTags.FISH).setPointValue(5);
            case TATSUGIRI_DROOPY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tatsugiri), R.drawable.pokemon_tatsugiri_droopy, Type.DRAGON, Ability.COMMANDER, 68, 50, 60, 120, 95, 82, 81, 83, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_tatsugiri)).addTag(CardTags.FISH).setPointValue(6);
            case TATSUGIRI_STRETCHY -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_tatsugiri), R.drawable.pokemon_tatsugiri_stretchy, Type.DRAGON, Ability.COMMANDER, 68, 50, 60, 120, 95, 82, 102, 78, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_tatsugiri)).addTag(CardTags.FISH).setPointValue(6);
            case ANNIHILAPE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_annihilape), R.drawable.pokemon_annihilape, Type.DARK, Ability.RAGE_FIST, 110, 115, 80, 50, 90, 90, 80, 80, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_annihilape)).setPointValue(5);
            case CLODSIRE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_clodsire), R.drawable.pokemon_clodsire, Type.GROUND, Ability.POISON_POINT, 130, 75, 60, 45, 100, 20, 71, 49, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_clodsire)).setPointValue(3);
            case FARIGIRAF -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_farigiraf), R.drawable.pokemon_farigiraf, Type.PSYCHIC, Ability.POWER_SWAP, 120, 90, 70, 110, 70, 60, 61, 49, Type.DARK, ctx.getResources().getString(R.string.pokemon_flavor_farigiraf)).setPointValue(5);
            case DUDUNSPARCE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dudunsparce), R.drawable.pokemon_dudunsparce, Type.NORMAL, null, 125, 100, 80, 85, 75, 55, 58, 42, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_dudunsparce)).setPointValue(4);
            case KINGAMBIT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_kingambit), R.drawable.pokemon_kingambit, Type.DARK, Ability.GUILLOTINE, 100, 135, 120, 60, 85, 50, 105, 69, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_kingambit)).setPointValue(6);
            case GREAT_TUSK -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_great_tusk), R.drawable.pokemon_great_tusk, Type.FIGHTING, Ability.PROTOSYNTHESIS, 115, 131, 131, 53, 53, 87, 110, 112, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_great_tusk)).setPointValue(7);
            case SCREAM_TAIL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_scream_tail), R.drawable.pokemon_scream_tail, Type.FAIRY, Ability.PROTOSYNTHESIS, 115, 65, 99, 65, 115, 111, 59, 51, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_scream_tail)).setPointValue(5);
            case BRUTE_BONNET -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_brute_bonnet), R.drawable.pokemon_brute_bonnet, Type.GRASS, Ability.PROTOSYNTHESIS, 111, 127, 99, 79, 99, 55, 99, 79, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_brute_bonnet)).setPointValue(6);
            case FLUTTER_MANE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_flutter_mane), R.drawable.pokemon_flutter_mane, Type.DARK, Ability.PROTOSYNTHESIS, 55, 55, 55, 135, 135, 135, 94, 68, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_flutter_mane)).setPointValue(7);
            case SLITHER_WING -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_slither_wing), R.drawable.pokemon_slither_wing, Type.FIRE, Ability.PROTOSYNTHESIS, 85, 135, 79, 85, 105, 81, 115, 87, Type.NORMAL, ctx.getResources().getString(R.string.pokemon_flavor_slither_wing)).setPointValue(7);
            case SANDY_SHOCKS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sandy_shocks), R.drawable.pokemon_sandy_shocks, Type.ELECTRIC, Ability.PROTOSYNTHESIS, 85, 81, 97, 121, 85, 101, 127, 85, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_sandy_shocks)).setPointValue(7);
            case IRON_TREADS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_treads), R.drawable.pokemon_iron_treads, Type.STEEL, Ability.QUARK_DRIVE, 90, 112, 120, 72, 70, 106, 139, 133, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_iron_treads)).setPointValue(7);
            case IRON_BUNDLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_bundle), R.drawable.pokemon_iron_bundle, Type.ICE, Ability.QUARK_DRIVE, 56, 80, 114, 124, 60, 136, 61, 39, Type.STEEL, ctx.getResources().getString(R.string.pokemon_flavor_iron_bundle)).setPointValue(6);
            case IRON_HANDS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_hands), R.drawable.pokemon_iron_hands, Type.ELECTRIC, Ability.QUARK_DRIVE, 154, 140, 108, 50, 68, 50, 126, 90, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_iron_hands)).setPointValue(7);
            case IRON_JUGULIS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_jugulis), R.drawable.pokemon_iron_jugulis, Type.DARK, Ability.QUARK_DRIVE, 94, 80, 86, 122, 80, 108, 122, 98, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_iron_jugulis)).setPointValue(6);
            case IRON_MOTH -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_moth), R.drawable.pokemon_iron_moth, Type.FIRE, Ability.QUARK_DRIVE, 80, 70, 60, 140, 110, 110, 87, 57, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_iron_moth)).setPointValue(7);
            case IRON_THORNS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_thorns), R.drawable.pokemon_iron_thorns, Type.GROUND, Ability.QUARK_DRIVE, 100, 134, 110, 70, 84, 72, 58, 52, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_iron_thorns)).setPointValue(6);
            case FRIGIBAX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_frigibax), R.drawable.pokemon_frigibax, Type.ICE, Ability.THERMAL_EXCHANGE, 65, 75, 45, 35, 45, 55, 60, 55, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_frigibax)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case ARCTIBAX -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_arctibax), R.drawable.pokemon_arctibax, Type.ICE, Ability.THERMAL_EXCHANGE, 90, 95, 66, 45, 65, 62, 85, 70, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_arctibax)).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case BAXCALIBUR -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_baxcalibur), R.drawable.pokemon_baxcalibur, Type.ICE, Ability.THERMAL_EXCHANGE, 115, 145, 92, 75, 86, 87, 100, 100, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_baxcalibur)).setPointValue(7);
            case GIMMIGHOUL_CHEST_FORM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gimmighoul), R.drawable.pokemon_gimmighoul_chest, Type.STEEL, null, 45, 30, 70, 75, 70, 10, 45, 70, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_gimmighoul_chest_form)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GIMMIGHOUL_ROAMING_FORM -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gimmighoul), R.drawable.pokemon_gimmighoul_roaming, Type.STEEL, null, 45, 30, 25, 75, 45, 80, 90, 75, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_gimmighoul_roaming_form)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case GHOLDENGO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gholdengo), R.drawable.pokemon_gholdengo, Type.STEEL, Ability.GOOD_AS_GOLD, 87, 60, 95, 133, 91, 84, 80, 80, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_gholdengo)).setPointValue(6);
            case WO_CHIEN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_wo_chien), R.drawable.pokemon_wo_chien, Type.GRASS, Ability.TABLETS_OF_RUIN, 85, 85, 100, 95, 135, 70, 150, 110, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_wo_chien)).setPointValue(8);
            case CHIEN_PAO -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chien_pao), R.drawable.pokemon_chien_pao, Type.ICE, Ability.SWORD_OF_RUIN, 80, 120, 80, 90, 65, 135, 55, 35, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_chien_pao)).setPointValue(6);
            case TING_LU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ting_lu), R.drawable.pokemon_ting_lu, Type.GROUND, Ability.VESSEL_OF_RUIN, 155, 110, 125, 55, 80, 45, 95, 105, Type.GRASS, ctx.getResources().getString(R.string.pokemon_flavor_ting_lu)).setPointValue(5);
            case CHI_YU -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_chi_yu), R.drawable.pokemon_chi_yu, Type.FIRE, Ability.BEADS_OF_RUIN, 55, 80, 80, 135, 120, 100, 145, 95, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_chi_yu)).setPointValue(8);
            case ROARING_MOON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_roaring_moon), R.drawable.pokemon_roaring_moon, Type.DRAGON, Ability.PROTOSYNTHESIS, 105, 139, 71, 55, 101, 119, 128, 104, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_roaring_moon)).setPointValue(7);
            case IRON_VALIANT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_valiant), R.drawable.pokemon_iron_valiant, Type.FIGHTING, Ability.QUARK_DRIVE, 74, 130, 90, 120, 60, 116, 120, 108, Type.PSYCHIC, ctx.getResources().getString(R.string.pokemon_flavor_iron_valiant)).setPointValue(7);
            case KORAIDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_koraidon), R.drawable.pokemon_koraidon, Type.FIRE, Ability.ORICHALCUM_PULSE, 100, 135, 115, 85, 100, 135, 85, 115, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_koraidon)).setPointValue(7);
            case MIRAIDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_miraidon), R.drawable.pokemon_miraidon, Type.ELECTRIC, Ability.HADRON_ENGINE, 100, 85, 100, 135, 115, 135, 115, 85, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_miraidon)).setPointValue(7);
            case WALKING_WAKE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_walking_wake), R.drawable.pokemon_walking_wake, Type.WATER, Ability.PROTOSYNTHESIS, 99, 83, 91, 125, 83, 109, 122, 86, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_walking_wake)).setPointValue(6);
            case IRON_LEAVES -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_leaves), R.drawable.pokemon_iron_leaves, Type.GRASS, Ability.QUARK_DRIVE, 90, 130, 88, 70, 108, 104, 37, 43, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_iron_leaves)).setPointValue(6);
            case DIPPLIN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_dipplin), R.drawable.pokemon_dipplin, Type.GRASS, Ability.RIPEN, 80, 80, 110, 95, 80, 40, 34, 66, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_dipplin), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_dipplin), R.drawable.pokemon_mega_flapple, Type.GRASS, Ability.MEGA_OVERGROWTH, 80, 80, 150, 115, 120, 40, 34, 66, Type.FIRE, "")).addTag(CardTags.CAN_EVOLVE).setPointValue(4);
            case POLTCHAGEIST -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_poltchageist), R.drawable.pokemon_poltchageist, Type.GRASS, null, 40, 45, 45, 74, 54, 50, 57, 83, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_poltchageist)).addTag(CardTags.CAN_EVOLVE).setPointValue(3);
            case SINISTCHA -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_sinistcha), R.drawable.pokemon_sinistcha, Type.GRASS, null, 71, 60, 106, 121, 80, 70, 92, 68, Type.FIRE, ctx.getResources().getString(R.string.pokemon_flavor_sinistcha)).setPointValue(6);
            case OKIDOGI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_okidogi), R.drawable.pokemon_okidogi, Type.FIGHTING, Ability.TOXIC_CHAIN, 88, 128, 115, 58, 86, 80, 109, 103, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_okidogi)).setPointValue(6);
            case MUNKIDORI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_munkidori), R.drawable.pokemon_munkidori, Type.PSYCHIC, Ability.TOXIC_CHAIN, 88, 75, 66, 130, 90, 106, 108, 90, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_munkidori)).setPointValue(6);
            case FEZANDIPITI -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_fezandipiti), R.drawable.pokemon_fezandipiti, Type.FAIRY, Ability.TOXIC_CHAIN, 88, 91, 82, 70, 125, 99, 122, 98, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_fezandipiti)).setPointValue(6);
            //case OGERPON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_ogerpon), R.drawable.pokemon_ogerpon, Type.GRASS, Ability.MASKED_ASPECT, 80, 120, 84, 60, 96, 110, 96, 74, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_ogerpon)).setPointValue(6);
            case ARCHALUDON -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_archaludon), R.drawable.pokemon_archaludon, Type.STEEL, null, 90, 105, 130, 125, 65, 85, 51, 37, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_archaludon)).setPointValue(6);
            case HYDRAPPLE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_hydrapple), R.drawable.pokemon_hydrapple, Type.GRASS, Ability.RIPEN, 106, 80, 110, 120, 80, 44, 111, 71, Type.ICE, ctx.getResources().getString(R.string.pokemon_flavor_hydrapple)).setPointValue(6);
            case GOUGING_FIRE -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_gouging_fire), R.drawable.pokemon_gouging_fire, Type.FIRE, Ability.PROTOSYNTHESIS, 105, 115, 121, 65, 93, 91, 91, 59, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_gouging_fire)).setPointValue(6);
            case RAGING_BOLT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_raging_bolt), R.drawable.pokemon_raging_bolt, Type.ELECTRIC, Ability.PROTOSYNTHESIS, 125, 73, 91, 137, 89, 75, 146, 102, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_raging_bolt)).setPointValue(7);
            case IRON_BOULDER -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_boulder), R.drawable.pokemon_iron_boulder, Type.GROUND, Ability.QUARK_DRIVE, 90, 120, 80, 68, 108, 124, 115, 81, Type.WATER, ctx.getResources().getString(R.string.pokemon_flavor_iron_boulder)).setPointValue(6);
            case IRON_CROWN -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_iron_crown), R.drawable.pokemon_iron_crown, Type.STEEL, Ability.QUARK_DRIVE, 90, 72, 100, 122, 108, 98, 58, 62, Type.GROUND, ctx.getResources().getString(R.string.pokemon_flavor_iron_crown)).setPointValue(6);
            //case TERAPAGOS -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_terapagos), R.drawable.pokemon_terapagos_normal_form, Type.NORMAL, Ability.TERA_SHIFT, 90, 65, 85, 65, 85, 60, 90, 80, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_terapagos_normal_form)).setPointValue(4);
            //case TERAPAGOS_TERASTAL -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_terapagos), R.drawable.pokemon_terapagos_terastal_form, Type.STELLAR, Ability.TERA_SHIFT, 95, 95, 110, 105, 110, 85, 100, 80, Type.FIGHTING, ctx.getResources().getString(R.string.pokemon_flavor_terapagos_terastal_form), new Card(cr, ctx.getResources().getString(R.string.pokemon_name_mega_terapagos), R.drawable.pokemon_mega_terapagos, Type.STELLAR, Ability.TERA_STARSTORM, 160, 105, 110, 130, 110, 85, 100, 80, Type.FIGHTING, "")).setPointValue(6);
            case PECHARUNT -> new Card(cr, ctx.getResources().getString(R.string.pokemon_name_pecharunt), R.drawable.pokemon_pecharunt, Type.DARK, Ability.TOXIC_CHAIN, 88, 88, 160, 88, 88, 88, 88, 88, Type.FAIRY, ctx.getResources().getString(R.string.pokemon_flavor_pecharunt)).setPointValue(5);
            default -> new Card(cr, "", R.drawable.item_enigma_berry, Type.NORMAL, null, 0, 0, 0, 0, 0, 0, 0, 0, Type.NORMAL, "").setPointValue(0);
        };
    }

    public static CardRegistry generateRandom() {
        Random rand = new Random();
        CardRegistry[] unlocks = {ABOMASNOW, ABRA, ABSOL, AERODACTYL, AGGRON, AIPOM, ALAKAZAM, ALCREMIE, ALOLAN_DIGLETT, ALOLAN_DUGTRIO, ALOLAN_EXEGGUTOR, ALOLAN_GEODUDE, ALOLAN_GOLEM, ALOLAN_GRAVELER, ALOLAN_GRIMER, ALOLAN_MAROWAK, ALOLAN_MEOWTH, ALOLAN_MUK, ALOLAN_NINETALES, ALOLAN_PERSIAN, ALOLAN_RAICHU, ALOLAN_RATICATE, ALOLAN_RATTATA, ALOLAN_SANDSHREW, ALOLAN_SANDSLASH, ALOLAN_VULPIX, ALOMOMOLA, ALTARIA, AMAURA, AMBIPOM, AMPHAROS, ANORITH, APPLETUN, APPLIN, ARAQUANID, ARBOK, ARCANINE, ARCEUS, ARCHALUDON, ARCTIBAX, ARMALDO, ARMAROUGE, AROMATISSE, ARON, ARROKUDA, ARTICUNO, AURORUS, AVALUGG, AXEW, AZELF, BANETTE, BARRASKEWDA, BASTIODON, BATTLEBOND_GRENINJA, BAXCALIBUR, BAYLEEF, BEARTIC, BEEDRILL, BELDUM, BELLIBOLT, BELLOSSOM, BELLSPROUT, BERGMITE, BISHARP, BLACK_KYUREM, BLASTOISE, BLAZIKEN, BLITZLE, BLOODMOON_URSALUNA, BOLTUND, BOMBIRDIER, BOUNSWEET, BRAIXEN, BRIONNE, BRONZONG, BRONZOR, BRUTE_BONNET, BUIZEL, BULBASAUR, BUTTERFREE, CAMERUPT, CARBINK, CARRACOSTA, CASTFORM, CATERPIE, CELEBI, CENTISKORCH, CERULEDGE, CETITAN, CETODDLE, CHANDELURE, CHARCADET, CHARIZARD, CHARJABUG, CHARMANDER, CHARMELEON, CHERRIM, CHERUBI, CHESNAUGHT, CHESPIN, CHEWTLE, CHIKORITA, CHIMCHAR, CHINCHOU, CINDERACE, CLAMPERL, CLEFABLE, CLEFAIRY, CLEFFA, CLODSIRE, CLOYSTER, COBALION, COMBEE, COMBUSKEN, COMFEY, COPPERAJAH, CORVIKNIGHT, CORVISQUIRE, COSMOEM, COSMOG, CRANIDOS, CRESSELIA, CROAGUNK, CROBAT, CROCALOR, CROCONAW, CRYOGONAL, CUBCHOO, CUBONE, CUFANT, CUTIEFLY, CYNDAQUIL, DACHSBUN, DARKRAI, DARMANITAN_STANDARD_MODE, DARTRIX, DARUMAKA, DECIDUEYE, DEDENNE, DEINO, DELIBIRD, DELPHOX, DEWGONG, DEWOTT, DEWPIDER, DIALGA, DIALGA_ORIGIN, DIANCIE, DIGLETT, DIPPLIN, DITTO, DODRIO, DODUO, DOUBLADE, DRAGALGE, DRAGONAIR, DRAGONITE, DRAPION, DRATINI, DREDNAW, DRIZZILE, DROWZEE, DUCKLETT, DUGTRIO, DUOSION, DURALUDON, EELEKTRIK, EELEKTROSS, EEVEE, EISCUE, EKANS, ELECTABUZZ, ELECTIVIRE, ELECTRIKE, ELECTRODE, ELEKID, EMBOAR, EMOLGA, EMPOLEON, ENAMORUS_INCARNATE_FORME, ENAMORUS_THERIAN_FORME, ENTEI, ESPEON, EXEGGCUTE, EXEGGUTOR, FAN_ROTOM, FARFETCHD, FARIGIRAF, FEAROW, FENNEKIN, FERALIGATR, FIDOUGH, FINNEON, FLAAFFY, FLABEBE, FLAPPLE, FLAREON, FLETCHINDER, FLETCHLING, FLOATZEL, FLOETTE, FLORAGATO, FLORGES, FLUTTER_MANE, FLYGON, FOMANTIS, FRAXURE, FRIGIBAX, FROAKIE, FROGADIER, FROSLASS, FROSMOTH, FROST_ROTOM, FUECOCO, GABITE, GALARIAN_ARTICUNO, GALARIAN_DARMANITAN_STANDARD_MODE, GALARIAN_DARUMAKA, GALARIAN_FARFETCHD, GALARIAN_LINOONE, GALARIAN_MEOWTH, GALARIAN_MOLTRES, GALARIAN_MR_MIME, GALARIAN_PONYTA, GALARIAN_RAPIDASH, GALARIAN_SLOWBRO, GALARIAN_SLOWKING, GALARIAN_SLOWPOKE, GALARIAN_STUNFISK, GALARIAN_ZAPDOS, GALARIAN_ZIGZAGOON, GALLADE, GALVANTULA, GARBODOR, GARCHOMP, GARDEVOIR, GASTLY, GENESECT, GENGAR, GEODUDE, GHOLDENGO, GIBLE, GIMMIGHOUL_CHEST_FORM, GIMMIGHOUL_ROAMING_FORM, GIRAFARIG, GIRATINA, GIRATINA_ORIGIN, GLACEON, GLALIE, GLIMMET, GLIMMORA, GLOOM, GOGOAT, GOLBAT, GOLDEEN, GOLDUCK, GOLEM, GOODRA, GOOMY, GOREBYSS, GOUGING_FIRE, GRAFAIAI, GRANBULL, GRAVELER, GREAT_TUSK, GREEDENT, GRENINJA, GRIMER, GRIMMSNARL, GROOKEY, GROTLE, GROUDON, GROVYLE, GROWLITHE, GRUBBIN, GYARADOS, HAKAMO_O, HATENNA, HATTERENE, HATTREM, HAUNTER, HAXORUS, HEAT_ROTOM, HEATMOR, HEATRAN, HELIOLISK, HELIOPTILE, HERACROSS, HERDIER, HIPPOPOTAS, HIPPOWDON, HISUIAN_ARCANINE, HISUIAN_AVALUGG, HISUIAN_DECIDUEYE, HISUIAN_ELECTRODE, HISUIAN_GOODRA, HISUIAN_GROWLITHE, HISUIAN_LILLIGANT, HISUIAN_QWILFISH, HISUIAN_SAMUROTT, HISUIAN_SLIGGOO, HISUIAN_SNEASEL, HISUIAN_TYPHLOSION, HISUIAN_VOLTORB, HISUIAN_ZOROARK, HISUIAN_ZORUA, HO_OH, HONEDGE, HOUNDOOM, HOUNDOUR, HUNTAIL, HYDRAPPLE, HYDREIGON, HYPNO, IGGLYBUFF, IMPIDIMP, INCINEROAR, INFERNAPE, INKAY, INTELEON, IRON_BOULDER, IRON_BUNDLE, IRON_CROWN, IRON_HANDS, IRON_JUGULIS, IRON_LEAVES, IRON_MOTH, IRON_THORNS, IRON_TREADS, IRON_VALIANT, IVYSAUR, JANGMO_O, JIGGLYPUFF, JIRACHI, JOLTEON, JOLTIK, JYNX, KADABRA, KAKUNA, KANGASKHAN, KECLEON, KELDEO, KILOWATTREL, KINGAMBIT, KINGLER, KIRLIA, KLANG, KLEFKI, KLINK, KLINKLANG, KOMMO_O, KORAIDON, KRABBY, KYOGRE, KYUREM, LAIRON, LAMPENT, LANDORUS_INCARNATE_FORME, LANDORUS_THERIAN_FORME, LANTURN, LAPRAS, LARVESTA, LATIAS, LATIOS, LEAFEON, LEAVANNY, LIEPARD, LILLIGANT, LILLIPUP, LINOONE, LITLEO, LITTEN, LITWICK, LOMBRE, LOTAD, LUCARIO, LUDICOLO, LUGIA, LUMINEON, LUNALA, LUNATONE, LURANTIS, LUVDISC, LUXIO, LUXRAY, MABOSSTIFF, MACHAMP, MACHOKE, MACHOP, MAGBY, MAGCARGO, MAGEARNA, MAGIKARP, MAGMAR, MAGMORTAR, MAGNEMITE, MAGNETON, MAGNEZONE, MALAMAR, MAMOSWINE, MANAPHY, MANDIBUZZ, MANECTRIC, MANKEY, MAREANIE, MAREEP, MAROWAK, MARSHTOMP, MASCHIFF, MASQUERAIN, MAWILE, MEDICHAM, MEDITITE, MEGANIUM, MELMETAL, MELTAN, MEOWSCARADA, MEOWTH, MESPRIT, METAGROSS, METANG, METAPOD, MEW, MEWTWO, MIGHTYENA, MILCERY, MIME_JR, MIMIKYU, MINIOR_CORE, MINIOR_METEOR, MINUN, MIRAIDON, MOLTRES, MONFERNO, MORELULL, MORGREM, MORPEKO, MOW_ROTOM, MR_MIME, MR_RIME, MUDKIP, MUK, MUNCHLAX, MURKROW, NICKIT, NIDOKING, NIDOQUEEN, NIDORANF, NIDORANM, NIDORINA, NIDORINO, NINETALES, NUMEL, OBSTAGOON, ODDISH, ONIX, ORICORIO_BAILE_STYLE, ORICORIO_PAU_STYLE, ORICORIO_POM_POM_STYLE, ORICORIO_SENSU_STYLE, ORTHWORM, OSHAWOTT, OVERQWIL, PACHIRISU, PALDEAN_TAUROS_AQUA, PALDEAN_TAUROS_BLAZE, PALDEAN_TAUROS_COMBAT, PALDEAN_WOOPER, PALKIA, PALKIA_ORIGIN, PALOSSAND, PALPITOAD, PANCHAM, PANGORO, PANSEAR, PARAS, PARASECT, PAWMI, PAWMO, PAWMOT, PAWNIARD, PELIPPER, PERRSERKER, PERSIAN, PETILIL, PHIONE, PICHU, PIDGEOT, PIDGEOTTO, PIDGEY, PIGNITE, PIKACHU, PILOSWINE, PINCURCHIN, PINSIR, PIPLUP, PLUSLE, POLITOED, POLIWAG, POLIWHIRL, POLIWRATH, PONYTA, POOCHYENA, POPPLIO, PORYGON, PORYGON_Z, PORYGON2, PRIMARINA, PRIMEAPE, PRINPLUP, PSYDUCK, PURRLOIN, PYROAR, QUAGSIRE, QUAQUAVAL, QUAXLY, QUAXWELL, QUILAVA, QUILLADIN, QWILFISH, RABOOT, RAGING_BOLT, RAICHU, RAIKOU, RALTS, RAMPARDOS, RAPIDASH, RATICATE, RATTATA, RAYQUAZA, REGICE, REGIGIGAS, REGIROCK, REGISTEEL, RESHIRAM, REUNICLUS, REVAVROOM, RIBOMBEE, RILLABOOM, RIOLU, ROARING_MOON, ROOKIDEE, ROTOM, ROWLET, SABLEYE, SALANDIT, SALAZZLE, SAMUROTT, SANDSHREW, SANDSLASH, SANDY_SHOCKS, SANDYGAST, SCEPTILE, SCIZOR, SCOLIPEDE, SCORBUNNY, SCRAFTY, SCRAGGY, SCREAM_TAIL, SCYTHER, SEAKING, SEALEO, SEEL, SEISMITOAD, SERPERIOR, SERVINE, SEVIPER, SEWADDLE, SHAYMIN_LAND_FORME, SHAYMIN_SKY_FORME, SHELLDER, SHIELDON, SHIINOTIC, SHINX, SHROODLE, SHUPPET, SIMISEAR, SIZZLIPEDE, SKARMORY, SKELEDIRGE, SKIDDO, SKORUPI, SKRELP, SKUNTANK, SKWOVET, SLAKING, SLAKOTH, SLIGGOO, SLITHER_WING, SLOWBRO, SLOWKING, SLOWPOKE, SLUGMA, SLURPUFF, SMOOCHUM, SNEASEL, SNEASLER, SNIVY, SNOM, SNORLAX, SNORUNT, SNOVER, SNUBBULL, SOBBLE, SOLGALEO, SOLOSIS, SOLROCK, SPEAROW, SPHEAL, SPINDA, SPIRITOMB, SPRIGATITO, SPRITZEE, SQUIRTLE, STEELIX, STEENEE, STOUTLAND, STUNKY, SUICUNE, SUNFLORA, SUNKERN, SURSKIT, SWABLU, SWADLOON, SWAMPERT, SWANNA, SWINUB, SWIRLIX, SYLVEON, TADBULB, TALONFLAME, TAPU_BULU, TAPU_FINI, TAPU_KOKO, TAPU_LELE, TAUROS, TEDDIURSA, TENTACOOL, TENTACRUEL, TEPIG, TERRAKION, THIEVUL, THUNDURUS_INCARNATE_FORME, THUNDURUS_THERIAN_FORME, THWACKEY, TINKATINK, TINKATON, TINKATUFF, TIRTOUGA, TOGEDEMARU, TOGEKISS, TOGEPI, TOGETIC, TORCHIC, TORKOAL, TORNADUS_INCARNATE_FORME, TORNADUS_THERIAN_FORME, TORRACAT, TORTERRA, TOTODILE, TOXAPEX, TOXEL, TOXICROAK, TOXTRICITY, TRAPINCH, TREECKO, TROPIUS, TRUBBISH, TSAREENA, TURTWIG, TYMPOLE, TYNAMO, TYPHLOSION, UMBREON, UNOWN, URSALUNA, URSARING, UXIE, VANILLISH, VANILLITE, VANILLUXE, VAPOREON, VAROOM, VENIPEDE, VENOMOTH, VENONAT, VENUSAUR, VESPIQUEN, VIBRAVA, VICTINI, VICTREEBEL, VIGOROTH, VIKAVOLT, VILEPLUME, VIRIZION, VOLCANION, VOLCARONA, VOLTORB, VULLABY, VULPIX, WALKING_WAKE, WALREIN, WARTORTLE, WASH_ROTOM, WATTREL, WEAVILE, WEEDLE, WEEPINBELL, WHIRLIPEDE, WHITE_KYUREM, WIGGLYTUFF, WINGULL, WISHIWASHI, WOBBUFFET, WOOPER, WYNAUT, XERNEAS, YAMPER, YVELTAL, ZAPDOS, ZARUDE, ZEBSTRIKA, ZEKROM, ZERAORA, ZIGZAGOON, ZOROARK, ZORUA, ZUBAT, ZWEILOUS};
        return unlocks[rand.nextInt(unlocks.length)];

    }
}
